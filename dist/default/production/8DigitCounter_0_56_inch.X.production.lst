

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Sep  2 10:05:47 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	maintext,global,class=CODE,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    58                           	dabs	1,0x7E,2
    59  0000                     
    60                           ; Version 2.20
    61                           ; Generated 12/02/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC16F887 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  0006                     	;# 
   101  0007                     	;# 
   102  0008                     	;# 
   103  0009                     	;# 
   104  000A                     	;# 
   105  000B                     	;# 
   106  000C                     	;# 
   107  000D                     	;# 
   108  000E                     	;# 
   109  000E                     	;# 
   110  000F                     	;# 
   111  0010                     	;# 
   112  0011                     	;# 
   113  0012                     	;# 
   114  0013                     	;# 
   115  0014                     	;# 
   116  0015                     	;# 
   117  0015                     	;# 
   118  0016                     	;# 
   119  0017                     	;# 
   120  0018                     	;# 
   121  0019                     	;# 
   122  001A                     	;# 
   123  001B                     	;# 
   124  001B                     	;# 
   125  001C                     	;# 
   126  001D                     	;# 
   127  001E                     	;# 
   128  001F                     	;# 
   129  0081                     	;# 
   130  0085                     	;# 
   131  0086                     	;# 
   132  0087                     	;# 
   133  0088                     	;# 
   134  0089                     	;# 
   135  008C                     	;# 
   136  008D                     	;# 
   137  008E                     	;# 
   138  008F                     	;# 
   139  0090                     	;# 
   140  0091                     	;# 
   141  0092                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0093                     	;# 
   145  0094                     	;# 
   146  0095                     	;# 
   147  0096                     	;# 
   148  0097                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009A                     	;# 
   152  009B                     	;# 
   153  009C                     	;# 
   154  009D                     	;# 
   155  009E                     	;# 
   156  009F                     	;# 
   157  0105                     	;# 
   158  0107                     	;# 
   159  0108                     	;# 
   160  0109                     	;# 
   161  010C                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  0185                     	;# 
   167  0187                     	;# 
   168  0188                     	;# 
   169  0189                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172  0000                     	;# 
   173  0001                     	;# 
   174  0002                     	;# 
   175  0003                     	;# 
   176  0004                     	;# 
   177  0005                     	;# 
   178  0006                     	;# 
   179  0007                     	;# 
   180  0008                     	;# 
   181  0009                     	;# 
   182  000A                     	;# 
   183  000B                     	;# 
   184  000C                     	;# 
   185  000D                     	;# 
   186  000E                     	;# 
   187  000E                     	;# 
   188  000F                     	;# 
   189  0010                     	;# 
   190  0011                     	;# 
   191  0012                     	;# 
   192  0013                     	;# 
   193  0014                     	;# 
   194  0015                     	;# 
   195  0015                     	;# 
   196  0016                     	;# 
   197  0017                     	;# 
   198  0018                     	;# 
   199  0019                     	;# 
   200  001A                     	;# 
   201  001B                     	;# 
   202  001B                     	;# 
   203  001C                     	;# 
   204  001D                     	;# 
   205  001E                     	;# 
   206  001F                     	;# 
   207  0081                     	;# 
   208  0085                     	;# 
   209  0086                     	;# 
   210  0087                     	;# 
   211  0088                     	;# 
   212  0089                     	;# 
   213  008C                     	;# 
   214  008D                     	;# 
   215  008E                     	;# 
   216  008F                     	;# 
   217  0090                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0093                     	;# 
   221  0093                     	;# 
   222  0093                     	;# 
   223  0094                     	;# 
   224  0095                     	;# 
   225  0096                     	;# 
   226  0097                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009A                     	;# 
   230  009B                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  0105                     	;# 
   236  0107                     	;# 
   237  0108                     	;# 
   238  0109                     	;# 
   239  010C                     	;# 
   240  010C                     	;# 
   241  010D                     	;# 
   242  010E                     	;# 
   243  010F                     	;# 
   244  0185                     	;# 
   245  0187                     	;# 
   246  0188                     	;# 
   247  0189                     	;# 
   248  018C                     	;# 
   249  018D                     	;# 
   250  0000                     	;# 
   251  0001                     	;# 
   252  0002                     	;# 
   253  0003                     	;# 
   254  0004                     	;# 
   255  0005                     	;# 
   256  0006                     	;# 
   257  0007                     	;# 
   258  0008                     	;# 
   259  0009                     	;# 
   260  000A                     	;# 
   261  000B                     	;# 
   262  000C                     	;# 
   263  000D                     	;# 
   264  000E                     	;# 
   265  000E                     	;# 
   266  000F                     	;# 
   267  0010                     	;# 
   268  0011                     	;# 
   269  0012                     	;# 
   270  0013                     	;# 
   271  0014                     	;# 
   272  0015                     	;# 
   273  0015                     	;# 
   274  0016                     	;# 
   275  0017                     	;# 
   276  0018                     	;# 
   277  0019                     	;# 
   278  001A                     	;# 
   279  001B                     	;# 
   280  001B                     	;# 
   281  001C                     	;# 
   282  001D                     	;# 
   283  001E                     	;# 
   284  001F                     	;# 
   285  0081                     	;# 
   286  0085                     	;# 
   287  0086                     	;# 
   288  0087                     	;# 
   289  0088                     	;# 
   290  0089                     	;# 
   291  008C                     	;# 
   292  008D                     	;# 
   293  008E                     	;# 
   294  008F                     	;# 
   295  0090                     	;# 
   296  0091                     	;# 
   297  0092                     	;# 
   298  0093                     	;# 
   299  0093                     	;# 
   300  0093                     	;# 
   301  0094                     	;# 
   302  0095                     	;# 
   303  0096                     	;# 
   304  0097                     	;# 
   305  0098                     	;# 
   306  0099                     	;# 
   307  009A                     	;# 
   308  009B                     	;# 
   309  009C                     	;# 
   310  009D                     	;# 
   311  009E                     	;# 
   312  009F                     	;# 
   313  0105                     	;# 
   314  0107                     	;# 
   315  0108                     	;# 
   316  0109                     	;# 
   317  010C                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  010E                     	;# 
   321  010F                     	;# 
   322  0185                     	;# 
   323  0187                     	;# 
   324  0188                     	;# 
   325  0189                     	;# 
   326  018C                     	;# 
   327  018D                     	;# 
   328  0000                     	;# 
   329  0001                     	;# 
   330  0002                     	;# 
   331  0003                     	;# 
   332  0004                     	;# 
   333  0005                     	;# 
   334  0006                     	;# 
   335  0007                     	;# 
   336  0008                     	;# 
   337  0009                     	;# 
   338  000A                     	;# 
   339  000B                     	;# 
   340  000C                     	;# 
   341  000D                     	;# 
   342  000E                     	;# 
   343  000E                     	;# 
   344  000F                     	;# 
   345  0010                     	;# 
   346  0011                     	;# 
   347  0012                     	;# 
   348  0013                     	;# 
   349  0014                     	;# 
   350  0015                     	;# 
   351  0015                     	;# 
   352  0016                     	;# 
   353  0017                     	;# 
   354  0018                     	;# 
   355  0019                     	;# 
   356  001A                     	;# 
   357  001B                     	;# 
   358  001B                     	;# 
   359  001C                     	;# 
   360  001D                     	;# 
   361  001E                     	;# 
   362  001F                     	;# 
   363  0081                     	;# 
   364  0085                     	;# 
   365  0086                     	;# 
   366  0087                     	;# 
   367  0088                     	;# 
   368  0089                     	;# 
   369  008C                     	;# 
   370  008D                     	;# 
   371  008E                     	;# 
   372  008F                     	;# 
   373  0090                     	;# 
   374  0091                     	;# 
   375  0092                     	;# 
   376  0093                     	;# 
   377  0093                     	;# 
   378  0093                     	;# 
   379  0094                     	;# 
   380  0095                     	;# 
   381  0096                     	;# 
   382  0097                     	;# 
   383  0098                     	;# 
   384  0099                     	;# 
   385  009A                     	;# 
   386  009B                     	;# 
   387  009C                     	;# 
   388  009D                     	;# 
   389  009E                     	;# 
   390  009F                     	;# 
   391  0105                     	;# 
   392  0107                     	;# 
   393  0108                     	;# 
   394  0109                     	;# 
   395  010C                     	;# 
   396  010C                     	;# 
   397  010D                     	;# 
   398  010E                     	;# 
   399  010F                     	;# 
   400  0185                     	;# 
   401  0187                     	;# 
   402  0188                     	;# 
   403  0189                     	;# 
   404  018C                     	;# 
   405  018D                     	;# 
   406                           
   407                           	psect	idataBANK0
   408  1D10                     __pidataBANK0:
   409                           
   410                           ;initializer for _pulse
   411  1D10  3404               	retlw	4
   412  1D11  3400               	retlw	0
   413  1D12  3400               	retlw	0
   414  1D13  3400               	retlw	0
   415                           
   416                           ;initializer for _currentClothLength
   417  1D14  34D2               	retlw	210
   418  1D15  3404               	retlw	4
   419  1D16  3400               	retlw	0
   420  1D17  3400               	retlw	0
   421                           
   422                           ;initializer for _circumference
   423  1D18  34F4               	retlw	244
   424  1D19  3401               	retlw	1
   425  1D1A  3400               	retlw	0
   426  1D1B  3400               	retlw	0
   427                           
   428                           	psect	idataBANK1
   429  108A                     __pidataBANK1:
   430                           
   431                           ;initializer for _segCode
   432  108A  34D7               	retlw	215
   433  108B  3414               	retlw	20
   434  108C  34CE               	retlw	206
   435  108D  345E               	retlw	94
   436  108E  341D               	retlw	29
   437  108F  345B               	retlw	91
   438  1090  34DB               	retlw	219
   439  1091  3416               	retlw	22
   440  1092  34DF               	retlw	223
   441  1093  341F               	retlw	31
   442                           
   443                           ;initializer for _warningClothLength
   444  1094  3476               	retlw	118
   445  1095  347D               	retlw	125
   446  1096  3401               	retlw	1
   447  1097  3400               	retlw	0
   448                           
   449                           ;initializer for _actualClothLength
   450  1098  34D5               	retlw	213
   451  1099  34DD               	retlw	221
   452  109A  3400               	retlw	0
   453  109B  3400               	retlw	0
   454                           
   455                           	psect	idataBANK3
   456  1086                     __pidataBANK3:
   457                           
   458                           ;initializer for _rpm
   459  1086  347B               	retlw	123
   460  1087  3400               	retlw	0
   461  1088  3400               	retlw	0
   462  1089  3400               	retlw	0
   463                           
   464                           	psect	strings
   465  1000                     __pstrings:
   466  1000                     stringtab:
   467  1000                     __stringtab:
   468  1000                     stringcode:	
   469                           ;	String table - string pointers are 1 byte each
   470                           
   471  1000                     stringdir:
   472  1000  3010               	movlw	high stringdir
   473  1001  008A               	movwf	10
   474  1002  0804               	movf	4,w
   475  1003  0A84               	incf	4,f
   476  1004  0782               	addwf	2,f
   477  1005                     __stringbase:
   478  1005  3400               	retlw	0
   479  1006                     __end_of__stringtab:
   480  1006                     _FONT_DEFAULT:
   481  1006  3400               	retlw	0
   482  1007  3486               	retlw	134
   483  1008  3422               	retlw	34
   484  1009  347E               	retlw	126
   485  100A  346D               	retlw	109
   486  100B  3400               	retlw	0
   487  100C  3400               	retlw	0
   488  100D  3402               	retlw	2
   489  100E  3430               	retlw	48
   490  100F  3406               	retlw	6
   491  1010  3463               	retlw	99
   492  1011  3400               	retlw	0
   493  1012  3404               	retlw	4
   494  1013  3440               	retlw	64
   495  1014  3480               	retlw	128
   496  1015  3452               	retlw	82
   497  1016  343F               	retlw	63
   498  1017  3406               	retlw	6
   499  1018  345B               	retlw	91
   500  1019  344F               	retlw	79
   501  101A  3466               	retlw	102
   502  101B  346D               	retlw	109
   503  101C  347D               	retlw	125
   504  101D  3427               	retlw	39
   505  101E  347F               	retlw	127
   506  101F  346F               	retlw	111
   507  1020  3400               	retlw	0
   508  1021  3400               	retlw	0
   509  1022  3400               	retlw	0
   510  1023  3448               	retlw	72
   511  1024  3400               	retlw	0
   512  1025  3453               	retlw	83
   513  1026  345F               	retlw	95
   514  1027  349F               	retlw	159
   515  1028  347F               	retlw	127
   516  1029  34C3               	retlw	195
   517  102A  343F               	retlw	63
   518  102B  3479               	retlw	121
   519  102C  348B               	retlw	139
   520  102D  343D               	retlw	61
   521  102E  349D               	retlw	157
   522  102F  3406               	retlw	6
   523  1030  341F               	retlw	31
   524  1031  3469               	retlw	105
   525  1032  34C1               	retlw	193
   526  1033  3415               	retlw	21
   527  1034  3437               	retlw	55
   528  1035  343F               	retlw	63
   529  1036  348F               	retlw	143
   530  1037  3467               	retlw	103
   531  1038  3431               	retlw	49
   532  1039  345B               	retlw	91
   533  103A  3478               	retlw	120
   534  103B  343E               	retlw	62
   535  103C  342A               	retlw	42
   536  103D  341D               	retlw	29
   537  103E  3476               	retlw	118
   538  103F  346E               	retlw	110
   539  1040  345B               	retlw	91
   540  1041  3439               	retlw	57
   541  1042  3464               	retlw	100
   542  1043  340F               	retlw	15
   543  1044  3400               	retlw	0
   544  1045  3408               	retlw	8
   545  1046  3420               	retlw	32
   546  1047  345F               	retlw	95
   547  1048  347C               	retlw	124
   548  1049  34C8               	retlw	200
   549  104A  34DC               	retlw	220
   550  104B  34CF               	retlw	207
   551  104C  3431               	retlw	49
   552  104D  346F               	retlw	111
   553  104E  3474               	retlw	116
   554  104F  3410               	retlw	16
   555  1050  340E               	retlw	14
   556  1051  3475               	retlw	117
   557  1052  3430               	retlw	48
   558  1053  3455               	retlw	85
   559  1054  3454               	retlw	84
   560  1055  34D8               	retlw	216
   561  1056  3473               	retlw	115
   562  1057  3467               	retlw	103
   563  1058  3488               	retlw	136
   564  1059  346D               	retlw	109
   565  105A  34C9               	retlw	201
   566  105B  34D0               	retlw	208
   567  105C  342A               	retlw	42
   568  105D  341D               	retlw	29
   569  105E  3476               	retlw	118
   570  105F  346E               	retlw	110
   571  1060  3447               	retlw	71
   572  1061  3446               	retlw	70
   573  1062  3406               	retlw	6
   574  1063  3470               	retlw	112
   575  1064  3401               	retlw	1
   576  1065                     __end_of_FONT_DEFAULT:
   577  1065                     STR_3:
   578  1065  3450               	retlw	80	;'P'
   579  1066  3441               	retlw	65	;'A'
   580  1067  3453               	retlw	83	;'S'
   581  1068  3453               	retlw	83	;'S'
   582  1069  3420               	retlw	32	;' '
   583  106A  3400               	retlw	0
   584  106B                     STR_5:
   585  106B  3450               	retlw	80	;'P'
   586  106C  3475               	retlw	117	;'u'
   587  106D  344C               	retlw	76	;'L'
   588  106E  3453               	retlw	83	;'S'
   589  106F  3465               	retlw	101	;'e'
   590  1070  3400               	retlw	0
   591  1071                     STR_1:
   592  1071  3446               	retlw	70	;'F'
   593  1072  3420               	retlw	32	;' '
   594  1073  3453               	retlw	83	;'S'
   595  1074  3465               	retlw	101	;'e'
   596  1075  3474               	retlw	116	;'t'
   597  1076  3400               	retlw	0
   598  1077                     STR_2:
   599  1077  3450               	retlw	80	;'P'
   600  1078  3420               	retlw	32	;' '
   601  1079  3453               	retlw	83	;'S'
   602  107A  3465               	retlw	101	;'e'
   603  107B  3474               	retlw	116	;'t'
   604  107C  3400               	retlw	0
   605  107D                     STR_4:
   606  107D  3443               	retlw	67	;'C'
   607  107E  3469               	retlw	105	;'i'
   608  107F  3472               	retlw	114	;'r'
   609  1080  3463               	retlw	99	;'c'
   610  1081  3475               	retlw	117	;'u'
   611  1082  3400               	retlw	0
   612                           
   613                           	psect	nvBANK1
   614  00D0                     __pnvBANK1:
   615  00D0                     _hourMeter:
   616  00D0                     	ds	4
   617  00D4                     _resetCounter:
   618  00D4                     	ds	4
   619  00D8                     _previousCurrentClothLength:
   620  00D8                     	ds	4
   621  00DC                     _currentClothLengthBalanceMinus:
   622  00DC                     	ds	2
   623  00DE                     _currentClothLengthBalancePlus:
   624  00DE                     	ds	2
   625  000B                     _INTCONbits	set	11
   626  0003                     _STATUSbits	set	3
   627  000E                     _TMR1L	set	14
   628  000F                     _TMR1H	set	15
   629  0010                     _T1CON	set	16
   630  0042                     _RD2	set	66
   631  002C                     _RA4	set	44
   632  0035                     _RB5	set	53
   633  0034                     _RB4	set	52
   634  0043                     _RD3	set	67
   635  002B                     _RA3	set	43
   636  0029                     _RA1	set	41
   637  0028                     _RA0	set	40
   638  002A                     _RA2	set	42
   639  0032                     _RB2	set	50
   640  0033                     _RB3	set	51
   641  0031                     _RB1	set	49
   642  0060                     _TMR1IF	set	96
   643  0036                     _RB6	set	54
   644  0037                     _RB7	set	55
   645  0080                     _TMR1ON	set	128
   646  0058                     _RBIF	set	88
   647  005B                     _RBIE	set	91
   648  0059                     _INTF	set	89
   649  005C                     _INTE	set	92
   650  005E                     _PEIE	set	94
   651  005F                     _GIE	set	95
   652  004A                     _RE2	set	74
   653  0049                     _RE1	set	73
   654  0089                     _TRISE	set	137
   655  0088                     _TRISD	set	136
   656  0087                     _TRISC	set	135
   657  0086                     _TRISB	set	134
   658  0085                     _TRISA	set	133
   659  0096                     _IOCB	set	150
   660  0095                     _WPUB	set	149
   661  0460                     _TMR1IE	set	1120
   662  040E                     _INTEDG	set	1038
   663  040F                     _nRBPU	set	1039
   664  010C                     _EEDATA	set	268
   665  010D                     _EEADR	set	269
   666  018D                     _EECON2	set	397
   667  018C                     _EECON1	set	396
   668  018C                     _EECON1bits	set	396
   669  0189                     _ANSELH	set	393
   670  0188                     _ANSEL	set	392
   671                           
   672                           	psect	cinit
   673  0013                     start_initialization:	
   674                           ; #config settings
   675                           
   676  0013                     __initialization:
   677                           
   678                           ; Initialize objects allocated to BANK3
   679  0013  1783               	bsf	3,7	;select IRP bank2
   680  0014  30A1               	movlw	low (__pdataBANK3+4)
   681  0015  00FD               	movwf	btemp+-1
   682  0016  3010               	movlw	high __pidataBANK3
   683  0017  00FE               	movwf	btemp
   684  0018  3086               	movlw	low __pidataBANK3
   685  0019  00FF               	movwf	btemp+1
   686  001A  309D               	movlw	low __pdataBANK3
   687  001B  0084               	movwf	4
   688  001C  160A  158A  2559  120A  118A  	fcall	init_ram0
   689                           
   690                           ; Initialize objects allocated to BANK1
   691  0021  1383               	bcf	3,7	;select IRP bank0
   692  0022  30D0               	movlw	low (__pdataBANK1+18)
   693  0023  00FD               	movwf	btemp+-1
   694  0024  3010               	movlw	high __pidataBANK1
   695  0025  00FE               	movwf	btemp
   696  0026  308A               	movlw	low __pidataBANK1
   697  0027  00FF               	movwf	btemp+1
   698  0028  30BE               	movlw	low __pdataBANK1
   699  0029  0084               	movwf	4
   700  002A  160A  158A  2559  120A  118A  	fcall	init_ram0
   701                           
   702                           ; Initialize objects allocated to BANK0
   703  002F  305A               	movlw	low (__pdataBANK0+12)
   704  0030  00FD               	movwf	btemp+-1
   705  0031  301D               	movlw	high __pidataBANK0
   706  0032  00FE               	movwf	btemp
   707  0033  3010               	movlw	low __pidataBANK0
   708  0034  00FF               	movwf	btemp+1
   709  0035  304E               	movlw	low __pdataBANK0
   710  0036  0084               	movwf	4
   711  0037  160A  158A  2559  120A  118A  	fcall	init_ram0
   712                           
   713                           ; Clear objects allocated to BANK1
   714  003C  30A0               	movlw	low __pbssBANK1
   715  003D  0084               	movwf	4
   716  003E  30BE               	movlw	low (__pbssBANK1+30)
   717  003F  120A  158A  2000   	fcall	clear_ram0
   718                           
   719                           ; Clear objects allocated to BANK0
   720  0042  01DB               	clrf	__pbssBANK0& (0+127)
   721  0043  01DC               	clrf	(__pbssBANK0+1)& (0+127)
   722  0044  01DD               	clrf	(__pbssBANK0+2)& (0+127)
   723  0045  01DE               	clrf	(__pbssBANK0+3)& (0+127)
   724                           
   725                           ; Clear objects allocated to BITBANK0
   726  0046  01DA               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   727  0047                     end_of_initialization:	
   728                           ;End of C runtime variable initialization code
   729                           
   730  0047                     __end_of__initialization:
   731  0047  0183               	clrf	3
   732  0048  120A  158A  2A8E   	ljmp	_main	;jump to C main() function
   733                           
   734                           	psect	bitbssBANK0
   735  02D0                     __pbitbssBANK0:
   736  02D0                     _changed:
   737  02D0                     	ds	1
   738  02D1                     _encoderFlag1:
   739  02D1                     	ds	1
   740  02D2                     _encoderFlag:
   741  02D2                     	ds	1
   742  02D3                     _resetFlag:
   743  02D3                     	ds	1
   744  02D4                     _selectFlag:
   745  02D4                     	ds	1
   746  02D5                     _upFlag:
   747  02D5                     	ds	1
   748  02D6                     _menuFlag:
   749  02D6                     	ds	1
   750  02D7                     _enterFlag:
   751  02D7                     	ds	1
   752                           
   753                           	psect	bssBANK0
   754  005B                     __pbssBANK0:
   755  005B                     _blinkValue:
   756  005B                     	ds	1
   757  005C                     _editMenuPointer:
   758  005C                     	ds	1
   759  005D                     _viewMenuPointer:
   760  005D                     	ds	1
   761  005E                     _currentDisplay:
   762  005E                     	ds	1
   763                           
   764                           	psect	dataBANK0
   765  004E                     __pdataBANK0:
   766  004E                     _pulse:
   767  004E                     	ds	4
   768  0052                     _currentClothLength:
   769  0052                     	ds	4
   770  0056                     _circumference:
   771  0056                     	ds	4
   772                           
   773                           	psect	bssBANK1
   774  00A0                     __pbssBANK1:
   775  00A0                     _countingPulse:
   776  00A0                     	ds	4
   777  00A4                     _metrePerMinCounter:
   778  00A4                     	ds	4
   779  00A8                     _metrePerMin:
   780  00A8                     	ds	4
   781  00AC                     _password:
   782  00AC                     	ds	4
   783  00B0                     _hourMeterCounter:
   784  00B0                     	ds	2
   785  00B2                     _encoderSkipCount:
   786  00B2                     	ds	2
   787  00B4                     _rpmCounter:
   788  00B4                     	ds	2
   789  00B6                     _n:
   790  00B6                     	ds	1
   791  00B7                     _skipCount:
   792  00B7                     	ds	1
   793  00B8                     _timerCount:
   794  00B8                     	ds	1
   795  00B9                     _count:
   796  00B9                     	ds	1
   797  00BA                     _editValue:
   798  00BA                     	ds	1
   799  00BB                     _lastPortB:
   800  00BB                     	ds	1
   801  00BC                     _currentStateCLK:
   802  00BC                     	ds	1
   803  00BD                     _last:
   804  00BD                     	ds	1
   805                           
   806                           	psect	dataBANK1
   807  00BE                     __pdataBANK1:
   808  00BE                     _segCode:
   809  00BE                     	ds	10
   810  00C8                     _warningClothLength:
   811  00C8                     	ds	4
   812  00CC                     _actualClothLength:
   813  00CC                     	ds	4
   814                           
   815                           	psect	dataBANK3
   816  019D                     __pdataBANK3:
   817  019D                     _rpm:
   818  019D                     	ds	4
   819                           
   820                           	psect	inittext
   821  1D55                     init_fetch0:	
   822                           ;	Called with low address in FSR and high address in W
   823                           
   824  1D55  087E               	movf	126,w
   825  1D56  008A               	movwf	10
   826  1D57  087F               	movf	127,w
   827  1D58  0082               	movwf	2
   828  1D59                     init_ram0:	
   829                           ;Called with:
   830                           ;	high address of idata address in btemp 
   831                           ;	low address of idata address in btemp+1 
   832                           ;	low address of data in FSR
   833                           ;	high address + 1 of data in btemp-1
   834                           
   835  1D59  2555  160A  158A   	fcall	init_fetch0
   836  1D5C  0080               	movwf	0
   837  1D5D  0A84               	incf	4,f
   838  1D5E  0804               	movf	4,w
   839  1D5F  067D               	xorwf	125,w
   840  1D60  1903               	btfsc	3,2
   841  1D61  3400               	retlw	0
   842  1D62  0AFF               	incf	127,f
   843  1D63  1903               	btfsc	3,2
   844  1D64  0AFE               	incf	126,f
   845  1D65  2D59               	goto	init_ram0
   846                           
   847                           	psect	clrtext
   848  0800                     clear_ram0:	
   849                           ;	Called with FSR containing the base address, and
   850                           ;	W with the last address+1
   851                           
   852  0800  0064               	clrwdt	;clear the watchdog before getting into this loop
   853  0801                     clrloop0:
   854  0801  0180               	clrf	0	;clear RAM location pointed to by FSR
   855  0802  0A84               	incf	4,f	;increment pointer
   856  0803  0604               	xorwf	4,w	;XOR with final address
   857  0804  1903               	btfsc	3,2	;have we reached the end yet?
   858  0805  3400               	retlw	0	;all done for this memory range, return
   859  0806  0604               	xorwf	4,w	;XOR again to restore value
   860  0807  2801               	goto	clrloop0	;do the next byte
   861                           
   862                           	psect	cstackBANK3
   863  0190                     __pcstackBANK3:
   864  0190                     ??_increment:
   865  0190                     display1@dot:	
   866                           ; 1 bytes @ 0x0
   867                           
   868                           
   869                           ; 1 bytes @ 0x0
   870  0190                     	ds	1
   871  0191                     ??_viewMenu:
   872                           
   873                           ; 1 bytes @ 0x1
   874  0191                     	ds	3
   875  0194                     ?_displayChange:
   876  0194                     displayChange@value:	
   877                           ; 4 bytes @ 0x4
   878                           
   879                           
   880                           ; 4 bytes @ 0x4
   881  0194                     	ds	4
   882  0198                     ??_editMenu:
   883                           
   884                           ; 1 bytes @ 0x8
   885  0198                     	ds	1
   886  0199                     ??_main:
   887                           
   888                           ; 1 bytes @ 0x9
   889  0199                     	ds	4
   890                           
   891                           	psect	cstackBANK1
   892  00E0                     __pcstackBANK1:
   893  00E0                     ??_eepromRead:
   894  00E0                     ?___llmod:	
   895                           ; 1 bytes @ 0x0
   896                           
   897  00E0                     countPlus@value:	
   898                           ; 4 bytes @ 0x0
   899                           
   900  00E0                     ___llmod@divisor:	
   901                           ; 4 bytes @ 0x0
   902                           
   903                           
   904                           ; 4 bytes @ 0x0
   905  00E0                     	ds	4
   906  00E4                     ___llmod@dividend:
   907                           
   908                           ; 4 bytes @ 0x4
   909  00E4                     	ds	4
   910  00E8                     ??___llmod:
   911                           
   912                           ; 1 bytes @ 0x8
   913  00E8                     	ds	1
   914  00E9                     ___llmod@counter:
   915                           
   916                           ; 1 bytes @ 0x9
   917  00E9                     	ds	1
   918  00EA                     ?_eeprom_write:
   919  00EA                     ?_display1:	
   920                           ; 1 bytes @ 0xA
   921                           
   922  00EA                     ?_display2:	
   923                           ; 1 bytes @ 0xA
   924                           
   925  00EA                     ?_increment:	
   926                           ; 1 bytes @ 0xA
   927                           
   928  00EA                     eeprom_write@value:	
   929                           ; 4 bytes @ 0xA
   930                           
   931  00EA                     display1@value:	
   932                           ; 1 bytes @ 0xA
   933                           
   934  00EA                     display2@value:	
   935                           ; 4 bytes @ 0xA
   936                           
   937  00EA                     increment@value:	
   938                           ; 4 bytes @ 0xA
   939                           
   940                           
   941                           ; 4 bytes @ 0xA
   942  00EA                     	ds	1
   943  00EB                     ??_eeprom_write:
   944                           
   945                           ; 1 bytes @ 0xB
   946  00EB                     	ds	1
   947  00EC                     eeprom_write@addr:
   948                           
   949                           ; 1 bytes @ 0xC
   950  00EC                     	ds	1
   951  00ED                     ??_editValues:
   952                           
   953                           ; 1 bytes @ 0xD
   954  00ED                     	ds	1
   955  00EE                     ??_display1:
   956  00EE                     ??_display2:	
   957                           ; 1 bytes @ 0xE
   958                           
   959  00EE                     ??_displayChange:	
   960                           ; 1 bytes @ 0xE
   961                           
   962                           
   963                           ; 1 bytes @ 0xE
   964  00EE                     	ds	2
   965                           
   966                           	psect	cstackCOMMON
   967  0070                     __pcstackCOMMON:
   968  0070                     ?_initializer:
   969  0070                     ?_eepromRead:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0070                     ?_editMenu:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0070                     ?_editValues:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0070                     ?_resetSwitch:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0070                     ?_viewMenu:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0070                     ?_encoder:	
   985                           ; 1 bytes @ 0x0
   986                           
   987  0070                     ?_eeprom_read:	
   988                           ; 1 bytes @ 0x0
   989                           
   990  0070                     ?_led:	
   991                           ; 1 bytes @ 0x0
   992                           
   993  0070                     ?_upSwitch:	
   994                           ; 1 bytes @ 0x0
   995                           
   996  0070                     ?_displayString:	
   997                           ; 1 bytes @ 0x0
   998                           
   999  0070                     ?_menuSwitch:	
  1000                           ; 1 bytes @ 0x0
  1001                           
  1002  0070                     ?_enterSwitch:	
  1003                           ; 1 bytes @ 0x0
  1004                           
  1005  0070                     ?_main:	
  1006                           ; 1 bytes @ 0x0
  1007                           
  1008  0070                     ?_highISR:	
  1009                           ; 1 bytes @ 0x0
  1010                           
  1011  0070                     ?_dataPass:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014  0070                     ?_selectSwitch:	
  1015                           ; 1 bytes @ 0x0
  1016                           
  1017  0070                     ?___awmod:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020  0070                     ?i1___lldiv:	
  1021                           ; 2 bytes @ 0x0
  1022                           
  1023  0070                     ___awmod@divisor:	
  1024                           ; 4 bytes @ 0x0
  1025                           
  1026  0070                     i1___lldiv@divisor:	
  1027                           ; 2 bytes @ 0x0
  1028                           
  1029                           
  1030                           ; 4 bytes @ 0x0
  1031  0070                     	ds	2
  1032  0072                     ___awmod@dividend:
  1033                           
  1034                           ; 2 bytes @ 0x2
  1035  0072                     	ds	2
  1036  0074                     ??___awmod:
  1037  0074                     i1___lldiv@dividend:	
  1038                           ; 1 bytes @ 0x4
  1039                           
  1040                           
  1041                           ; 4 bytes @ 0x4
  1042  0074                     	ds	1
  1043  0075                     ___awmod@counter:
  1044                           
  1045                           ; 1 bytes @ 0x5
  1046  0075                     	ds	1
  1047  0076                     ___awmod@sign:
  1048                           
  1049                           ; 1 bytes @ 0x6
  1050  0076                     	ds	2
  1051  0078                     ??i1___lldiv:
  1052                           
  1053                           ; 1 bytes @ 0x8
  1054  0078                     	ds	1
  1055  0079                     i1___lldiv@quotient:
  1056                           
  1057                           ; 4 bytes @ 0x9
  1058  0079                     	ds	4
  1059  007D                     i1___lldiv@counter:
  1060                           
  1061                           ; 1 bytes @ 0xD
  1062  007D                     	ds	1
  1063                           
  1064                           	psect	cstackBANK0
  1065  0020                     __pcstackBANK0:
  1066  0020                     ?i1___llmod:
  1067  0020                     i1___llmod@divisor:	
  1068                           ; 4 bytes @ 0x0
  1069                           
  1070                           
  1071                           ; 4 bytes @ 0x0
  1072  0020                     	ds	4
  1073  0024                     i1___llmod@dividend:
  1074                           
  1075                           ; 4 bytes @ 0x4
  1076  0024                     	ds	4
  1077  0028                     ??i1___llmod:
  1078                           
  1079                           ; 1 bytes @ 0x8
  1080  0028                     	ds	1
  1081  0029                     i1___llmod@counter:
  1082                           
  1083                           ; 1 bytes @ 0x9
  1084  0029                     	ds	1
  1085  002A                     ?i1_eeprom_write:
  1086  002A                     i1eeprom_write@value:	
  1087                           ; 1 bytes @ 0xA
  1088                           
  1089                           
  1090                           ; 1 bytes @ 0xA
  1091  002A                     	ds	1
  1092  002B                     ??i1_eeprom_write:
  1093                           
  1094                           ; 1 bytes @ 0xB
  1095  002B                     	ds	1
  1096  002C                     i1eeprom_write@addr:
  1097                           
  1098                           ; 1 bytes @ 0xC
  1099  002C                     	ds	1
  1100  002D                     ??_highISR:
  1101                           
  1102                           ; 1 bytes @ 0xD
  1103  002D                     	ds	4
  1104  0031                     ??_initializer:
  1105  0031                     ??_resetSwitch:	
  1106                           ; 1 bytes @ 0x11
  1107                           
  1108  0031                     ??_encoder:	
  1109                           ; 1 bytes @ 0x11
  1110                           
  1111  0031                     ??_eeprom_read:	
  1112                           ; 1 bytes @ 0x11
  1113                           
  1114  0031                     ??_upSwitch:	
  1115                           ; 1 bytes @ 0x11
  1116                           
  1117  0031                     ??_menuSwitch:	
  1118                           ; 1 bytes @ 0x11
  1119                           
  1120  0031                     ??_enterSwitch:	
  1121                           ; 1 bytes @ 0x11
  1122                           
  1123  0031                     ??_dataPass:	
  1124                           ; 1 bytes @ 0x11
  1125                           
  1126  0031                     ??_selectSwitch:	
  1127                           ; 1 bytes @ 0x11
  1128                           
  1129  0031                     ?___aldiv:	
  1130                           ; 1 bytes @ 0x11
  1131                           
  1132  0031                     ?___almod:	
  1133                           ; 4 bytes @ 0x11
  1134                           
  1135  0031                     ___aldiv@divisor:	
  1136                           ; 4 bytes @ 0x11
  1137                           
  1138  0031                     ___almod@divisor:	
  1139                           ; 4 bytes @ 0x11
  1140                           
  1141                           
  1142                           ; 4 bytes @ 0x11
  1143  0031                     	ds	1
  1144  0032                     dataPass@data:
  1145  0032                     eeprom_read@addr:	
  1146                           ; 1 bytes @ 0x12
  1147                           
  1148                           
  1149                           ; 1 bytes @ 0x12
  1150  0032                     	ds	1
  1151  0033                     ?___wmul:
  1152  0033                     ?___lmul:	
  1153                           ; 2 bytes @ 0x13
  1154                           
  1155  0033                     dataPass@i:	
  1156                           ; 4 bytes @ 0x13
  1157                           
  1158  0033                     ___wmul@multiplier:	
  1159                           ; 1 bytes @ 0x13
  1160                           
  1161  0033                     ___lmul@multiplier:	
  1162                           ; 2 bytes @ 0x13
  1163                           
  1164                           
  1165                           ; 4 bytes @ 0x13
  1166  0033                     	ds	1
  1167  0034                     ??_led:
  1168  0034                     ??_displayString:	
  1169                           ; 1 bytes @ 0x14
  1170                           
  1171                           
  1172                           ; 1 bytes @ 0x14
  1173  0034                     	ds	1
  1174  0035                     ___wmul@multiplicand:
  1175  0035                     ___aldiv@dividend:	
  1176                           ; 2 bytes @ 0x15
  1177                           
  1178  0035                     ___almod@dividend:	
  1179                           ; 4 bytes @ 0x15
  1180                           
  1181                           
  1182                           ; 4 bytes @ 0x15
  1183  0035                     	ds	1
  1184  0036                     led@value:
  1185  0036                     displayString@string:	
  1186                           ; 1 bytes @ 0x16
  1187                           
  1188                           
  1189                           ; 1 bytes @ 0x16
  1190  0036                     	ds	1
  1191  0037                     ??___wmul:
  1192  0037                     ___wmul@product:	
  1193                           ; 1 bytes @ 0x17
  1194                           
  1195  0037                     ___lmul@multiplicand:	
  1196                           ; 2 bytes @ 0x17
  1197                           
  1198                           
  1199                           ; 4 bytes @ 0x17
  1200  0037                     	ds	2
  1201  0039                     ??___aldiv:
  1202  0039                     ??___almod:	
  1203                           ; 1 bytes @ 0x19
  1204                           
  1205                           
  1206                           ; 1 bytes @ 0x19
  1207  0039                     	ds	1
  1208  003A                     ___aldiv@counter:
  1209  003A                     ___almod@counter:	
  1210                           ; 1 bytes @ 0x1A
  1211                           
  1212                           
  1213                           ; 1 bytes @ 0x1A
  1214  003A                     	ds	1
  1215  003B                     ??___lmul:
  1216  003B                     ___aldiv@sign:	
  1217                           ; 1 bytes @ 0x1B
  1218                           
  1219  003B                     ___almod@sign:	
  1220                           ; 1 bytes @ 0x1B
  1221                           
  1222                           
  1223                           ; 1 bytes @ 0x1B
  1224  003B                     	ds	1
  1225  003C                     ___lmul@product:
  1226  003C                     ___aldiv@quotient:	
  1227                           ; 4 bytes @ 0x1C
  1228                           
  1229                           
  1230                           ; 4 bytes @ 0x1C
  1231  003C                     	ds	4
  1232  0040                     ?_countPlus:
  1233  0040                     ?_countMinus:	
  1234                           ; 4 bytes @ 0x20
  1235                           
  1236  0040                     ?___lldiv:	
  1237                           ; 4 bytes @ 0x20
  1238                           
  1239  0040                     ___lldiv@divisor:	
  1240                           ; 4 bytes @ 0x20
  1241                           
  1242                           
  1243                           ; 4 bytes @ 0x20
  1244  0040                     	ds	4
  1245  0044                     ??_countPlus:
  1246  0044                     ??_countMinus:	
  1247                           ; 1 bytes @ 0x24
  1248                           
  1249  0044                     ___lldiv@dividend:	
  1250                           ; 1 bytes @ 0x24
  1251                           
  1252                           
  1253                           ; 4 bytes @ 0x24
  1254  0044                     	ds	4
  1255  0048                     ??___lldiv:
  1256  0048                     countMinus@value:	
  1257                           ; 1 bytes @ 0x28
  1258                           
  1259                           
  1260                           ; 4 bytes @ 0x28
  1261  0048                     	ds	1
  1262  0049                     ___lldiv@quotient:
  1263                           
  1264                           ; 4 bytes @ 0x29
  1265  0049                     	ds	4
  1266  004D                     ___lldiv@counter:
  1267                           
  1268                           ; 1 bytes @ 0x2D
  1269  004D                     	ds	1
  1270                           
  1271                           	psect	maintext
  1272  0A8E                     __pmaintext:	
  1273 ;;
  1274 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1275 ;;
  1276 ;; *************** function _main *****************
  1277 ;; Defined at:
  1278 ;;		line 40 in file "newmain.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;		None
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;		None
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : B00/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1292 ;;      Params:         0       0       0       0       0
  1293 ;;      Locals:         0       0       0       0       0
  1294 ;;      Temps:          0       0       0       4       0
  1295 ;;      Totals:         0       0       0       4       0
  1296 ;;Total ram usage:        4 bytes
  1297 ;; Hardware stack levels required when called: 6
  1298 ;; This function calls:
  1299 ;;		___lldiv
  1300 ;;		___llmod
  1301 ;;		___lmul
  1302 ;;		_countMinus
  1303 ;;		_countPlus
  1304 ;;		_editMenu
  1305 ;;		_editValues
  1306 ;;		_eepromRead
  1307 ;;		_eeprom_write
  1308 ;;		_encoder
  1309 ;;		_initializer
  1310 ;;		_resetSwitch
  1311 ;;		_viewMenu
  1312 ;; This function is called by:
  1313 ;;		Startup code after reset
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           
  1318                           ;psect for function _main
  1319  0A8E                     _main:
  1320                           
  1321                           ;newmain.c: 41:     initializer();
  1322                           
  1323                           ;incstack = 0
  1324                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1325  0A8E  160A  158A  260D  120A  158A  	fcall	_initializer
  1326                           
  1327                           ;newmain.c: 42:     eepromRead();
  1328  0A93  120A  118A  204B  120A  158A  	fcall	_eepromRead
  1329  0A98                     l3908:
  1330                           
  1331                           ;newmain.c: 44:         editMenu();
  1332  0A98  160A  118A  2660  120A  158A  	fcall	_editMenu
  1333                           
  1334                           ;newmain.c: 45:         editValues();
  1335  0A9D  120A  158A  2531  120A  158A  	fcall	_editValues
  1336                           
  1337                           ;newmain.c: 47:         if(resetSwitch()){
  1338  0AA2  120A  118A  27F2  120A  158A  	fcall	_resetSwitch
  1339  0AA7  3A00               	xorlw	0
  1340  0AA8  1903               	skipnz
  1341  0AA9  2B99               	goto	l3942
  1342                           
  1343                           ;newmain.c: 48:             if(viewMenuPointer == 0){
  1344  0AAA  1283               	bcf	3,5	;RP0=0, select bank0
  1345  0AAB  085D               	movf	_viewMenuPointer,w	;volatile
  1346  0AAC  1D03               	btfss	3,2
  1347  0AAD  2B7E               	goto	l3934
  1348                           
  1349                           ;newmain.c: 49:                 if(currentClothLength){
  1350  0AAE  0855               	movf	_currentClothLength+3,w	;volatile
  1351  0AAF  0454               	iorwf	_currentClothLength+2,w	;volatile
  1352  0AB0  0453               	iorwf	_currentClothLength+1,w	;volatile
  1353  0AB1  0452               	iorwf	_currentClothLength,w	;volatile
  1354  0AB2  1903               	skipnz
  1355  0AB3  2AC3               	goto	l208
  1356                           
  1357                           ;newmain.c: 50:                     previousCurrentClothLength = currentClothLength;
  1358  0AB4  0855               	movf	_currentClothLength+3,w	;volatile
  1359  0AB5  1683               	bsf	3,5	;RP0=1, select bank1
  1360  0AB6  00DB               	movwf	(_previousCurrentClothLength+3)^(0+128)	;volatile
  1361  0AB7  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0AB8  0854               	movf	_currentClothLength+2,w	;volatile
  1363  0AB9  1683               	bsf	3,5	;RP0=1, select bank1
  1364  0ABA  00DA               	movwf	(_previousCurrentClothLength+2)^(0+128)	;volatile
  1365  0ABB  1283               	bcf	3,5	;RP0=0, select bank0
  1366  0ABC  0853               	movf	_currentClothLength+1,w	;volatile
  1367  0ABD  1683               	bsf	3,5	;RP0=1, select bank1
  1368  0ABE  00D9               	movwf	(_previousCurrentClothLength+1)^(0+128)	;volatile
  1369  0ABF  1283               	bcf	3,5	;RP0=0, select bank0
  1370  0AC0  0852               	movf	_currentClothLength,w	;volatile
  1371  0AC1  1683               	bsf	3,5	;RP0=1, select bank1
  1372  0AC2  00D8               	movwf	_previousCurrentClothLength^(0+128)	;volatile
  1373  0AC3                     l208:	
  1374                           ;newmain.c: 51:                 }
  1375                           
  1376                           
  1377                           ;newmain.c: 52:                 resetCounter += 1;
  1378  0AC3  3001               	movlw	1
  1379  0AC4  1683               	bsf	3,5	;RP0=1, select bank1
  1380  0AC5  07D4               	addwf	_resetCounter^(0+128),f	;volatile
  1381  0AC6  3000               	movlw	0
  1382  0AC7  1803               	skipnc
  1383  0AC8  3001               	movlw	1
  1384  0AC9  07D5               	addwf	(_resetCounter+1)^(0+128),f	;volatile
  1385  0ACA  3000               	movlw	0
  1386  0ACB  1803               	skipnc
  1387  0ACC  3001               	movlw	1
  1388  0ACD  07D6               	addwf	(_resetCounter+2)^(0+128),f	;volatile
  1389  0ACE  3000               	movlw	0
  1390  0ACF  1803               	skipnc
  1391  0AD0  3001               	movlw	1
  1392  0AD1  07D7               	addwf	(_resetCounter+3)^(0+128),f	;volatile
  1393                           
  1394                           ;newmain.c: 53:                 eeprom_write(0x14,resetCounter/(10000UL));
  1395  0AD2  3000               	movlw	0
  1396  0AD3  1283               	bcf	3,5	;RP0=0, select bank0
  1397  0AD4  00C3               	movwf	___lldiv@divisor+3
  1398  0AD5  3000               	movlw	0
  1399  0AD6  00C2               	movwf	___lldiv@divisor+2
  1400  0AD7  3027               	movlw	39
  1401  0AD8  00C1               	movwf	___lldiv@divisor+1
  1402  0AD9  3010               	movlw	16
  1403  0ADA  00C0               	movwf	___lldiv@divisor
  1404  0ADB  1683               	bsf	3,5	;RP0=1, select bank1
  1405  0ADC  0857               	movf	(_resetCounter+3)^(0+128),w	;volatile
  1406  0ADD  1283               	bcf	3,5	;RP0=0, select bank0
  1407  0ADE  00C7               	movwf	___lldiv@dividend+3
  1408  0ADF  1683               	bsf	3,5	;RP0=1, select bank1
  1409  0AE0  0856               	movf	(_resetCounter+2)^(0+128),w	;volatile
  1410  0AE1  1283               	bcf	3,5	;RP0=0, select bank0
  1411  0AE2  00C6               	movwf	___lldiv@dividend+2
  1412  0AE3  1683               	bsf	3,5	;RP0=1, select bank1
  1413  0AE4  0855               	movf	(_resetCounter+1)^(0+128),w	;volatile
  1414  0AE5  1283               	bcf	3,5	;RP0=0, select bank0
  1415  0AE6  00C5               	movwf	___lldiv@dividend+1
  1416  0AE7  1683               	bsf	3,5	;RP0=1, select bank1
  1417  0AE8  0854               	movf	_resetCounter^(0+128),w	;volatile
  1418  0AE9  1283               	bcf	3,5	;RP0=0, select bank0
  1419  0AEA  00C4               	movwf	___lldiv@dividend
  1420  0AEB  160A  118A  20FA  120A  158A  	fcall	___lldiv
  1421  0AF0  0840               	movf	?___lldiv,w
  1422  0AF1  1683               	bsf	3,5	;RP0=1, select bank3
  1423  0AF2  1703               	bsf	3,6	;RP1=1, select bank3
  1424  0AF3  0099               	movwf	??_main^(0+384)
  1425  0AF4  0819               	movf	??_main^(0+384),w
  1426  0AF5  1303               	bcf	3,6	;RP1=0, select bank1
  1427  0AF6  00EA               	movwf	eeprom_write@value^(0+128)
  1428  0AF7  3014               	movlw	20
  1429  0AF8  160A  158A  25E8  120A  158A  	fcall	_eeprom_write
  1430                           
  1431                           ;newmain.c: 54:                 eeprom_write(0x15,(resetCounter/100)%100);
  1432  0AFD  3000               	movlw	0
  1433  0AFE  1303               	bcf	3,6	;RP1=0, select bank1
  1434  0AFF  00E3               	movwf	(___llmod@divisor+3)^(0+128)
  1435  0B00  3000               	movlw	0
  1436  0B01  00E2               	movwf	(___llmod@divisor+2)^(0+128)
  1437  0B02  3000               	movlw	0
  1438  0B03  00E1               	movwf	(___llmod@divisor+1)^(0+128)
  1439  0B04  3064               	movlw	100
  1440  0B05  00E0               	movwf	___llmod@divisor^(0+128)
  1441  0B06  3000               	movlw	0
  1442  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  1443  0B08  00C3               	movwf	___lldiv@divisor+3
  1444  0B09  3000               	movlw	0
  1445  0B0A  00C2               	movwf	___lldiv@divisor+2
  1446  0B0B  3000               	movlw	0
  1447  0B0C  00C1               	movwf	___lldiv@divisor+1
  1448  0B0D  3064               	movlw	100
  1449  0B0E  00C0               	movwf	___lldiv@divisor
  1450  0B0F  1683               	bsf	3,5	;RP0=1, select bank1
  1451  0B10  0857               	movf	(_resetCounter+3)^(0+128),w	;volatile
  1452  0B11  1283               	bcf	3,5	;RP0=0, select bank0
  1453  0B12  00C7               	movwf	___lldiv@dividend+3
  1454  0B13  1683               	bsf	3,5	;RP0=1, select bank1
  1455  0B14  0856               	movf	(_resetCounter+2)^(0+128),w	;volatile
  1456  0B15  1283               	bcf	3,5	;RP0=0, select bank0
  1457  0B16  00C6               	movwf	___lldiv@dividend+2
  1458  0B17  1683               	bsf	3,5	;RP0=1, select bank1
  1459  0B18  0855               	movf	(_resetCounter+1)^(0+128),w	;volatile
  1460  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  1461  0B1A  00C5               	movwf	___lldiv@dividend+1
  1462  0B1B  1683               	bsf	3,5	;RP0=1, select bank1
  1463  0B1C  0854               	movf	_resetCounter^(0+128),w	;volatile
  1464  0B1D  1283               	bcf	3,5	;RP0=0, select bank0
  1465  0B1E  00C4               	movwf	___lldiv@dividend
  1466  0B1F  160A  118A  20FA  120A  158A  	fcall	___lldiv
  1467  0B24  0843               	movf	?___lldiv+3,w
  1468  0B25  1683               	bsf	3,5	;RP0=1, select bank1
  1469  0B26  00E7               	movwf	(___llmod@dividend+3)^(0+128)
  1470  0B27  1283               	bcf	3,5	;RP0=0, select bank0
  1471  0B28  0842               	movf	?___lldiv+2,w
  1472  0B29  1683               	bsf	3,5	;RP0=1, select bank1
  1473  0B2A  00E6               	movwf	(___llmod@dividend+2)^(0+128)
  1474  0B2B  1283               	bcf	3,5	;RP0=0, select bank0
  1475  0B2C  0841               	movf	?___lldiv+1,w
  1476  0B2D  1683               	bsf	3,5	;RP0=1, select bank1
  1477  0B2E  00E5               	movwf	(___llmod@dividend+1)^(0+128)
  1478  0B2F  1283               	bcf	3,5	;RP0=0, select bank0
  1479  0B30  0840               	movf	?___lldiv,w
  1480  0B31  1683               	bsf	3,5	;RP0=1, select bank1
  1481  0B32  00E4               	movwf	___llmod@dividend^(0+128)
  1482  0B33  160A  158A  27B4  120A  158A  	fcall	___llmod
  1483  0B38  0860               	movf	?___llmod^(0+128),w
  1484  0B39  1703               	bsf	3,6	;RP1=1, select bank3
  1485  0B3A  0099               	movwf	??_main^(0+384)
  1486  0B3B  0819               	movf	??_main^(0+384),w
  1487  0B3C  1303               	bcf	3,6	;RP1=0, select bank1
  1488  0B3D  00EA               	movwf	eeprom_write@value^(0+128)
  1489  0B3E  3015               	movlw	21
  1490  0B3F  160A  158A  25E8  120A  158A  	fcall	_eeprom_write
  1491                           
  1492                           ;newmain.c: 55:                 eeprom_write(0x16,resetCounter%100);
  1493  0B44  3000               	movlw	0
  1494  0B45  1303               	bcf	3,6	;RP1=0, select bank1
  1495  0B46  00E3               	movwf	(___llmod@divisor+3)^(0+128)
  1496  0B47  3000               	movlw	0
  1497  0B48  00E2               	movwf	(___llmod@divisor+2)^(0+128)
  1498  0B49  3000               	movlw	0
  1499  0B4A  00E1               	movwf	(___llmod@divisor+1)^(0+128)
  1500  0B4B  3064               	movlw	100
  1501  0B4C  00E0               	movwf	___llmod@divisor^(0+128)
  1502  0B4D  0857               	movf	(_resetCounter+3)^(0+128),w	;volatile
  1503  0B4E  00E7               	movwf	(___llmod@dividend+3)^(0+128)
  1504  0B4F  0856               	movf	(_resetCounter+2)^(0+128),w	;volatile
  1505  0B50  00E6               	movwf	(___llmod@dividend+2)^(0+128)
  1506  0B51  0855               	movf	(_resetCounter+1)^(0+128),w	;volatile
  1507  0B52  00E5               	movwf	(___llmod@dividend+1)^(0+128)
  1508  0B53  0854               	movf	_resetCounter^(0+128),w	;volatile
  1509  0B54  00E4               	movwf	___llmod@dividend^(0+128)
  1510  0B55  160A  158A  27B4  120A  158A  	fcall	___llmod
  1511  0B5A  0860               	movf	?___llmod^(0+128),w
  1512  0B5B  1703               	bsf	3,6	;RP1=1, select bank3
  1513  0B5C  0099               	movwf	??_main^(0+384)
  1514  0B5D  0819               	movf	??_main^(0+384),w
  1515  0B5E  1303               	bcf	3,6	;RP1=0, select bank1
  1516  0B5F  00EA               	movwf	eeprom_write@value^(0+128)
  1517  0B60  3016               	movlw	22
  1518  0B61  160A  158A  25E8  120A  158A  	fcall	_eeprom_write
  1519                           
  1520                           ;newmain.c: 56:                 currentClothLength = 0;
  1521  0B66  3000               	movlw	0
  1522  0B67  1283               	bcf	3,5	;RP0=0, select bank0
  1523  0B68  1303               	bcf	3,6	;RP1=0, select bank0
  1524  0B69  00D5               	movwf	_currentClothLength+3	;volatile
  1525  0B6A  3000               	movlw	0
  1526  0B6B  00D4               	movwf	_currentClothLength+2	;volatile
  1527  0B6C  3000               	movlw	0
  1528  0B6D  00D3               	movwf	_currentClothLength+1	;volatile
  1529  0B6E  3000               	movlw	0
  1530  0B6F  00D2               	movwf	_currentClothLength	;volatile
  1531                           
  1532                           ;newmain.c: 57:                 metrePerMin = 0;
  1533  0B70  3000               	movlw	0
  1534  0B71  1683               	bsf	3,5	;RP0=1, select bank1
  1535  0B72  00AB               	movwf	(_metrePerMin+3)^(0+128)	;volatile
  1536  0B73  3000               	movlw	0
  1537  0B74  00AA               	movwf	(_metrePerMin+2)^(0+128)	;volatile
  1538  0B75  3000               	movlw	0
  1539  0B76  00A9               	movwf	(_metrePerMin+1)^(0+128)	;volatile
  1540  0B77  3000               	movlw	0
  1541  0B78  00A8               	movwf	_metrePerMin^(0+128)	;volatile
  1542                           
  1543                           ;newmain.c: 58:                 currentClothLengthBalanceMinus = 0;
  1544  0B79  01DC               	clrf	_currentClothLengthBalanceMinus^(0+128)	;volatile
  1545  0B7A  01DD               	clrf	(_currentClothLengthBalanceMinus+1)^(0+128)	;volatile
  1546                           
  1547                           ;newmain.c: 59:                 currentClothLengthBalancePlus = 0;
  1548  0B7B  01DE               	clrf	_currentClothLengthBalancePlus^(0+128)	;volatile
  1549  0B7C  01DF               	clrf	(_currentClothLengthBalancePlus+1)^(0+128)	;volatile
  1550                           
  1551                           ;newmain.c: 60:             }
  1552  0B7D  2B99               	goto	l3942
  1553  0B7E                     l3934:
  1554  0B7E  3002               	movlw	2
  1555  0B7F  065D               	xorwf	_viewMenuPointer,w	;volatile
  1556  0B80  1D03               	btfss	3,2
  1557  0B81  2B8C               	goto	l3938
  1558                           
  1559                           ;newmain.c: 62:                 resetCounter = 0;
  1560  0B82  3000               	movlw	0
  1561  0B83  1683               	bsf	3,5	;RP0=1, select bank1
  1562  0B84  00D7               	movwf	(_resetCounter+3)^(0+128)	;volatile
  1563  0B85  3000               	movlw	0
  1564  0B86  00D6               	movwf	(_resetCounter+2)^(0+128)	;volatile
  1565  0B87  3000               	movlw	0
  1566  0B88  00D5               	movwf	(_resetCounter+1)^(0+128)	;volatile
  1567  0B89  3000               	movlw	0
  1568  0B8A  00D4               	movwf	_resetCounter^(0+128)	;volatile
  1569                           
  1570                           ;newmain.c: 63:             }
  1571  0B8B  2B99               	goto	l3942
  1572  0B8C                     l3938:
  1573  0B8C  3003               	movlw	3
  1574  0B8D  065D               	xorwf	_viewMenuPointer,w	;volatile
  1575  0B8E  1D03               	btfss	3,2
  1576  0B8F  2B99               	goto	l3942
  1577                           
  1578                           ;newmain.c: 65:                 hourMeter = 0;
  1579  0B90  3000               	movlw	0
  1580  0B91  1683               	bsf	3,5	;RP0=1, select bank1
  1581  0B92  00D3               	movwf	(_hourMeter+3)^(0+128)	;volatile
  1582  0B93  3000               	movlw	0
  1583  0B94  00D2               	movwf	(_hourMeter+2)^(0+128)	;volatile
  1584  0B95  3000               	movlw	0
  1585  0B96  00D1               	movwf	(_hourMeter+1)^(0+128)	;volatile
  1586  0B97  3000               	movlw	0
  1587  0B98  00D0               	movwf	_hourMeter^(0+128)	;volatile
  1588  0B99                     l3942:
  1589                           
  1590                           ;newmain.c: 69:         if(currentClothLength >= (actualClothLength * 10)){
  1591  0B99  1683               	bsf	3,5	;RP0=1, select bank1
  1592  0B9A  084F               	movf	(_actualClothLength+3)^(0+128),w	;volatile
  1593  0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  1594  0B9C  00B6               	movwf	___lmul@multiplier+3
  1595  0B9D  1683               	bsf	3,5	;RP0=1, select bank1
  1596  0B9E  084E               	movf	(_actualClothLength+2)^(0+128),w	;volatile
  1597  0B9F  1283               	bcf	3,5	;RP0=0, select bank0
  1598  0BA0  00B5               	movwf	___lmul@multiplier+2
  1599  0BA1  1683               	bsf	3,5	;RP0=1, select bank1
  1600  0BA2  084D               	movf	(_actualClothLength+1)^(0+128),w	;volatile
  1601  0BA3  1283               	bcf	3,5	;RP0=0, select bank0
  1602  0BA4  00B4               	movwf	___lmul@multiplier+1
  1603  0BA5  1683               	bsf	3,5	;RP0=1, select bank1
  1604  0BA6  084C               	movf	_actualClothLength^(0+128),w	;volatile
  1605  0BA7  1283               	bcf	3,5	;RP0=0, select bank0
  1606  0BA8  00B3               	movwf	___lmul@multiplier
  1607  0BA9  3000               	movlw	0
  1608  0BAA  00BA               	movwf	___lmul@multiplicand+3
  1609  0BAB  3000               	movlw	0
  1610  0BAC  00B9               	movwf	___lmul@multiplicand+2
  1611  0BAD  3000               	movlw	0
  1612  0BAE  00B8               	movwf	___lmul@multiplicand+1
  1613  0BAF  300A               	movlw	10
  1614  0BB0  00B7               	movwf	___lmul@multiplicand
  1615  0BB1  160A  158A  2699  120A  158A  	fcall	___lmul
  1616  0BB6  0836               	movf	?___lmul+3,w
  1617  0BB7  0255               	subwf	_currentClothLength+3,w	;volatile
  1618  0BB8  1D03               	skipz
  1619  0BB9  2BC4               	goto	u6045
  1620  0BBA  0835               	movf	?___lmul+2,w
  1621  0BBB  0254               	subwf	_currentClothLength+2,w	;volatile
  1622  0BBC  1D03               	skipz
  1623  0BBD  2BC4               	goto	u6045
  1624  0BBE  0834               	movf	?___lmul+1,w
  1625  0BBF  0253               	subwf	_currentClothLength+1,w	;volatile
  1626  0BC0  1D03               	skipz
  1627  0BC1  2BC4               	goto	u6045
  1628  0BC2  0833               	movf	?___lmul,w
  1629  0BC3  0252               	subwf	_currentClothLength,w	;volatile
  1630  0BC4                     u6045:
  1631  0BC4  1C03               	skipc
  1632  0BC5  2BC8               	goto	l213
  1633                           
  1634                           ;newmain.c: 70:             RE1 = 1;
  1635  0BC6  1489               	bsf	9,1	;volatile
  1636                           
  1637                           ;newmain.c: 71:         }
  1638  0BC7  2BC9               	goto	l3946
  1639  0BC8                     l213:	
  1640                           ;newmain.c: 72:         else{
  1641                           
  1642                           
  1643                           ;newmain.c: 73:             RE1 = 0;
  1644  0BC8  1089               	bcf	9,1	;volatile
  1645  0BC9                     l3946:
  1646                           
  1647                           ;newmain.c: 75:         if(currentClothLength >= (warningClothLength * 10)){
  1648  0BC9  1683               	bsf	3,5	;RP0=1, select bank1
  1649  0BCA  084B               	movf	(_warningClothLength+3)^(0+128),w	;volatile
  1650  0BCB  1283               	bcf	3,5	;RP0=0, select bank0
  1651  0BCC  00B6               	movwf	___lmul@multiplier+3
  1652  0BCD  1683               	bsf	3,5	;RP0=1, select bank1
  1653  0BCE  084A               	movf	(_warningClothLength+2)^(0+128),w	;volatile
  1654  0BCF  1283               	bcf	3,5	;RP0=0, select bank0
  1655  0BD0  00B5               	movwf	___lmul@multiplier+2
  1656  0BD1  1683               	bsf	3,5	;RP0=1, select bank1
  1657  0BD2  0849               	movf	(_warningClothLength+1)^(0+128),w	;volatile
  1658  0BD3  1283               	bcf	3,5	;RP0=0, select bank0
  1659  0BD4  00B4               	movwf	___lmul@multiplier+1
  1660  0BD5  1683               	bsf	3,5	;RP0=1, select bank1
  1661  0BD6  0848               	movf	_warningClothLength^(0+128),w	;volatile
  1662  0BD7  1283               	bcf	3,5	;RP0=0, select bank0
  1663  0BD8  00B3               	movwf	___lmul@multiplier
  1664  0BD9  3000               	movlw	0
  1665  0BDA  00BA               	movwf	___lmul@multiplicand+3
  1666  0BDB  3000               	movlw	0
  1667  0BDC  00B9               	movwf	___lmul@multiplicand+2
  1668  0BDD  3000               	movlw	0
  1669  0BDE  00B8               	movwf	___lmul@multiplicand+1
  1670  0BDF  300A               	movlw	10
  1671  0BE0  00B7               	movwf	___lmul@multiplicand
  1672  0BE1  160A  158A  2699  120A  158A  	fcall	___lmul
  1673  0BE6  0836               	movf	?___lmul+3,w
  1674  0BE7  0255               	subwf	_currentClothLength+3,w	;volatile
  1675  0BE8  1D03               	skipz
  1676  0BE9  2BF4               	goto	u6055
  1677  0BEA  0835               	movf	?___lmul+2,w
  1678  0BEB  0254               	subwf	_currentClothLength+2,w	;volatile
  1679  0BEC  1D03               	skipz
  1680  0BED  2BF4               	goto	u6055
  1681  0BEE  0834               	movf	?___lmul+1,w
  1682  0BEF  0253               	subwf	_currentClothLength+1,w	;volatile
  1683  0BF0  1D03               	skipz
  1684  0BF1  2BF4               	goto	u6055
  1685  0BF2  0833               	movf	?___lmul,w
  1686  0BF3  0252               	subwf	_currentClothLength,w	;volatile
  1687  0BF4                     u6055:
  1688  0BF4  1C03               	skipc
  1689  0BF5  2BF8               	goto	l215
  1690                           
  1691                           ;newmain.c: 76:             RE2 = 1;
  1692  0BF6  1509               	bsf	9,2	;volatile
  1693                           
  1694                           ;newmain.c: 77:         }
  1695  0BF7  2BF9               	goto	l3950
  1696  0BF8                     l215:	
  1697                           ;newmain.c: 78:         else{
  1698                           
  1699                           
  1700                           ;newmain.c: 79:             RE2 = 0;
  1701  0BF8  1109               	bcf	9,2	;volatile
  1702  0BF9                     l3950:
  1703                           
  1704                           ;newmain.c: 82:         if(skipCount >= 200){
  1705  0BF9  30C8               	movlw	200
  1706  0BFA  1683               	bsf	3,5	;RP0=1, select bank1
  1707  0BFB  0237               	subwf	_skipCount^(0+128),w	;volatile
  1708  0BFC  1C03               	skipc
  1709  0BFD  2C07               	goto	l3954
  1710                           
  1711                           ;newmain.c: 83:             editMenuPointer = 0;
  1712  0BFE  1283               	bcf	3,5	;RP0=0, select bank0
  1713  0BFF  01DC               	clrf	_editMenuPointer	;volatile
  1714                           
  1715                           ;newmain.c: 84:             viewMenuPointer = 0;
  1716  0C00  01DD               	clrf	_viewMenuPointer	;volatile
  1717                           
  1718                           ;newmain.c: 85:             editValue = 0;
  1719  0C01  1683               	bsf	3,5	;RP0=1, select bank1
  1720  0C02  01BA               	clrf	_editValue^(0+128)	;volatile
  1721                           
  1722                           ;newmain.c: 86:             currentDisplay = 0;
  1723  0C03  1283               	bcf	3,5	;RP0=0, select bank0
  1724  0C04  01DE               	clrf	_currentDisplay	;volatile
  1725                           
  1726                           ;newmain.c: 87:             skipCount = 0;
  1727  0C05  1683               	bsf	3,5	;RP0=1, select bank1
  1728  0C06  01B7               	clrf	_skipCount^(0+128)	;volatile
  1729  0C07                     l3954:
  1730                           
  1731                           ;newmain.c: 90:         if(encoderSkipCount >= 200){
  1732  0C07  0833               	movf	(_encoderSkipCount+1)^(0+128),w	;volatile
  1733  0C08  3A80               	xorlw	128
  1734  0C09  00FF               	movwf	127
  1735  0C0A  3080               	movlw	128
  1736  0C0B  027F               	subwf	127,w
  1737  0C0C  1D03               	skipz
  1738  0C0D  2C10               	goto	u6075
  1739  0C0E  30C8               	movlw	200
  1740  0C0F  0232               	subwf	_encoderSkipCount^(0+128),w	;volatile
  1741  0C10                     u6075:
  1742  0C10  1C03               	skipc
  1743  0C11  2C24               	goto	l218
  1744                           
  1745                           ;newmain.c: 91:             metrePerMinCounter = 0;
  1746  0C12  3000               	movlw	0
  1747  0C13  1683               	bsf	3,5	;RP0=1, select bank1
  1748  0C14  1303               	bcf	3,6	;RP1=0, select bank1
  1749  0C15  00A7               	movwf	(_metrePerMinCounter+3)^(0+128)	;volatile
  1750  0C16  3000               	movlw	0
  1751  0C17  00A6               	movwf	(_metrePerMinCounter+2)^(0+128)	;volatile
  1752  0C18  3000               	movlw	0
  1753  0C19  00A5               	movwf	(_metrePerMinCounter+1)^(0+128)	;volatile
  1754  0C1A  3000               	movlw	0
  1755  0C1B  00A4               	movwf	_metrePerMinCounter^(0+128)	;volatile
  1756                           
  1757                           ;newmain.c: 92:             metrePerMin = 0;
  1758  0C1C  3000               	movlw	0
  1759  0C1D  00AB               	movwf	(_metrePerMin+3)^(0+128)	;volatile
  1760  0C1E  3000               	movlw	0
  1761  0C1F  00AA               	movwf	(_metrePerMin+2)^(0+128)	;volatile
  1762  0C20  3000               	movlw	0
  1763  0C21  00A9               	movwf	(_metrePerMin+1)^(0+128)	;volatile
  1764  0C22  3000               	movlw	0
  1765  0C23  00A8               	movwf	_metrePerMin^(0+128)	;volatile
  1766  0C24                     l218:	
  1767                           ;newmain.c: 93:         }
  1768                           
  1769                           
  1770                           ;newmain.c: 95:         if(metrePerMinCounter >= pulse){
  1771  0C24  1283               	bcf	3,5	;RP0=0, select bank0
  1772  0C25  1303               	bcf	3,6	;RP1=0, select bank0
  1773  0C26  0851               	movf	_pulse+3,w	;volatile
  1774  0C27  1683               	bsf	3,5	;RP0=1, select bank1
  1775  0C28  0227               	subwf	(_metrePerMinCounter+3)^(0+128),w	;volatile
  1776  0C29  1D03               	skipz
  1777  0C2A  2C3B               	goto	u6085
  1778  0C2B  1283               	bcf	3,5	;RP0=0, select bank0
  1779  0C2C  0850               	movf	_pulse+2,w	;volatile
  1780  0C2D  1683               	bsf	3,5	;RP0=1, select bank1
  1781  0C2E  0226               	subwf	(_metrePerMinCounter+2)^(0+128),w	;volatile
  1782  0C2F  1D03               	skipz
  1783  0C30  2C3B               	goto	u6085
  1784  0C31  1283               	bcf	3,5	;RP0=0, select bank0
  1785  0C32  084F               	movf	_pulse+1,w	;volatile
  1786  0C33  1683               	bsf	3,5	;RP0=1, select bank1
  1787  0C34  0225               	subwf	(_metrePerMinCounter+1)^(0+128),w	;volatile
  1788  0C35  1D03               	skipz
  1789  0C36  2C3B               	goto	u6085
  1790  0C37  1283               	bcf	3,5	;RP0=0, select bank0
  1791  0C38  084E               	movf	_pulse,w	;volatile
  1792  0C39  1683               	bsf	3,5	;RP0=1, select bank1
  1793  0C3A  0224               	subwf	_metrePerMinCounter^(0+128),w	;volatile
  1794  0C3B                     u6085:
  1795  0C3B  1C03               	skipc
  1796  0C3C  2CAD               	goto	l219
  1797                           
  1798                           ;newmain.c: 96:             metrePerMin = (12 * circumference) / timerCount;
  1799  0C3D  0838               	movf	_timerCount^(0+128),w	;volatile
  1800  0C3E  1703               	bsf	3,6	;RP1=1, select bank3
  1801  0C3F  0099               	movwf	??_main^(0+384)
  1802  0C40  019A               	clrf	(??_main^(0+384)+1)
  1803  0C41  019B               	clrf	(??_main^(0+384)+2)
  1804  0C42  019C               	clrf	(??_main^(0+384)+3)
  1805  0C43  081C               	movf	(??_main+3)^(0+384),w
  1806  0C44  1283               	bcf	3,5	;RP0=0, select bank0
  1807  0C45  1303               	bcf	3,6	;RP1=0, select bank0
  1808  0C46  00C3               	movwf	___lldiv@divisor+3
  1809  0C47  1683               	bsf	3,5	;RP0=1, select bank3
  1810  0C48  1703               	bsf	3,6	;RP1=1, select bank3
  1811  0C49  081B               	movf	(??_main+2)^(0+384),w
  1812  0C4A  1283               	bcf	3,5	;RP0=0, select bank0
  1813  0C4B  1303               	bcf	3,6	;RP1=0, select bank0
  1814  0C4C  00C2               	movwf	___lldiv@divisor+2
  1815  0C4D  1683               	bsf	3,5	;RP0=1, select bank3
  1816  0C4E  1703               	bsf	3,6	;RP1=1, select bank3
  1817  0C4F  081A               	movf	(??_main+1)^(0+384),w
  1818  0C50  1283               	bcf	3,5	;RP0=0, select bank0
  1819  0C51  1303               	bcf	3,6	;RP1=0, select bank0
  1820  0C52  00C1               	movwf	___lldiv@divisor+1
  1821  0C53  1683               	bsf	3,5	;RP0=1, select bank3
  1822  0C54  1703               	bsf	3,6	;RP1=1, select bank3
  1823  0C55  0819               	movf	??_main^(0+384),w
  1824  0C56  1283               	bcf	3,5	;RP0=0, select bank0
  1825  0C57  1303               	bcf	3,6	;RP1=0, select bank0
  1826  0C58  00C0               	movwf	___lldiv@divisor
  1827  0C59  0859               	movf	_circumference+3,w	;volatile
  1828  0C5A  00B6               	movwf	___lmul@multiplier+3
  1829  0C5B  0858               	movf	_circumference+2,w	;volatile
  1830  0C5C  00B5               	movwf	___lmul@multiplier+2
  1831  0C5D  0857               	movf	_circumference+1,w	;volatile
  1832  0C5E  00B4               	movwf	___lmul@multiplier+1
  1833  0C5F  0856               	movf	_circumference,w	;volatile
  1834  0C60  00B3               	movwf	___lmul@multiplier
  1835  0C61  3000               	movlw	0
  1836  0C62  00BA               	movwf	___lmul@multiplicand+3
  1837  0C63  3000               	movlw	0
  1838  0C64  00B9               	movwf	___lmul@multiplicand+2
  1839  0C65  3000               	movlw	0
  1840  0C66  00B8               	movwf	___lmul@multiplicand+1
  1841  0C67  300C               	movlw	12
  1842  0C68  00B7               	movwf	___lmul@multiplicand
  1843  0C69  160A  158A  2699  120A  158A  	fcall	___lmul
  1844  0C6E  0836               	movf	?___lmul+3,w
  1845  0C6F  00C7               	movwf	___lldiv@dividend+3
  1846  0C70  0835               	movf	?___lmul+2,w
  1847  0C71  00C6               	movwf	___lldiv@dividend+2
  1848  0C72  0834               	movf	?___lmul+1,w
  1849  0C73  00C5               	movwf	___lldiv@dividend+1
  1850  0C74  0833               	movf	?___lmul,w
  1851  0C75  00C4               	movwf	___lldiv@dividend
  1852  0C76  160A  118A  20FA  120A  158A  	fcall	___lldiv
  1853  0C7B  0843               	movf	?___lldiv+3,w
  1854  0C7C  1683               	bsf	3,5	;RP0=1, select bank1
  1855  0C7D  00AB               	movwf	(_metrePerMin+3)^(0+128)	;volatile
  1856  0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  1857  0C7F  0842               	movf	?___lldiv+2,w
  1858  0C80  1683               	bsf	3,5	;RP0=1, select bank1
  1859  0C81  00AA               	movwf	(_metrePerMin+2)^(0+128)	;volatile
  1860  0C82  1283               	bcf	3,5	;RP0=0, select bank0
  1861  0C83  0841               	movf	?___lldiv+1,w
  1862  0C84  1683               	bsf	3,5	;RP0=1, select bank1
  1863  0C85  00A9               	movwf	(_metrePerMin+1)^(0+128)	;volatile
  1864  0C86  1283               	bcf	3,5	;RP0=0, select bank0
  1865  0C87  0840               	movf	?___lldiv,w
  1866  0C88  1683               	bsf	3,5	;RP0=1, select bank1
  1867  0C89  00A8               	movwf	_metrePerMin^(0+128)	;volatile
  1868                           
  1869                           ;newmain.c: 97:             metrePerMinCounter = 0;
  1870  0C8A  3000               	movlw	0
  1871  0C8B  00A7               	movwf	(_metrePerMinCounter+3)^(0+128)	;volatile
  1872  0C8C  3000               	movlw	0
  1873  0C8D  00A6               	movwf	(_metrePerMinCounter+2)^(0+128)	;volatile
  1874  0C8E  3000               	movlw	0
  1875  0C8F  00A5               	movwf	(_metrePerMinCounter+1)^(0+128)	;volatile
  1876  0C90  3000               	movlw	0
  1877  0C91  00A4               	movwf	_metrePerMinCounter^(0+128)	;volatile
  1878                           
  1879                           ;newmain.c: 98:             timerCount = 0;
  1880  0C92  01B8               	clrf	_timerCount^(0+128)	;volatile
  1881                           
  1882                           ;newmain.c: 99:             if(metrePerMin > 999)metrePerMin = 999;
  1883  0C93  082B               	movf	(_metrePerMin+3)^(0+128),w	;volatile
  1884  0C94  1D03               	btfss	3,2
  1885  0C95  2CA3               	goto	l3966
  1886  0C96  082A               	movf	(_metrePerMin+2)^(0+128),w	;volatile
  1887  0C97  1D03               	btfss	3,2
  1888  0C98  2CA3               	goto	l3966
  1889  0C99  3003               	movlw	3
  1890  0C9A  0229               	subwf	(_metrePerMin+1)^(0+128),w	;volatile
  1891  0C9B  1D03               	skipz
  1892  0C9C  2CA1               	goto	u6093
  1893  0C9D  30E8               	movlw	232
  1894  0C9E  0228               	subwf	_metrePerMin^(0+128),w	;volatile
  1895  0C9F  1D03               	skipz
  1896  0CA0  2CA1               	goto	u6093
  1897  0CA1                     u6093:
  1898  0CA1  1C03               	btfss	3,0
  1899  0CA2  2CAD               	goto	l219
  1900  0CA3                     l3966:
  1901  0CA3  3000               	movlw	0
  1902  0CA4  1683               	bsf	3,5	;RP0=1, select bank1
  1903  0CA5  1303               	bcf	3,6	;RP1=0, select bank1
  1904  0CA6  00AB               	movwf	(_metrePerMin+3)^(0+128)	;volatile
  1905  0CA7  3000               	movlw	0
  1906  0CA8  00AA               	movwf	(_metrePerMin+2)^(0+128)	;volatile
  1907  0CA9  3003               	movlw	3
  1908  0CAA  00A9               	movwf	(_metrePerMin+1)^(0+128)	;volatile
  1909  0CAB  30E7               	movlw	231
  1910  0CAC  00A8               	movwf	_metrePerMin^(0+128)	;volatile
  1911  0CAD                     l219:	
  1912                           ;newmain.c: 100:         }
  1913                           
  1914                           
  1915                           ;newmain.c: 101:         if(hourMeterCounter >= 7200){
  1916  0CAD  301C               	movlw	28
  1917  0CAE  1683               	bsf	3,5	;RP0=1, select bank1
  1918  0CAF  1303               	bcf	3,6	;RP1=0, select bank1
  1919  0CB0  0231               	subwf	(_hourMeterCounter+1)^(0+128),w	;volatile
  1920  0CB1  3020               	movlw	32
  1921  0CB2  1903               	skipnz
  1922  0CB3  0230               	subwf	_hourMeterCounter^(0+128),w	;volatile
  1923  0CB4  1C03               	skipc
  1924  0CB5  2CC6               	goto	l3972
  1925                           
  1926                           ;newmain.c: 102:             hourMeter += 1;
  1927  0CB6  3001               	movlw	1
  1928  0CB7  07D0               	addwf	_hourMeter^(0+128),f	;volatile
  1929  0CB8  3000               	movlw	0
  1930  0CB9  1803               	skipnc
  1931  0CBA  3001               	movlw	1
  1932  0CBB  07D1               	addwf	(_hourMeter+1)^(0+128),f	;volatile
  1933  0CBC  3000               	movlw	0
  1934  0CBD  1803               	skipnc
  1935  0CBE  3001               	movlw	1
  1936  0CBF  07D2               	addwf	(_hourMeter+2)^(0+128),f	;volatile
  1937  0CC0  3000               	movlw	0
  1938  0CC1  1803               	skipnc
  1939  0CC2  3001               	movlw	1
  1940  0CC3  07D3               	addwf	(_hourMeter+3)^(0+128),f	;volatile
  1941                           
  1942                           ;newmain.c: 103:             hourMeterCounter = 0;
  1943  0CC4  01B0               	clrf	_hourMeterCounter^(0+128)	;volatile
  1944  0CC5  01B1               	clrf	(_hourMeterCounter+1)^(0+128)	;volatile
  1945  0CC6                     l3972:
  1946                           
  1947                           ;newmain.c: 105:         viewMenu();
  1948  0CC6  160A  118A  224A  120A  158A  	fcall	_viewMenu
  1949                           
  1950                           ;newmain.c: 106:         if(changed){
  1951  0CCB  1C5A               	btfss	_changed/(0+8),_changed& (0+7)	;volatile
  1952  0CCC  2D2B               	goto	l3994
  1953                           
  1954                           ;newmain.c: 107:             if(count == 1){
  1955  0CCD  1683               	bsf	3,5	;RP0=1, select bank1
  1956  0CCE  0339               	decf	_count^(0+128),w	;volatile
  1957  0CCF  1D03               	btfss	3,2
  1958  0CD0  2CFB               	goto	l3984
  1959                           
  1960                           ;newmain.c: 108:                 currentClothLength+=countPlus();
  1961  0CD1  160A  118A  21C3  120A  158A  	fcall	_countPlus
  1962  0CD6  0840               	movf	?_countPlus,w
  1963  0CD7  07D2               	addwf	_currentClothLength,f	;volatile
  1964  0CD8  0841               	movf	?_countPlus+1,w
  1965  0CD9  1103               	clrz
  1966  0CDA  1803               	skipnc
  1967  0CDB  3E01               	addlw	1
  1968  0CDC  1D03               	btfss	3,2
  1969  0CDD  07D3               	addwf	_currentClothLength+1,f	;volatile
  1970  0CDE  0842               	movf	?_countPlus+2,w
  1971  0CDF  1103               	clrz
  1972  0CE0  1803               	skipnc
  1973  0CE1  3E01               	addlw	1
  1974  0CE2  1D03               	btfss	3,2
  1975  0CE3  07D4               	addwf	_currentClothLength+2,f	;volatile
  1976  0CE4  0843               	movf	?_countPlus+3,w
  1977  0CE5  1103               	clrz
  1978  0CE6  1803               	skipnc
  1979  0CE7  3E01               	addlw	1
  1980  0CE8  1D03               	btfss	3,2
  1981  0CE9  07D5               	addwf	_currentClothLength+3,f	;volatile
  1982                           
  1983                           ;newmain.c: 109:                 metrePerMinCounter += 1;
  1984  0CEA  3001               	movlw	1
  1985  0CEB  1683               	bsf	3,5	;RP0=1, select bank1
  1986  0CEC  07A4               	addwf	_metrePerMinCounter^(0+128),f	;volatile
  1987  0CED  3000               	movlw	0
  1988  0CEE  1803               	skipnc
  1989  0CEF  3001               	movlw	1
  1990  0CF0  07A5               	addwf	(_metrePerMinCounter+1)^(0+128),f	;volatile
  1991  0CF1  3000               	movlw	0
  1992  0CF2  1803               	skipnc
  1993  0CF3  3001               	movlw	1
  1994  0CF4  07A6               	addwf	(_metrePerMinCounter+2)^(0+128),f	;volatile
  1995  0CF5  3000               	movlw	0
  1996  0CF6  1803               	skipnc
  1997  0CF7  3001               	movlw	1
  1998  0CF8  07A7               	addwf	(_metrePerMinCounter+3)^(0+128),f	;volatile
  1999                           
  2000                           ;newmain.c: 110:                 encoderSkipCount = 0;
  2001  0CF9  01B2               	clrf	_encoderSkipCount^(0+128)	;volatile
  2002  0CFA  01B3               	clrf	(_encoderSkipCount+1)^(0+128)	;volatile
  2003  0CFB                     l3984:
  2004                           
  2005                           ;newmain.c: 112:             if(count == 2){
  2006  0CFB  3002               	movlw	2
  2007  0CFC  0639               	xorwf	_count^(0+128),w	;volatile
  2008  0CFD  1D03               	btfss	3,2
  2009  0CFE  2D29               	goto	l3992
  2010                           
  2011                           ;newmain.c: 113:                 currentClothLength+=countMinus();
  2012  0CFF  160A  118A  2158  120A  158A  	fcall	_countMinus
  2013  0D04  0840               	movf	?_countMinus,w
  2014  0D05  07D2               	addwf	_currentClothLength,f	;volatile
  2015  0D06  0841               	movf	?_countMinus+1,w
  2016  0D07  1103               	clrz
  2017  0D08  1803               	skipnc
  2018  0D09  3E01               	addlw	1
  2019  0D0A  1D03               	btfss	3,2
  2020  0D0B  07D3               	addwf	_currentClothLength+1,f	;volatile
  2021  0D0C  0842               	movf	?_countMinus+2,w
  2022  0D0D  1103               	clrz
  2023  0D0E  1803               	skipnc
  2024  0D0F  3E01               	addlw	1
  2025  0D10  1D03               	btfss	3,2
  2026  0D11  07D4               	addwf	_currentClothLength+2,f	;volatile
  2027  0D12  0843               	movf	?_countMinus+3,w
  2028  0D13  1103               	clrz
  2029  0D14  1803               	skipnc
  2030  0D15  3E01               	addlw	1
  2031  0D16  1D03               	btfss	3,2
  2032  0D17  07D5               	addwf	_currentClothLength+3,f	;volatile
  2033                           
  2034                           ;newmain.c: 114:                 metrePerMinCounter += 1;
  2035  0D18  3001               	movlw	1
  2036  0D19  1683               	bsf	3,5	;RP0=1, select bank1
  2037  0D1A  07A4               	addwf	_metrePerMinCounter^(0+128),f	;volatile
  2038  0D1B  3000               	movlw	0
  2039  0D1C  1803               	skipnc
  2040  0D1D  3001               	movlw	1
  2041  0D1E  07A5               	addwf	(_metrePerMinCounter+1)^(0+128),f	;volatile
  2042  0D1F  3000               	movlw	0
  2043  0D20  1803               	skipnc
  2044  0D21  3001               	movlw	1
  2045  0D22  07A6               	addwf	(_metrePerMinCounter+2)^(0+128),f	;volatile
  2046  0D23  3000               	movlw	0
  2047  0D24  1803               	skipnc
  2048  0D25  3001               	movlw	1
  2049  0D26  07A7               	addwf	(_metrePerMinCounter+3)^(0+128),f	;volatile
  2050                           
  2051                           ;newmain.c: 115:                 encoderSkipCount = 0;
  2052  0D27  01B2               	clrf	_encoderSkipCount^(0+128)	;volatile
  2053  0D28  01B3               	clrf	(_encoderSkipCount+1)^(0+128)	;volatile
  2054  0D29                     l3992:
  2055                           
  2056                           ;newmain.c: 117:             changed = 0;
  2057  0D29  1283               	bcf	3,5	;RP0=0, select bank0
  2058  0D2A  105A               	bcf	_changed/(0+8),_changed& (0+7)	;volatile
  2059  0D2B                     l3994:
  2060                           
  2061                           ;newmain.c: 119:         encoder();
  2062  0D2B  160A  158A  2660  120A  158A  	fcall	_encoder
  2063  0D30  2A98               	goto	l3908
  2064  0D31                     __end_of_main:
  2065                           
  2066                           	psect	text1
  2067  124A                     __ptext1:	
  2068 ;; *************** function _viewMenu *****************
  2069 ;; Defined at:
  2070 ;;		line 240 in file "newmain.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;		None
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;		None
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      void 
  2077 ;; Registers used:
  2078 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2079 ;; Tracked objects:
  2080 ;;		On entry : 300/100
  2081 ;;		On exit  : 300/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2084 ;;      Params:         0       0       0       0       0
  2085 ;;      Locals:         0       0       0       0       0
  2086 ;;      Temps:          0       0       0       1       0
  2087 ;;      Totals:         0       0       0       1       0
  2088 ;;Total ram usage:        1 bytes
  2089 ;; Hardware stack levels used: 1
  2090 ;; Hardware stack levels required when called: 4
  2091 ;; This function calls:
  2092 ;;		_display1
  2093 ;;		_display2
  2094 ;;		_led
  2095 ;;		_upSwitch
  2096 ;; This function is called by:
  2097 ;;		_main
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           
  2102                           ;psect for function _viewMenu
  2103  124A                     _viewMenu:
  2104                           
  2105                           ;newmain.c: 242:     if(viewMenuPointer == 0 && editMenuPointer == 0){
  2106                           
  2107                           ;incstack = 0
  2108                           ; Regs used in _viewMenu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2109  124A  1283               	bcf	3,5	;RP0=0, select bank0
  2110  124B  085D               	movf	_viewMenuPointer,w	;volatile
  2111  124C  1D03               	btfss	3,2
  2112  124D  2A65               	goto	l3862
  2113  124E  085C               	movf	_editMenuPointer,w	;volatile
  2114  124F  1D03               	btfss	3,2
  2115  1250  2A65               	goto	l3862
  2116                           
  2117                           ;newmain.c: 243:         display1(currentClothLength);
  2118  1251  0855               	movf	_currentClothLength+3,w	;volatile
  2119  1252  1683               	bsf	3,5	;RP0=1, select bank1
  2120  1253  00ED               	movwf	(display1@value+3)^(0+128)
  2121  1254  1283               	bcf	3,5	;RP0=0, select bank0
  2122  1255  0854               	movf	_currentClothLength+2,w	;volatile
  2123  1256  1683               	bsf	3,5	;RP0=1, select bank1
  2124  1257  00EC               	movwf	(display1@value+2)^(0+128)
  2125  1258  1283               	bcf	3,5	;RP0=0, select bank0
  2126  1259  0853               	movf	_currentClothLength+1,w	;volatile
  2127  125A  1683               	bsf	3,5	;RP0=1, select bank1
  2128  125B  00EB               	movwf	(display1@value+1)^(0+128)
  2129  125C  1283               	bcf	3,5	;RP0=0, select bank0
  2130  125D  0852               	movf	_currentClothLength,w	;volatile
  2131  125E  1683               	bsf	3,5	;RP0=1, select bank1
  2132  125F  00EA               	movwf	display1@value^(0+128)
  2133  1260  120A  118A  25DA  160A  118A  	fcall	_display1
  2134  1265                     l3862:
  2135                           
  2136                           ;newmain.c: 245:     if(viewMenuPointer == 1 && editMenuPointer == 0){
  2137  1265  035D               	decf	_viewMenuPointer,w	;volatile
  2138  1266  1D03               	btfss	3,2
  2139  1267  2A79               	goto	l3868
  2140  1268  085C               	movf	_editMenuPointer,w	;volatile
  2141  1269  1D03               	btfss	3,2
  2142  126A  2A79               	goto	l3868
  2143                           
  2144                           ;newmain.c: 246:         display1(previousCurrentClothLength);
  2145  126B  1683               	bsf	3,5	;RP0=1, select bank1
  2146  126C  085B               	movf	(_previousCurrentClothLength+3)^(0+128),w	;volatile
  2147  126D  00ED               	movwf	(display1@value+3)^(0+128)
  2148  126E  085A               	movf	(_previousCurrentClothLength+2)^(0+128),w	;volatile
  2149  126F  00EC               	movwf	(display1@value+2)^(0+128)
  2150  1270  0859               	movf	(_previousCurrentClothLength+1)^(0+128),w	;volatile
  2151  1271  00EB               	movwf	(display1@value+1)^(0+128)
  2152  1272  0858               	movf	_previousCurrentClothLength^(0+128),w	;volatile
  2153  1273  00EA               	movwf	display1@value^(0+128)
  2154  1274  120A  118A  25DA  160A  118A  	fcall	_display1
  2155  1279                     l3868:
  2156                           
  2157                           ;newmain.c: 248:     if(viewMenuPointer == 2 && editMenuPointer == 0){
  2158  1279  3002               	movlw	2
  2159  127A  065D               	xorwf	_viewMenuPointer,w	;volatile
  2160  127B  1D03               	btfss	3,2
  2161  127C  2A8E               	goto	l3874
  2162  127D  085C               	movf	_editMenuPointer,w	;volatile
  2163  127E  1D03               	btfss	3,2
  2164  127F  2A8E               	goto	l3874
  2165                           
  2166                           ;newmain.c: 249:         display1(resetCounter);
  2167  1280  1683               	bsf	3,5	;RP0=1, select bank1
  2168  1281  0857               	movf	(_resetCounter+3)^(0+128),w	;volatile
  2169  1282  00ED               	movwf	(display1@value+3)^(0+128)
  2170  1283  0856               	movf	(_resetCounter+2)^(0+128),w	;volatile
  2171  1284  00EC               	movwf	(display1@value+2)^(0+128)
  2172  1285  0855               	movf	(_resetCounter+1)^(0+128),w	;volatile
  2173  1286  00EB               	movwf	(display1@value+1)^(0+128)
  2174  1287  0854               	movf	_resetCounter^(0+128),w	;volatile
  2175  1288  00EA               	movwf	display1@value^(0+128)
  2176  1289  120A  118A  25DA  160A  118A  	fcall	_display1
  2177  128E                     l3874:
  2178                           
  2179                           ;newmain.c: 251:     if(viewMenuPointer == 3 && editMenuPointer == 0){
  2180  128E  3003               	movlw	3
  2181  128F  065D               	xorwf	_viewMenuPointer,w	;volatile
  2182  1290  1D03               	btfss	3,2
  2183  1291  2AA3               	goto	l260
  2184  1292  085C               	movf	_editMenuPointer,w	;volatile
  2185  1293  1D03               	btfss	3,2
  2186  1294  2AA3               	goto	l260
  2187                           
  2188                           ;newmain.c: 252:         display1(hourMeter);
  2189  1295  1683               	bsf	3,5	;RP0=1, select bank1
  2190  1296  0853               	movf	(_hourMeter+3)^(0+128),w	;volatile
  2191  1297  00ED               	movwf	(display1@value+3)^(0+128)
  2192  1298  0852               	movf	(_hourMeter+2)^(0+128),w	;volatile
  2193  1299  00EC               	movwf	(display1@value+2)^(0+128)
  2194  129A  0851               	movf	(_hourMeter+1)^(0+128),w	;volatile
  2195  129B  00EB               	movwf	(display1@value+1)^(0+128)
  2196  129C  0850               	movf	_hourMeter^(0+128),w	;volatile
  2197  129D  00EA               	movwf	display1@value^(0+128)
  2198  129E  120A  118A  25DA  160A  118A  	fcall	_display1
  2199  12A3                     l260:	
  2200                           ;newmain.c: 253:     }
  2201                           
  2202                           
  2203                           ;newmain.c: 254:     display2(metrePerMin);
  2204  12A3  1683               	bsf	3,5	;RP0=1, select bank1
  2205  12A4  082B               	movf	(_metrePerMin+3)^(0+128),w	;volatile
  2206  12A5  00ED               	movwf	(display2@value+3)^(0+128)
  2207  12A6  082A               	movf	(_metrePerMin+2)^(0+128),w	;volatile
  2208  12A7  00EC               	movwf	(display2@value+2)^(0+128)
  2209  12A8  0829               	movf	(_metrePerMin+1)^(0+128),w	;volatile
  2210  12A9  00EB               	movwf	(display2@value+1)^(0+128)
  2211  12AA  0828               	movf	_metrePerMin^(0+128),w	;volatile
  2212  12AB  00EA               	movwf	display2@value^(0+128)
  2213  12AC  160A  118A  2418  160A  118A  	fcall	_display2
  2214                           
  2215                           ;newmain.c: 255:     led();
  2216  12B1  160A  158A  2635  160A  118A  	fcall	_led
  2217                           
  2218                           ;newmain.c: 257:     if(editMenuPointer == 0 && upSwitch()){
  2219  12B6  1283               	bcf	3,5	;RP0=0, select bank0
  2220  12B7  1303               	bcf	3,6	;RP1=0, select bank0
  2221  12B8  085C               	movf	_editMenuPointer,w	;volatile
  2222  12B9  1D03               	btfss	3,2
  2223  12BA  2ACB               	goto	l261
  2224  12BB  160A  158A  2529  160A  118A  	fcall	_upSwitch
  2225  12C0  3A00               	xorlw	0
  2226  12C1  1903               	skipnz
  2227  12C2  2ACB               	goto	l261
  2228                           
  2229                           ;newmain.c: 258:         viewMenuPointer += 1;
  2230  12C3  3001               	movlw	1
  2231  12C4  1683               	bsf	3,5	;RP0=1, select bank3
  2232  12C5  1703               	bsf	3,6	;RP1=1, select bank3
  2233  12C6  0091               	movwf	??_viewMenu^(0+384)
  2234  12C7  0811               	movf	??_viewMenu^(0+384),w
  2235  12C8  1283               	bcf	3,5	;RP0=0, select bank0
  2236  12C9  1303               	bcf	3,6	;RP1=0, select bank0
  2237  12CA  07DD               	addwf	_viewMenuPointer,f	;volatile
  2238  12CB                     l261:	
  2239                           ;newmain.c: 259:     }
  2240                           
  2241                           
  2242                           ;newmain.c: 260:     if(viewMenuPointer == 4){
  2243  12CB  3004               	movlw	4
  2244  12CC  1283               	bcf	3,5	;RP0=0, select bank0
  2245  12CD  065D               	xorwf	_viewMenuPointer,w	;volatile
  2246  12CE  1D03               	btfss	3,2
  2247  12CF  0008               	return
  2248                           
  2249                           ;newmain.c: 261:         viewMenuPointer = 0;
  2250  12D0  01DD               	clrf	_viewMenuPointer	;volatile
  2251  12D1  0008               	return
  2252  12D2                     __end_of_viewMenu:
  2253                           
  2254                           	psect	text2
  2255  1E35                     __ptext2:	
  2256 ;; *************** function _led *****************
  2257 ;; Defined at:
  2258 ;;		line 520 in file "newmain.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;		None
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  value           1   22[BANK0 ] unsigned char 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg, status,2, status,0, pclath, cstack
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2272 ;;      Params:         0       0       0       0       0
  2273 ;;      Locals:         0       1       0       0       0
  2274 ;;      Temps:          0       2       0       0       0
  2275 ;;      Totals:         0       3       0       0       0
  2276 ;;Total ram usage:        3 bytes
  2277 ;; Hardware stack levels used: 1
  2278 ;; Hardware stack levels required when called: 3
  2279 ;; This function calls:
  2280 ;;		_dataPass
  2281 ;; This function is called by:
  2282 ;;		_viewMenu
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           
  2287                           ;psect for function _led
  2288  1E35                     _led:
  2289                           
  2290                           ;newmain.c: 521:     uint8_t value = 0;
  2291                           
  2292                           ;incstack = 0
  2293                           ; Regs used in _led: [wreg+status,2+status,0+pclath+cstack]
  2294  1E35  1283               	bcf	3,5	;RP0=0, select bank0
  2295  1E36  1303               	bcf	3,6	;RP1=0, select bank0
  2296  1E37  01B6               	clrf	led@value
  2297                           
  2298                           ;newmain.c: 523:     if(RE1){
  2299  1E38  1C89               	btfss	9,1	;volatile
  2300  1E39  2E3E               	goto	l3526
  2301                           
  2302                           ;newmain.c: 524:         value += 128;
  2303  1E3A  3080               	movlw	128
  2304  1E3B  00B4               	movwf	??_led
  2305  1E3C  0834               	movf	??_led,w
  2306  1E3D  07B6               	addwf	led@value,f
  2307  1E3E                     l3526:
  2308                           
  2309                           ;newmain.c: 526:     if(RE2){
  2310  1E3E  1D09               	btfss	9,2	;volatile
  2311  1E3F  2E44               	goto	l3530
  2312                           
  2313                           ;newmain.c: 527:         value += 32;
  2314  1E40  3020               	movlw	32
  2315  1E41  00B4               	movwf	??_led
  2316  1E42  0834               	movf	??_led,w
  2317  1E43  07B6               	addwf	led@value,f
  2318  1E44                     l3530:
  2319                           
  2320                           ;newmain.c: 529:     if(encoderFlag){
  2321  1E44  1D5A               	btfss	_encoderFlag/(0+8),_encoderFlag& (0+7)	;volatile
  2322  1E45  2E4A               	goto	l3534
  2323                           
  2324                           ;newmain.c: 530:         value += 8;
  2325  1E46  3008               	movlw	8
  2326  1E47  00B4               	movwf	??_led
  2327  1E48  0834               	movf	??_led,w
  2328  1E49  07B6               	addwf	led@value,f
  2329  1E4A                     l3534:
  2330                           
  2331                           ;newmain.c: 532:     dataPass(value);
  2332  1E4A  0836               	movf	led@value,w
  2333  1E4B  160A  158A  25A1  160A  158A  	fcall	_dataPass
  2334                           
  2335                           ;newmain.c: 533:     RA2 = 1;
  2336  1E50  1505               	bsf	5,2	;volatile
  2337                           
  2338                           ;newmain.c: 534:     RA0 = 1;
  2339  1E51  1405               	bsf	5,0	;volatile
  2340                           
  2341                           ;newmain.c: 535:     RA1 = 0;
  2342  1E52  1085               	bcf	5,1	;volatile
  2343                           
  2344                           ;newmain.c: 536:     RA3 = 0;
  2345  1E53  1185               	bcf	5,3	;volatile
  2346                           
  2347                           ;newmain.c: 537:     _delay((unsigned long)((1)*(20000000/4000.0)));
  2348  1E54  3007               	movlw	7
  2349  1E55  1283               	bcf	3,5	;RP0=0, select bank0
  2350  1E56  1303               	bcf	3,6	;RP1=0, select bank0
  2351  1E57  00B5               	movwf	??_led+1
  2352  1E58  307C               	movlw	124
  2353  1E59  00B4               	movwf	??_led
  2354  1E5A                     u6167:
  2355  1E5A  0BB4               	decfsz	??_led,f
  2356  1E5B  2E5A               	goto	u6167
  2357  1E5C  0BB5               	decfsz	??_led+1,f
  2358  1E5D  2E5A               	goto	u6167
  2359  1E5E  0000               	nop
  2360  1E5F  0008               	return
  2361  1E60                     __end_of_led:
  2362                           
  2363                           	psect	text3
  2364  1418                     __ptext3:	
  2365 ;; *************** function _display2 *****************
  2366 ;; Defined at:
  2367 ;;		line 495 in file "newmain.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;  value           4   10[BANK1 ] unsigned long 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;		None
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1    wreg      void 
  2374 ;; Registers used:
  2375 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 300/100
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2381 ;;      Params:         0       0       4       0       0
  2382 ;;      Locals:         0       0       0       0       0
  2383 ;;      Temps:          0       0       2       0       0
  2384 ;;      Totals:         0       0       6       0       0
  2385 ;;Total ram usage:        6 bytes
  2386 ;; Hardware stack levels used: 1
  2387 ;; Hardware stack levels required when called: 3
  2388 ;; This function calls:
  2389 ;;		___lldiv
  2390 ;;		___llmod
  2391 ;;		_dataPass
  2392 ;; This function is called by:
  2393 ;;		_viewMenu
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           
  2398                           ;psect for function _display2
  2399  1418                     _display2:
  2400                           
  2401                           ;newmain.c: 497:     dataPass(segCode[value/100]);
  2402                           
  2403                           ;incstack = 0
  2404                           ; Regs used in _display2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2405  1418  3000               	movlw	0
  2406  1419  1283               	bcf	3,5	;RP0=0, select bank0
  2407  141A  00C3               	movwf	___lldiv@divisor+3
  2408  141B  3000               	movlw	0
  2409  141C  00C2               	movwf	___lldiv@divisor+2
  2410  141D  3000               	movlw	0
  2411  141E  00C1               	movwf	___lldiv@divisor+1
  2412  141F  3064               	movlw	100
  2413  1420  00C0               	movwf	___lldiv@divisor
  2414  1421  1683               	bsf	3,5	;RP0=1, select bank1
  2415  1422  086D               	movf	(display2@value+3)^(0+128),w
  2416  1423  1283               	bcf	3,5	;RP0=0, select bank0
  2417  1424  00C7               	movwf	___lldiv@dividend+3
  2418  1425  1683               	bsf	3,5	;RP0=1, select bank1
  2419  1426  086C               	movf	(display2@value+2)^(0+128),w
  2420  1427  1283               	bcf	3,5	;RP0=0, select bank0
  2421  1428  00C6               	movwf	___lldiv@dividend+2
  2422  1429  1683               	bsf	3,5	;RP0=1, select bank1
  2423  142A  086B               	movf	(display2@value+1)^(0+128),w
  2424  142B  1283               	bcf	3,5	;RP0=0, select bank0
  2425  142C  00C5               	movwf	___lldiv@dividend+1
  2426  142D  1683               	bsf	3,5	;RP0=1, select bank1
  2427  142E  086A               	movf	display2@value^(0+128),w
  2428  142F  1283               	bcf	3,5	;RP0=0, select bank0
  2429  1430  00C4               	movwf	___lldiv@dividend
  2430  1431  160A  118A  20FA  160A  118A  	fcall	___lldiv
  2431  1436  0840               	movf	?___lldiv,w
  2432  1437  3EBE               	addlw	(low (_segCode| 0))& (0+255)
  2433  1438  0084               	movwf	4
  2434  1439  1383               	bcf	3,7	;select IRP bank1
  2435  143A  0800               	movf	0,w
  2436  143B  160A  158A  25A1  160A  118A  	fcall	_dataPass
  2437                           
  2438                           ;newmain.c: 498:     RA2 = 0;
  2439  1440  1105               	bcf	5,2	;volatile
  2440                           
  2441                           ;newmain.c: 499:     RA0 = 1;
  2442  1441  1405               	bsf	5,0	;volatile
  2443                           
  2444                           ;newmain.c: 500:     RA1 = 0;
  2445  1442  1085               	bcf	5,1	;volatile
  2446                           
  2447                           ;newmain.c: 501:     RA3 = 1;
  2448  1443  1585               	bsf	5,3	;volatile
  2449                           
  2450                           ;newmain.c: 502:     _delay((unsigned long)((1)*(20000000/4000.0)));
  2451  1444  3007               	movlw	7
  2452  1445  1683               	bsf	3,5	;RP0=1, select bank1
  2453  1446  1303               	bcf	3,6	;RP1=0, select bank1
  2454  1447  00EF               	movwf	(??_display2^(0+128)+1)
  2455  1448  307C               	movlw	124
  2456  1449  00EE               	movwf	??_display2^(0+128)
  2457  144A                     u6177:
  2458  144A  0BEE               	decfsz	??_display2^(0+128),f
  2459  144B  2C4A               	goto	u6177
  2460  144C  0BEF               	decfsz	(??_display2^(0+128)+1),f
  2461  144D  2C4A               	goto	u6177
  2462  144E  0000               	nop
  2463                           
  2464                           ;newmain.c: 504:     dataPass(segCode[(value/10)%10] | 0x20);
  2465  144F  3000               	movlw	0
  2466  1450  1683               	bsf	3,5	;RP0=1, select bank1
  2467  1451  1303               	bcf	3,6	;RP1=0, select bank1
  2468  1452  00E3               	movwf	(___llmod@divisor+3)^(0+128)
  2469  1453  3000               	movlw	0
  2470  1454  00E2               	movwf	(___llmod@divisor+2)^(0+128)
  2471  1455  3000               	movlw	0
  2472  1456  00E1               	movwf	(___llmod@divisor+1)^(0+128)
  2473  1457  300A               	movlw	10
  2474  1458  00E0               	movwf	___llmod@divisor^(0+128)
  2475  1459  3000               	movlw	0
  2476  145A  1283               	bcf	3,5	;RP0=0, select bank0
  2477  145B  00C3               	movwf	___lldiv@divisor+3
  2478  145C  3000               	movlw	0
  2479  145D  00C2               	movwf	___lldiv@divisor+2
  2480  145E  3000               	movlw	0
  2481  145F  00C1               	movwf	___lldiv@divisor+1
  2482  1460  300A               	movlw	10
  2483  1461  00C0               	movwf	___lldiv@divisor
  2484  1462  1683               	bsf	3,5	;RP0=1, select bank1
  2485  1463  086D               	movf	(display2@value+3)^(0+128),w
  2486  1464  1283               	bcf	3,5	;RP0=0, select bank0
  2487  1465  00C7               	movwf	___lldiv@dividend+3
  2488  1466  1683               	bsf	3,5	;RP0=1, select bank1
  2489  1467  086C               	movf	(display2@value+2)^(0+128),w
  2490  1468  1283               	bcf	3,5	;RP0=0, select bank0
  2491  1469  00C6               	movwf	___lldiv@dividend+2
  2492  146A  1683               	bsf	3,5	;RP0=1, select bank1
  2493  146B  086B               	movf	(display2@value+1)^(0+128),w
  2494  146C  1283               	bcf	3,5	;RP0=0, select bank0
  2495  146D  00C5               	movwf	___lldiv@dividend+1
  2496  146E  1683               	bsf	3,5	;RP0=1, select bank1
  2497  146F  086A               	movf	display2@value^(0+128),w
  2498  1470  1283               	bcf	3,5	;RP0=0, select bank0
  2499  1471  00C4               	movwf	___lldiv@dividend
  2500  1472  160A  118A  20FA  160A  118A  	fcall	___lldiv
  2501  1477  0843               	movf	?___lldiv+3,w
  2502  1478  1683               	bsf	3,5	;RP0=1, select bank1
  2503  1479  00E7               	movwf	(___llmod@dividend+3)^(0+128)
  2504  147A  1283               	bcf	3,5	;RP0=0, select bank0
  2505  147B  0842               	movf	?___lldiv+2,w
  2506  147C  1683               	bsf	3,5	;RP0=1, select bank1
  2507  147D  00E6               	movwf	(___llmod@dividend+2)^(0+128)
  2508  147E  1283               	bcf	3,5	;RP0=0, select bank0
  2509  147F  0841               	movf	?___lldiv+1,w
  2510  1480  1683               	bsf	3,5	;RP0=1, select bank1
  2511  1481  00E5               	movwf	(___llmod@dividend+1)^(0+128)
  2512  1482  1283               	bcf	3,5	;RP0=0, select bank0
  2513  1483  0840               	movf	?___lldiv,w
  2514  1484  1683               	bsf	3,5	;RP0=1, select bank1
  2515  1485  00E4               	movwf	___llmod@dividend^(0+128)
  2516  1486  160A  158A  27B4  160A  118A  	fcall	___llmod
  2517  148B  0860               	movf	?___llmod^(0+128),w
  2518  148C  3EBE               	addlw	(low (_segCode| 0))& (0+255)
  2519  148D  0084               	movwf	4
  2520  148E  1383               	bcf	3,7	;select IRP bank1
  2521  148F  0800               	movf	0,w
  2522  1490  3820               	iorlw	32
  2523  1491  160A  158A  25A1  160A  118A  	fcall	_dataPass
  2524                           
  2525                           ;newmain.c: 505:     RA2 = 1;
  2526  1496  1505               	bsf	5,2	;volatile
  2527                           
  2528                           ;newmain.c: 506:     RA0 = 0;
  2529  1497  1005               	bcf	5,0	;volatile
  2530                           
  2531                           ;newmain.c: 507:     RA1 = 0;
  2532  1498  1085               	bcf	5,1	;volatile
  2533                           
  2534                           ;newmain.c: 508:     RA3 = 1;
  2535  1499  1585               	bsf	5,3	;volatile
  2536                           
  2537                           ;newmain.c: 509:     _delay((unsigned long)((1)*(20000000/4000.0)));
  2538  149A  3007               	movlw	7
  2539  149B  1683               	bsf	3,5	;RP0=1, select bank1
  2540  149C  1303               	bcf	3,6	;RP1=0, select bank1
  2541  149D  00EF               	movwf	(??_display2^(0+128)+1)
  2542  149E  307C               	movlw	124
  2543  149F  00EE               	movwf	??_display2^(0+128)
  2544  14A0                     u6187:
  2545  14A0  0BEE               	decfsz	??_display2^(0+128),f
  2546  14A1  2CA0               	goto	u6187
  2547  14A2  0BEF               	decfsz	(??_display2^(0+128)+1),f
  2548  14A3  2CA0               	goto	u6187
  2549  14A4  0000               	nop
  2550                           
  2551                           ;newmain.c: 511:     dataPass(segCode[value%10]);
  2552  14A5  3000               	movlw	0
  2553  14A6  1683               	bsf	3,5	;RP0=1, select bank1
  2554  14A7  1303               	bcf	3,6	;RP1=0, select bank1
  2555  14A8  00E3               	movwf	(___llmod@divisor+3)^(0+128)
  2556  14A9  3000               	movlw	0
  2557  14AA  00E2               	movwf	(___llmod@divisor+2)^(0+128)
  2558  14AB  3000               	movlw	0
  2559  14AC  00E1               	movwf	(___llmod@divisor+1)^(0+128)
  2560  14AD  300A               	movlw	10
  2561  14AE  00E0               	movwf	___llmod@divisor^(0+128)
  2562  14AF  086D               	movf	(display2@value+3)^(0+128),w
  2563  14B0  00E7               	movwf	(___llmod@dividend+3)^(0+128)
  2564  14B1  086C               	movf	(display2@value+2)^(0+128),w
  2565  14B2  00E6               	movwf	(___llmod@dividend+2)^(0+128)
  2566  14B3  086B               	movf	(display2@value+1)^(0+128),w
  2567  14B4  00E5               	movwf	(___llmod@dividend+1)^(0+128)
  2568  14B5  086A               	movf	display2@value^(0+128),w
  2569  14B6  00E4               	movwf	___llmod@dividend^(0+128)
  2570  14B7  160A  158A  27B4  160A  118A  	fcall	___llmod
  2571  14BC  0860               	movf	?___llmod^(0+128),w
  2572  14BD  3EBE               	addlw	(low (_segCode| 0))& (0+255)
  2573  14BE  0084               	movwf	4
  2574  14BF  1383               	bcf	3,7	;select IRP bank1
  2575  14C0  0800               	movf	0,w
  2576  14C1  160A  158A  25A1  160A  118A  	fcall	_dataPass
  2577                           
  2578                           ;newmain.c: 512:     RA2 = 1;
  2579  14C6  1505               	bsf	5,2	;volatile
  2580                           
  2581                           ;newmain.c: 513:     RA0 = 0;
  2582  14C7  1005               	bcf	5,0	;volatile
  2583                           
  2584                           ;newmain.c: 514:     RA1 = 0;
  2585  14C8  1085               	bcf	5,1	;volatile
  2586                           
  2587                           ;newmain.c: 515:     RA3 = 0;
  2588  14C9  1185               	bcf	5,3	;volatile
  2589                           
  2590                           ;newmain.c: 516:     _delay((unsigned long)((1)*(20000000/4000.0)));
  2591  14CA  3007               	movlw	7
  2592  14CB  1683               	bsf	3,5	;RP0=1, select bank1
  2593  14CC  1303               	bcf	3,6	;RP1=0, select bank1
  2594  14CD  00EF               	movwf	(??_display2^(0+128)+1)
  2595  14CE  307C               	movlw	124
  2596  14CF  00EE               	movwf	??_display2^(0+128)
  2597  14D0                     u6197:
  2598  14D0  0BEE               	decfsz	??_display2^(0+128),f
  2599  14D1  2CD0               	goto	u6197
  2600  14D2  0BEF               	decfsz	(??_display2^(0+128)+1),f
  2601  14D3  2CD0               	goto	u6197
  2602  14D4  0000               	nop
  2603  14D5  0008               	return
  2604  14D6                     __end_of_display2:
  2605                           
  2606                           	psect	text4
  2607  07F2                     __ptext4:	
  2608 ;; *************** function _resetSwitch *****************
  2609 ;; Defined at:
  2610 ;;		line 632 in file "newmain.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;		None
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;		None
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  1    wreg      unsigned char 
  2617 ;; Registers used:
  2618 ;;		wreg, status,2
  2619 ;; Tracked objects:
  2620 ;;		On entry : 200/100
  2621 ;;		On exit  : 200/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2624 ;;      Params:         0       0       0       0       0
  2625 ;;      Locals:         0       0       0       0       0
  2626 ;;      Temps:          0       0       0       0       0
  2627 ;;      Totals:         0       0       0       0       0
  2628 ;;Total ram usage:        0 bytes
  2629 ;; Hardware stack levels used: 1
  2630 ;; Hardware stack levels required when called: 2
  2631 ;; This function calls:
  2632 ;;		Nothing
  2633 ;; This function is called by:
  2634 ;;		_main
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           
  2639                           ;psect for function _resetSwitch
  2640  07F2                     _resetSwitch:
  2641                           
  2642                           ;newmain.c: 634:     if(RD2 == 1 && resetFlag == 1){
  2643                           
  2644                           ;incstack = 0
  2645                           ; Regs used in _resetSwitch: [wreg+status,2]
  2646  07F2  1283               	bcf	3,5	;RP0=0, select bank0
  2647  07F3  1908               	btfsc	8,2	;volatile
  2648  07F4  1DDA               	btfss	_resetFlag/(0+8),_resetFlag& (0+7)	;volatile
  2649  07F5  2FF9               	goto	l377
  2650                           
  2651                           ;newmain.c: 635:         resetFlag = 0;
  2652  07F6  11DA               	bcf	_resetFlag/(0+8),_resetFlag& (0+7)	;volatile
  2653                           
  2654                           ;newmain.c: 636:         return 1;
  2655  07F7  3001               	movlw	1
  2656  07F8  0008               	return
  2657  07F9                     l377:	
  2658                           ;newmain.c: 637:     }
  2659                           
  2660                           
  2661                           ;newmain.c: 638:     if(RD2 == 0){
  2662  07F9  1908               	btfsc	8,2	;volatile
  2663  07FA  2FFE               	goto	l2922
  2664                           
  2665                           ;newmain.c: 639:         resetFlag = 1;
  2666  07FB  15DA               	bsf	_resetFlag/(0+8),_resetFlag& (0+7)	;volatile
  2667                           
  2668                           ;newmain.c: 640:         skipCount = 0;
  2669  07FC  1683               	bsf	3,5	;RP0=1, select bank1
  2670  07FD  01B7               	clrf	_skipCount^(0+128)	;volatile
  2671  07FE                     l2922:
  2672                           
  2673                           ;newmain.c: 642:     return 0;
  2674  07FE  3000               	movlw	0
  2675  07FF  0008               	return
  2676  0800                     __end_of_resetSwitch:
  2677                           
  2678                           	psect	text5
  2679  1E0D                     __ptext5:	
  2680 ;; *************** function _initializer *****************
  2681 ;; Defined at:
  2682 ;;		line 123 in file "newmain.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;		None
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;		None
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      void 
  2689 ;; Registers used:
  2690 ;;		wreg, status,2
  2691 ;; Tracked objects:
  2692 ;;		On entry : B00/0
  2693 ;;		On exit  : B00/100
  2694 ;;		Unchanged: 800/0
  2695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2696 ;;      Params:         0       0       0       0       0
  2697 ;;      Locals:         0       0       0       0       0
  2698 ;;      Temps:          0       0       0       0       0
  2699 ;;      Totals:         0       0       0       0       0
  2700 ;;Total ram usage:        0 bytes
  2701 ;; Hardware stack levels used: 1
  2702 ;; Hardware stack levels required when called: 2
  2703 ;; This function calls:
  2704 ;;		Nothing
  2705 ;; This function is called by:
  2706 ;;		_main
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           
  2711                           ;psect for function _initializer
  2712  1E0D                     _initializer:
  2713                           
  2714                           ;newmain.c: 128:     ANSEL = 0;
  2715                           
  2716                           ;incstack = 0
  2717                           ; Regs used in _initializer: [wreg+status,2]
  2718  1E0D  1683               	bsf	3,5	;RP0=1, select bank3
  2719  1E0E  1703               	bsf	3,6	;RP1=1, select bank3
  2720  1E0F  0188               	clrf	8	;volatile
  2721                           
  2722                           ;newmain.c: 129:     ANSELH = 0;
  2723  1E10  0189               	clrf	9	;volatile
  2724                           
  2725                           ;newmain.c: 130:     nRBPU = 0;
  2726  1E11  1303               	bcf	3,6	;RP1=0, select bank1
  2727  1E12  1381               	bcf	1,7	;volatile
  2728                           
  2729                           ;newmain.c: 131:     INTEDG = 1;
  2730  1E13  1701               	bsf	1,6	;volatile
  2731                           
  2732                           ;newmain.c: 132:     GIE=1;
  2733  1E14  178B               	bsf	11,7	;volatile
  2734                           
  2735                           ;newmain.c: 133:     PEIE=1;
  2736  1E15  170B               	bsf	11,6	;volatile
  2737                           
  2738                           ;newmain.c: 134:     INTE = 1;
  2739  1E16  160B               	bsf	11,4	;volatile
  2740                           
  2741                           ;newmain.c: 135:     INTF=0;
  2742  1E17  108B               	bcf	11,1	;volatile
  2743                           
  2744                           ;newmain.c: 136:     RBIE = 1;
  2745  1E18  158B               	bsf	11,3	;volatile
  2746                           
  2747                           ;newmain.c: 137:     RBIF = 0;
  2748  1E19  100B               	bcf	11,0	;volatile
  2749                           
  2750                           ;newmain.c: 138:     WPUB = 0xF1;
  2751  1E1A  30F1               	movlw	241
  2752  1E1B  0095               	movwf	21	;volatile
  2753                           
  2754                           ;newmain.c: 139:     IOCB = 0xC0;
  2755  1E1C  30C0               	movlw	192
  2756  1E1D  0096               	movwf	22	;volatile
  2757                           
  2758                           ;newmain.c: 140:     T1CON = 0x20;
  2759  1E1E  3020               	movlw	32
  2760  1E1F  1283               	bcf	3,5	;RP0=0, select bank0
  2761  1E20  0090               	movwf	16	;volatile
  2762                           
  2763                           ;newmain.c: 141:     TMR1H=0x0B;
  2764  1E21  300B               	movlw	11
  2765  1E22  008F               	movwf	15	;volatile
  2766                           
  2767                           ;newmain.c: 142:     TMR1L=0xE5;
  2768  1E23  30E5               	movlw	229
  2769  1E24  008E               	movwf	14	;volatile
  2770                           
  2771                           ;newmain.c: 143:     TMR1IE=1;
  2772  1E25  1683               	bsf	3,5	;RP0=1, select bank1
  2773  1E26  140C               	bsf	12,0	;volatile
  2774                           
  2775                           ;newmain.c: 144:     TMR1ON = 1;
  2776  1E27  1283               	bcf	3,5	;RP0=0, select bank0
  2777  1E28  1410               	bsf	16,0	;volatile
  2778                           
  2779                           ;newmain.c: 145:     TRISA = 0xF0;
  2780  1E29  30F0               	movlw	240
  2781  1E2A  1683               	bsf	3,5	;RP0=1, select bank1
  2782  1E2B  0085               	movwf	5	;volatile
  2783                           
  2784                           ;newmain.c: 146:     TRISB = 0xF1;
  2785  1E2C  30F1               	movlw	241
  2786  1E2D  0086               	movwf	6	;volatile
  2787                           
  2788                           ;newmain.c: 147:     TRISC = 0xFF;
  2789  1E2E  30FF               	movlw	255
  2790  1E2F  0087               	movwf	7	;volatile
  2791                           
  2792                           ;newmain.c: 148:     TRISD = 0xFF;
  2793  1E30  30FF               	movlw	255
  2794  1E31  0088               	movwf	8	;volatile
  2795                           
  2796                           ;newmain.c: 149:     TRISE = 0x01;
  2797  1E32  3001               	movlw	1
  2798  1E33  0089               	movwf	9	;volatile
  2799  1E34  0008               	return
  2800  1E35                     __end_of_initializer:
  2801                           
  2802                           	psect	text6
  2803  1E60                     __ptext6:	
  2804 ;; *************** function _encoder *****************
  2805 ;; Defined at:
  2806 ;;		line 717 in file "newmain.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;		None
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;		None
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2, status,0
  2815 ;; Tracked objects:
  2816 ;;		On entry : 300/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2820 ;;      Params:         0       0       0       0       0
  2821 ;;      Locals:         0       0       0       0       0
  2822 ;;      Temps:          0       0       0       0       0
  2823 ;;      Totals:         0       0       0       0       0
  2824 ;;Total ram usage:        0 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; Hardware stack levels required when called: 2
  2827 ;; This function calls:
  2828 ;;		Nothing
  2829 ;; This function is called by:
  2830 ;;		_main
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834                           
  2835                           ;psect for function _encoder
  2836  1E60                     _encoder:
  2837                           
  2838                           ;newmain.c: 733:     if(currentClothLength > (1000010UL)){
  2839                           
  2840                           ;incstack = 0
  2841                           ; Regs used in _encoder: [wreg+status,2+status,0]
  2842  1E60  0855               	movf	_currentClothLength+3,w	;volatile
  2843  1E61  1D03               	btfss	3,2
  2844  1E62  2E71               	goto	l2978
  2845  1E63  300F               	movlw	15
  2846  1E64  0254               	subwf	_currentClothLength+2,w	;volatile
  2847  1E65  1D03               	skipz
  2848  1E66  2E6F               	goto	u3973
  2849  1E67  3042               	movlw	66
  2850  1E68  0253               	subwf	_currentClothLength+1,w	;volatile
  2851  1E69  1D03               	skipz
  2852  1E6A  2E6F               	goto	u3973
  2853  1E6B  304B               	movlw	75
  2854  1E6C  0252               	subwf	_currentClothLength,w	;volatile
  2855  1E6D  1D03               	skipz
  2856  1E6E  2E6F               	goto	u3973
  2857  1E6F                     u3973:
  2858  1E6F  1C03               	btfss	3,0
  2859  1E70  2E7B               	goto	l2980
  2860  1E71                     l2978:
  2861                           
  2862                           ;newmain.c: 734:         currentClothLength = 0;
  2863  1E71  3000               	movlw	0
  2864  1E72  1283               	bcf	3,5	;RP0=0, select bank0
  2865  1E73  1303               	bcf	3,6	;RP1=0, select bank0
  2866  1E74  00D5               	movwf	_currentClothLength+3	;volatile
  2867  1E75  3000               	movlw	0
  2868  1E76  00D4               	movwf	_currentClothLength+2	;volatile
  2869  1E77  3000               	movlw	0
  2870  1E78  00D3               	movwf	_currentClothLength+1	;volatile
  2871  1E79  3000               	movlw	0
  2872  1E7A  00D2               	movwf	_currentClothLength	;volatile
  2873  1E7B                     l2980:
  2874                           
  2875                           ;newmain.c: 736:     if(currentClothLength > (99999UL)){
  2876  1E7B  1283               	bcf	3,5	;RP0=0, select bank0
  2877  1E7C  1303               	bcf	3,6	;RP1=0, select bank0
  2878  1E7D  0855               	movf	_currentClothLength+3,w	;volatile
  2879  1E7E  1D03               	btfss	3,2
  2880  1E7F  2E8E               	goto	l2982
  2881  1E80  3001               	movlw	1
  2882  1E81  0254               	subwf	_currentClothLength+2,w	;volatile
  2883  1E82  1D03               	skipz
  2884  1E83  2E8C               	goto	u3983
  2885  1E84  3086               	movlw	134
  2886  1E85  0253               	subwf	_currentClothLength+1,w	;volatile
  2887  1E86  1D03               	skipz
  2888  1E87  2E8C               	goto	u3983
  2889  1E88  30A0               	movlw	160
  2890  1E89  0252               	subwf	_currentClothLength,w	;volatile
  2891  1E8A  1D03               	skipz
  2892  1E8B  2E8C               	goto	u3983
  2893  1E8C                     u3983:
  2894  1E8C  1C03               	btfss	3,0
  2895  1E8D  0008               	return
  2896  1E8E                     l2982:
  2897                           
  2898                           ;newmain.c: 737:         currentClothLength = (99999UL);
  2899  1E8E  3000               	movlw	0
  2900  1E8F  1283               	bcf	3,5	;RP0=0, select bank0
  2901  1E90  1303               	bcf	3,6	;RP1=0, select bank0
  2902  1E91  00D5               	movwf	_currentClothLength+3	;volatile
  2903  1E92  3001               	movlw	1
  2904  1E93  00D4               	movwf	_currentClothLength+2	;volatile
  2905  1E94  3086               	movlw	134
  2906  1E95  00D3               	movwf	_currentClothLength+1	;volatile
  2907  1E96  309F               	movlw	159
  2908  1E97  00D2               	movwf	_currentClothLength	;volatile
  2909  1E98  0008               	return
  2910  1E99                     __end_of_encoder:
  2911                           
  2912                           	psect	text7
  2913  004B                     __ptext7:	
  2914 ;; *************** function _eepromRead *****************
  2915 ;; Defined at:
  2916 ;;		line 153 in file "newmain.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;		None
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, status,2, status,0, pclath, cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : B00/100
  2927 ;;		On exit  : 300/100
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2930 ;;      Params:         0       0       0       0       0
  2931 ;;      Locals:         0       0       0       0       0
  2932 ;;      Temps:          0       0      14       0       0
  2933 ;;      Totals:         0       0      14       0       0
  2934 ;;Total ram usage:       14 bytes
  2935 ;; Hardware stack levels used: 1
  2936 ;; Hardware stack levels required when called: 3
  2937 ;; This function calls:
  2938 ;;		___lldiv
  2939 ;;		___lmul
  2940 ;;		___wmul
  2941 ;;		_eeprom_read
  2942 ;; This function is called by:
  2943 ;;		_main
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           
  2948                           ;psect for function _eepromRead
  2949  004B                     _eepromRead:
  2950                           
  2951                           ;newmain.c: 155:     actualClothLength = (unsigned int)eeprom_read(0x00)*(10000UL) + (un
      +                          signed int)eeprom_read(0x01)*100 + (unsigned int)eeprom_read(0x02);
  2952                           
  2953                           ;incstack = 0
  2954                           ; Regs used in _eepromRead: [wreg+status,2+status,0+pclath+cstack]
  2955  004B  3002               	movlw	2
  2956  004C  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  2957  0051  1683               	bsf	3,5	;RP0=1, select bank1
  2958  0052  1303               	bcf	3,6	;RP1=0, select bank1
  2959  0053  00E0               	movwf	??_eepromRead^(0+128)
  2960  0054  01E1               	clrf	(??_eepromRead^(0+128)+1)
  2961  0055  01E2               	clrf	(??_eepromRead^(0+128)+2)
  2962  0056  01E3               	clrf	(??_eepromRead^(0+128)+3)
  2963  0057  3001               	movlw	1
  2964  0058  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  2965  005D  1683               	bsf	3,5	;RP0=1, select bank1
  2966  005E  1303               	bcf	3,6	;RP1=0, select bank1
  2967  005F  00E4               	movwf	(??_eepromRead+4)^(0+128)
  2968  0060  01E5               	clrf	((??_eepromRead+4)^(0+128)+1)
  2969  0061  0864               	movf	(??_eepromRead+4)^(0+128),w
  2970  0062  1283               	bcf	3,5	;RP0=0, select bank0
  2971  0063  00B3               	movwf	___wmul@multiplier
  2972  0064  1683               	bsf	3,5	;RP0=1, select bank1
  2973  0065  0865               	movf	(??_eepromRead+5)^(0+128),w
  2974  0066  1283               	bcf	3,5	;RP0=0, select bank0
  2975  0067  00B4               	movwf	___wmul@multiplier+1
  2976  0068  3064               	movlw	100
  2977  0069  00B5               	movwf	___wmul@multiplicand
  2978  006A  3000               	movlw	0
  2979  006B  00B6               	movwf	___wmul@multiplicand+1
  2980  006C  160A  158A  2580  120A  118A  	fcall	___wmul
  2981  0071  0833               	movf	?___wmul,w
  2982  0072  1683               	bsf	3,5	;RP0=1, select bank1
  2983  0073  00E6               	movwf	(??_eepromRead+6)^(0+128)
  2984  0074  1283               	bcf	3,5	;RP0=0, select bank0
  2985  0075  0834               	movf	?___wmul+1,w
  2986  0076  1683               	bsf	3,5	;RP0=1, select bank1
  2987  0077  00E7               	movwf	((??_eepromRead+6)^(0+128)+1)
  2988  0078  01E8               	clrf	((??_eepromRead+6)^(0+128)+2)
  2989  0079  01E9               	clrf	((??_eepromRead+6)^(0+128)+3)
  2990  007A  3000               	movlw	0
  2991  007B  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  2992  0080  1683               	bsf	3,5	;RP0=1, select bank1
  2993  0081  1303               	bcf	3,6	;RP1=0, select bank1
  2994  0082  00EA               	movwf	(??_eepromRead+10)^(0+128)
  2995  0083  01EB               	clrf	((??_eepromRead+10)^(0+128)+1)
  2996  0084  01EC               	clrf	((??_eepromRead+10)^(0+128)+2)
  2997  0085  01ED               	clrf	((??_eepromRead+10)^(0+128)+3)
  2998  0086  086D               	movf	(??_eepromRead+13)^(0+128),w
  2999  0087  1283               	bcf	3,5	;RP0=0, select bank0
  3000  0088  00B6               	movwf	___lmul@multiplier+3
  3001  0089  1683               	bsf	3,5	;RP0=1, select bank1
  3002  008A  086C               	movf	(??_eepromRead+12)^(0+128),w
  3003  008B  1283               	bcf	3,5	;RP0=0, select bank0
  3004  008C  00B5               	movwf	___lmul@multiplier+2
  3005  008D  1683               	bsf	3,5	;RP0=1, select bank1
  3006  008E  086B               	movf	(??_eepromRead+11)^(0+128),w
  3007  008F  1283               	bcf	3,5	;RP0=0, select bank0
  3008  0090  00B4               	movwf	___lmul@multiplier+1
  3009  0091  1683               	bsf	3,5	;RP0=1, select bank1
  3010  0092  086A               	movf	(??_eepromRead+10)^(0+128),w
  3011  0093  1283               	bcf	3,5	;RP0=0, select bank0
  3012  0094  00B3               	movwf	___lmul@multiplier
  3013  0095  3000               	movlw	0
  3014  0096  00BA               	movwf	___lmul@multiplicand+3
  3015  0097  3000               	movlw	0
  3016  0098  00B9               	movwf	___lmul@multiplicand+2
  3017  0099  3027               	movlw	39
  3018  009A  00B8               	movwf	___lmul@multiplicand+1
  3019  009B  3010               	movlw	16
  3020  009C  00B7               	movwf	___lmul@multiplicand
  3021  009D  160A  158A  2699  120A  118A  	fcall	___lmul
  3022  00A2  0833               	movf	?___lmul,w
  3023  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  3024  00A4  07E6               	addwf	(??_eepromRead+6)^(0+128),f
  3025  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  3026  00A6  0834               	movf	?___lmul+1,w
  3027  00A7  1803               	skipnc
  3028  00A8  0F34               	incfsz	?___lmul+1,w
  3029  00A9  28AB               	goto	u5370
  3030  00AA  28AD               	goto	u5371
  3031  00AB                     u5370:
  3032  00AB  1683               	bsf	3,5	;RP0=1, select bank1
  3033  00AC  07E7               	addwf	((??_eepromRead+6)^(0+128)+1),f
  3034  00AD                     u5371:
  3035  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  3036  00AE  0835               	movf	?___lmul+2,w
  3037  00AF  1803               	skipnc
  3038  00B0  0F35               	incfsz	?___lmul+2,w
  3039  00B1  28B3               	goto	u5372
  3040  00B2  28B5               	goto	u5373
  3041  00B3                     u5372:
  3042  00B3  1683               	bsf	3,5	;RP0=1, select bank1
  3043  00B4  07E8               	addwf	((??_eepromRead+6)^(0+128)+2),f
  3044  00B5                     u5373:
  3045  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  3046  00B6  0836               	movf	?___lmul+3,w
  3047  00B7  1803               	skipnc
  3048  00B8  0A36               	incf	?___lmul+3,w
  3049  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  3050  00BA  07E9               	addwf	((??_eepromRead+6)^(0+128)+3),f
  3051  00BB  0866               	movf	(??_eepromRead+6)^(0+128),w
  3052  00BC  07E0               	addwf	??_eepromRead^(0+128),f
  3053  00BD  0867               	movf	(??_eepromRead+7)^(0+128),w
  3054  00BE  1803               	skipnc
  3055  00BF  0F67               	incfsz	(??_eepromRead+7)^(0+128),w
  3056  00C0  28C2               	goto	u5380
  3057  00C1  28C3               	goto	u5381
  3058  00C2                     u5380:
  3059  00C2  07E1               	addwf	(??_eepromRead^(0+128)+1),f
  3060  00C3                     u5381:
  3061  00C3  0868               	movf	(??_eepromRead+8)^(0+128),w
  3062  00C4  1803               	skipnc
  3063  00C5  0F68               	incfsz	(??_eepromRead+8)^(0+128),w
  3064  00C6  28C8               	goto	u5382
  3065  00C7  28C9               	goto	u5383
  3066  00C8                     u5382:
  3067  00C8  07E2               	addwf	(??_eepromRead^(0+128)+2),f
  3068  00C9                     u5383:
  3069  00C9  0869               	movf	(??_eepromRead+9)^(0+128),w
  3070  00CA  1803               	skipnc
  3071  00CB  0A69               	incf	(??_eepromRead+9)^(0+128),w
  3072  00CC  07E3               	addwf	(??_eepromRead^(0+128)+3),f
  3073  00CD  0863               	movf	(??_eepromRead+3)^(0+128),w
  3074  00CE  00CF               	movwf	(_actualClothLength+3)^(0+128)	;volatile
  3075  00CF  0862               	movf	(??_eepromRead+2)^(0+128),w
  3076  00D0  00CE               	movwf	(_actualClothLength+2)^(0+128)	;volatile
  3077  00D1  0861               	movf	(??_eepromRead+1)^(0+128),w
  3078  00D2  00CD               	movwf	(_actualClothLength+1)^(0+128)	;volatile
  3079  00D3  0860               	movf	??_eepromRead^(0+128),w
  3080  00D4  00CC               	movwf	_actualClothLength^(0+128)	;volatile
  3081                           
  3082                           ;newmain.c: 156:     warningClothLength = (unsigned int)eeprom_read(0x03)*(10000UL) + (u
      +                          nsigned int)eeprom_read(0x04)*100 + (unsigned int)eeprom_read(0x05);
  3083  00D5  3005               	movlw	5
  3084  00D6  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  3085  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  3086  00DC  1303               	bcf	3,6	;RP1=0, select bank1
  3087  00DD  00E0               	movwf	??_eepromRead^(0+128)
  3088  00DE  01E1               	clrf	(??_eepromRead^(0+128)+1)
  3089  00DF  01E2               	clrf	(??_eepromRead^(0+128)+2)
  3090  00E0  01E3               	clrf	(??_eepromRead^(0+128)+3)
  3091  00E1  3004               	movlw	4
  3092  00E2  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  3093  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  3094  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  3095  00E9  00E4               	movwf	(??_eepromRead+4)^(0+128)
  3096  00EA  01E5               	clrf	((??_eepromRead+4)^(0+128)+1)
  3097  00EB  0864               	movf	(??_eepromRead+4)^(0+128),w
  3098  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  3099  00ED  00B3               	movwf	___wmul@multiplier
  3100  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  3101  00EF  0865               	movf	(??_eepromRead+5)^(0+128),w
  3102  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  3103  00F1  00B4               	movwf	___wmul@multiplier+1
  3104  00F2  3064               	movlw	100
  3105  00F3  00B5               	movwf	___wmul@multiplicand
  3106  00F4  3000               	movlw	0
  3107  00F5  00B6               	movwf	___wmul@multiplicand+1
  3108  00F6  160A  158A  2580  120A  118A  	fcall	___wmul
  3109  00FB  0833               	movf	?___wmul,w
  3110  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  3111  00FD  00E6               	movwf	(??_eepromRead+6)^(0+128)
  3112  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  3113  00FF  0834               	movf	?___wmul+1,w
  3114  0100  1683               	bsf	3,5	;RP0=1, select bank1
  3115  0101  00E7               	movwf	((??_eepromRead+6)^(0+128)+1)
  3116  0102  01E8               	clrf	((??_eepromRead+6)^(0+128)+2)
  3117  0103  01E9               	clrf	((??_eepromRead+6)^(0+128)+3)
  3118  0104  3003               	movlw	3
  3119  0105  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  3120  010A  1683               	bsf	3,5	;RP0=1, select bank1
  3121  010B  1303               	bcf	3,6	;RP1=0, select bank1
  3122  010C  00EA               	movwf	(??_eepromRead+10)^(0+128)
  3123  010D  01EB               	clrf	((??_eepromRead+10)^(0+128)+1)
  3124  010E  01EC               	clrf	((??_eepromRead+10)^(0+128)+2)
  3125  010F  01ED               	clrf	((??_eepromRead+10)^(0+128)+3)
  3126  0110  086D               	movf	(??_eepromRead+13)^(0+128),w
  3127  0111  1283               	bcf	3,5	;RP0=0, select bank0
  3128  0112  00B6               	movwf	___lmul@multiplier+3
  3129  0113  1683               	bsf	3,5	;RP0=1, select bank1
  3130  0114  086C               	movf	(??_eepromRead+12)^(0+128),w
  3131  0115  1283               	bcf	3,5	;RP0=0, select bank0
  3132  0116  00B5               	movwf	___lmul@multiplier+2
  3133  0117  1683               	bsf	3,5	;RP0=1, select bank1
  3134  0118  086B               	movf	(??_eepromRead+11)^(0+128),w
  3135  0119  1283               	bcf	3,5	;RP0=0, select bank0
  3136  011A  00B4               	movwf	___lmul@multiplier+1
  3137  011B  1683               	bsf	3,5	;RP0=1, select bank1
  3138  011C  086A               	movf	(??_eepromRead+10)^(0+128),w
  3139  011D  1283               	bcf	3,5	;RP0=0, select bank0
  3140  011E  00B3               	movwf	___lmul@multiplier
  3141  011F  3000               	movlw	0
  3142  0120  00BA               	movwf	___lmul@multiplicand+3
  3143  0121  3000               	movlw	0
  3144  0122  00B9               	movwf	___lmul@multiplicand+2
  3145  0123  3027               	movlw	39
  3146  0124  00B8               	movwf	___lmul@multiplicand+1
  3147  0125  3010               	movlw	16
  3148  0126  00B7               	movwf	___lmul@multiplicand
  3149  0127  160A  158A  2699  120A  118A  	fcall	___lmul
  3150  012C  0833               	movf	?___lmul,w
  3151  012D  1683               	bsf	3,5	;RP0=1, select bank1
  3152  012E  07E6               	addwf	(??_eepromRead+6)^(0+128),f
  3153  012F  1283               	bcf	3,5	;RP0=0, select bank0
  3154  0130  0834               	movf	?___lmul+1,w
  3155  0131  1803               	skipnc
  3156  0132  0F34               	incfsz	?___lmul+1,w
  3157  0133  2935               	goto	u5390
  3158  0134  2937               	goto	u5391
  3159  0135                     u5390:
  3160  0135  1683               	bsf	3,5	;RP0=1, select bank1
  3161  0136  07E7               	addwf	((??_eepromRead+6)^(0+128)+1),f
  3162  0137                     u5391:
  3163  0137  1283               	bcf	3,5	;RP0=0, select bank0
  3164  0138  0835               	movf	?___lmul+2,w
  3165  0139  1803               	skipnc
  3166  013A  0F35               	incfsz	?___lmul+2,w
  3167  013B  293D               	goto	u5392
  3168  013C  293F               	goto	u5393
  3169  013D                     u5392:
  3170  013D  1683               	bsf	3,5	;RP0=1, select bank1
  3171  013E  07E8               	addwf	((??_eepromRead+6)^(0+128)+2),f
  3172  013F                     u5393:
  3173  013F  1283               	bcf	3,5	;RP0=0, select bank0
  3174  0140  0836               	movf	?___lmul+3,w
  3175  0141  1803               	skipnc
  3176  0142  0A36               	incf	?___lmul+3,w
  3177  0143  1683               	bsf	3,5	;RP0=1, select bank1
  3178  0144  07E9               	addwf	((??_eepromRead+6)^(0+128)+3),f
  3179  0145  0866               	movf	(??_eepromRead+6)^(0+128),w
  3180  0146  07E0               	addwf	??_eepromRead^(0+128),f
  3181  0147  0867               	movf	(??_eepromRead+7)^(0+128),w
  3182  0148  1803               	skipnc
  3183  0149  0F67               	incfsz	(??_eepromRead+7)^(0+128),w
  3184  014A  294C               	goto	u5400
  3185  014B  294D               	goto	u5401
  3186  014C                     u5400:
  3187  014C  07E1               	addwf	(??_eepromRead^(0+128)+1),f
  3188  014D                     u5401:
  3189  014D  0868               	movf	(??_eepromRead+8)^(0+128),w
  3190  014E  1803               	skipnc
  3191  014F  0F68               	incfsz	(??_eepromRead+8)^(0+128),w
  3192  0150  2952               	goto	u5402
  3193  0151  2953               	goto	u5403
  3194  0152                     u5402:
  3195  0152  07E2               	addwf	(??_eepromRead^(0+128)+2),f
  3196  0153                     u5403:
  3197  0153  0869               	movf	(??_eepromRead+9)^(0+128),w
  3198  0154  1803               	skipnc
  3199  0155  0A69               	incf	(??_eepromRead+9)^(0+128),w
  3200  0156  07E3               	addwf	(??_eepromRead^(0+128)+3),f
  3201  0157  0863               	movf	(??_eepromRead+3)^(0+128),w
  3202  0158  00CB               	movwf	(_warningClothLength+3)^(0+128)	;volatile
  3203  0159  0862               	movf	(??_eepromRead+2)^(0+128),w
  3204  015A  00CA               	movwf	(_warningClothLength+2)^(0+128)	;volatile
  3205  015B  0861               	movf	(??_eepromRead+1)^(0+128),w
  3206  015C  00C9               	movwf	(_warningClothLength+1)^(0+128)	;volatile
  3207  015D  0860               	movf	??_eepromRead^(0+128),w
  3208  015E  00C8               	movwf	_warningClothLength^(0+128)	;volatile
  3209                           
  3210                           ;newmain.c: 157:     circumference = (unsigned int)eeprom_read(0x06)*(10000UL) + (unsign
      +                          ed int)eeprom_read(0x07)*100 + (unsigned int)eeprom_read(0x08);
  3211  015F  3008               	movlw	8
  3212  0160  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  3213  0165  1683               	bsf	3,5	;RP0=1, select bank1
  3214  0166  1303               	bcf	3,6	;RP1=0, select bank1
  3215  0167  00E0               	movwf	??_eepromRead^(0+128)
  3216  0168  01E1               	clrf	(??_eepromRead^(0+128)+1)
  3217  0169  01E2               	clrf	(??_eepromRead^(0+128)+2)
  3218  016A  01E3               	clrf	(??_eepromRead^(0+128)+3)
  3219  016B  3007               	movlw	7
  3220  016C  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  3221  0171  1683               	bsf	3,5	;RP0=1, select bank1
  3222  0172  1303               	bcf	3,6	;RP1=0, select bank1
  3223  0173  00E4               	movwf	(??_eepromRead+4)^(0+128)
  3224  0174  01E5               	clrf	((??_eepromRead+4)^(0+128)+1)
  3225  0175  0864               	movf	(??_eepromRead+4)^(0+128),w
  3226  0176  1283               	bcf	3,5	;RP0=0, select bank0
  3227  0177  00B3               	movwf	___wmul@multiplier
  3228  0178  1683               	bsf	3,5	;RP0=1, select bank1
  3229  0179  0865               	movf	(??_eepromRead+5)^(0+128),w
  3230  017A  1283               	bcf	3,5	;RP0=0, select bank0
  3231  017B  00B4               	movwf	___wmul@multiplier+1
  3232  017C  3064               	movlw	100
  3233  017D  00B5               	movwf	___wmul@multiplicand
  3234  017E  3000               	movlw	0
  3235  017F  00B6               	movwf	___wmul@multiplicand+1
  3236  0180  160A  158A  2580  120A  118A  	fcall	___wmul
  3237  0185  0833               	movf	?___wmul,w
  3238  0186  1683               	bsf	3,5	;RP0=1, select bank1
  3239  0187  00E6               	movwf	(??_eepromRead+6)^(0+128)
  3240  0188  1283               	bcf	3,5	;RP0=0, select bank0
  3241  0189  0834               	movf	?___wmul+1,w
  3242  018A  1683               	bsf	3,5	;RP0=1, select bank1
  3243  018B  00E7               	movwf	((??_eepromRead+6)^(0+128)+1)
  3244  018C  01E8               	clrf	((??_eepromRead+6)^(0+128)+2)
  3245  018D  01E9               	clrf	((??_eepromRead+6)^(0+128)+3)
  3246  018E  3006               	movlw	6
  3247  018F  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  3248  0194  1683               	bsf	3,5	;RP0=1, select bank1
  3249  0195  1303               	bcf	3,6	;RP1=0, select bank1
  3250  0196  00EA               	movwf	(??_eepromRead+10)^(0+128)
  3251  0197  01EB               	clrf	((??_eepromRead+10)^(0+128)+1)
  3252  0198  01EC               	clrf	((??_eepromRead+10)^(0+128)+2)
  3253  0199  01ED               	clrf	((??_eepromRead+10)^(0+128)+3)
  3254  019A  086D               	movf	(??_eepromRead+13)^(0+128),w
  3255  019B  1283               	bcf	3,5	;RP0=0, select bank0
  3256  019C  00B6               	movwf	___lmul@multiplier+3
  3257  019D  1683               	bsf	3,5	;RP0=1, select bank1
  3258  019E  086C               	movf	(??_eepromRead+12)^(0+128),w
  3259  019F  1283               	bcf	3,5	;RP0=0, select bank0
  3260  01A0  00B5               	movwf	___lmul@multiplier+2
  3261  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  3262  01A2  086B               	movf	(??_eepromRead+11)^(0+128),w
  3263  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  3264  01A4  00B4               	movwf	___lmul@multiplier+1
  3265  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  3266  01A6  086A               	movf	(??_eepromRead+10)^(0+128),w
  3267  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  3268  01A8  00B3               	movwf	___lmul@multiplier
  3269  01A9  3000               	movlw	0
  3270  01AA  00BA               	movwf	___lmul@multiplicand+3
  3271  01AB  3000               	movlw	0
  3272  01AC  00B9               	movwf	___lmul@multiplicand+2
  3273  01AD  3027               	movlw	39
  3274  01AE  00B8               	movwf	___lmul@multiplicand+1
  3275  01AF  3010               	movlw	16
  3276  01B0  00B7               	movwf	___lmul@multiplicand
  3277  01B1  160A  158A  2699  120A  118A  	fcall	___lmul
  3278  01B6  0833               	movf	?___lmul,w
  3279  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  3280  01B8  07E6               	addwf	(??_eepromRead+6)^(0+128),f
  3281  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  3282  01BA  0834               	movf	?___lmul+1,w
  3283  01BB  1803               	skipnc
  3284  01BC  0F34               	incfsz	?___lmul+1,w
  3285  01BD  29BF               	goto	u5410
  3286  01BE  29C1               	goto	u5411
  3287  01BF                     u5410:
  3288  01BF  1683               	bsf	3,5	;RP0=1, select bank1
  3289  01C0  07E7               	addwf	((??_eepromRead+6)^(0+128)+1),f
  3290  01C1                     u5411:
  3291  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  3292  01C2  0835               	movf	?___lmul+2,w
  3293  01C3  1803               	skipnc
  3294  01C4  0F35               	incfsz	?___lmul+2,w
  3295  01C5  29C7               	goto	u5412
  3296  01C6  29C9               	goto	u5413
  3297  01C7                     u5412:
  3298  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  3299  01C8  07E8               	addwf	((??_eepromRead+6)^(0+128)+2),f
  3300  01C9                     u5413:
  3301  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  3302  01CA  0836               	movf	?___lmul+3,w
  3303  01CB  1803               	skipnc
  3304  01CC  0A36               	incf	?___lmul+3,w
  3305  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  3306  01CE  07E9               	addwf	((??_eepromRead+6)^(0+128)+3),f
  3307  01CF  0866               	movf	(??_eepromRead+6)^(0+128),w
  3308  01D0  07E0               	addwf	??_eepromRead^(0+128),f
  3309  01D1  0867               	movf	(??_eepromRead+7)^(0+128),w
  3310  01D2  1803               	skipnc
  3311  01D3  0F67               	incfsz	(??_eepromRead+7)^(0+128),w
  3312  01D4  29D6               	goto	u5420
  3313  01D5  29D7               	goto	u5421
  3314  01D6                     u5420:
  3315  01D6  07E1               	addwf	(??_eepromRead^(0+128)+1),f
  3316  01D7                     u5421:
  3317  01D7  0868               	movf	(??_eepromRead+8)^(0+128),w
  3318  01D8  1803               	skipnc
  3319  01D9  0F68               	incfsz	(??_eepromRead+8)^(0+128),w
  3320  01DA  29DC               	goto	u5422
  3321  01DB  29DD               	goto	u5423
  3322  01DC                     u5422:
  3323  01DC  07E2               	addwf	(??_eepromRead^(0+128)+2),f
  3324  01DD                     u5423:
  3325  01DD  0869               	movf	(??_eepromRead+9)^(0+128),w
  3326  01DE  1803               	skipnc
  3327  01DF  0A69               	incf	(??_eepromRead+9)^(0+128),w
  3328  01E0  07E3               	addwf	(??_eepromRead^(0+128)+3),f
  3329  01E1  0863               	movf	(??_eepromRead+3)^(0+128),w
  3330  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  3331  01E3  00D9               	movwf	_circumference+3	;volatile
  3332  01E4  1683               	bsf	3,5	;RP0=1, select bank1
  3333  01E5  0862               	movf	(??_eepromRead+2)^(0+128),w
  3334  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  3335  01E7  00D8               	movwf	_circumference+2	;volatile
  3336  01E8  1683               	bsf	3,5	;RP0=1, select bank1
  3337  01E9  0861               	movf	(??_eepromRead+1)^(0+128),w
  3338  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  3339  01EB  00D7               	movwf	_circumference+1	;volatile
  3340  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  3341  01ED  0860               	movf	??_eepromRead^(0+128),w
  3342  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  3343  01EF  00D6               	movwf	_circumference	;volatile
  3344                           
  3345                           ;newmain.c: 158:     pulse = (unsigned int)eeprom_read(0x09)*(10000UL) + (unsigned int)e
      +                          eprom_read(0x0A)*100 + (unsigned int)eeprom_read(0x0B);
  3346  01F0  300B               	movlw	11
  3347  01F1  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  3348  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  3349  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  3350  01F8  00E0               	movwf	??_eepromRead^(0+128)
  3351  01F9  01E1               	clrf	(??_eepromRead^(0+128)+1)
  3352  01FA  01E2               	clrf	(??_eepromRead^(0+128)+2)
  3353  01FB  01E3               	clrf	(??_eepromRead^(0+128)+3)
  3354  01FC  300A               	movlw	10
  3355  01FD  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  3356  0202  1683               	bsf	3,5	;RP0=1, select bank1
  3357  0203  1303               	bcf	3,6	;RP1=0, select bank1
  3358  0204  00E4               	movwf	(??_eepromRead+4)^(0+128)
  3359  0205  01E5               	clrf	((??_eepromRead+4)^(0+128)+1)
  3360  0206  0864               	movf	(??_eepromRead+4)^(0+128),w
  3361  0207  1283               	bcf	3,5	;RP0=0, select bank0
  3362  0208  00B3               	movwf	___wmul@multiplier
  3363  0209  1683               	bsf	3,5	;RP0=1, select bank1
  3364  020A  0865               	movf	(??_eepromRead+5)^(0+128),w
  3365  020B  1283               	bcf	3,5	;RP0=0, select bank0
  3366  020C  00B4               	movwf	___wmul@multiplier+1
  3367  020D  3064               	movlw	100
  3368  020E  00B5               	movwf	___wmul@multiplicand
  3369  020F  3000               	movlw	0
  3370  0210  00B6               	movwf	___wmul@multiplicand+1
  3371  0211  160A  158A  2580  120A  118A  	fcall	___wmul
  3372  0216  0833               	movf	?___wmul,w
  3373  0217  1683               	bsf	3,5	;RP0=1, select bank1
  3374  0218  00E6               	movwf	(??_eepromRead+6)^(0+128)
  3375  0219  1283               	bcf	3,5	;RP0=0, select bank0
  3376  021A  0834               	movf	?___wmul+1,w
  3377  021B  1683               	bsf	3,5	;RP0=1, select bank1
  3378  021C  00E7               	movwf	((??_eepromRead+6)^(0+128)+1)
  3379  021D  01E8               	clrf	((??_eepromRead+6)^(0+128)+2)
  3380  021E  01E9               	clrf	((??_eepromRead+6)^(0+128)+3)
  3381  021F  3009               	movlw	9
  3382  0220  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  3383  0225  1683               	bsf	3,5	;RP0=1, select bank1
  3384  0226  1303               	bcf	3,6	;RP1=0, select bank1
  3385  0227  00EA               	movwf	(??_eepromRead+10)^(0+128)
  3386  0228  01EB               	clrf	((??_eepromRead+10)^(0+128)+1)
  3387  0229  01EC               	clrf	((??_eepromRead+10)^(0+128)+2)
  3388  022A  01ED               	clrf	((??_eepromRead+10)^(0+128)+3)
  3389  022B  086D               	movf	(??_eepromRead+13)^(0+128),w
  3390  022C  1283               	bcf	3,5	;RP0=0, select bank0
  3391  022D  00B6               	movwf	___lmul@multiplier+3
  3392  022E  1683               	bsf	3,5	;RP0=1, select bank1
  3393  022F  086C               	movf	(??_eepromRead+12)^(0+128),w
  3394  0230  1283               	bcf	3,5	;RP0=0, select bank0
  3395  0231  00B5               	movwf	___lmul@multiplier+2
  3396  0232  1683               	bsf	3,5	;RP0=1, select bank1
  3397  0233  086B               	movf	(??_eepromRead+11)^(0+128),w
  3398  0234  1283               	bcf	3,5	;RP0=0, select bank0
  3399  0235  00B4               	movwf	___lmul@multiplier+1
  3400  0236  1683               	bsf	3,5	;RP0=1, select bank1
  3401  0237  086A               	movf	(??_eepromRead+10)^(0+128),w
  3402  0238  1283               	bcf	3,5	;RP0=0, select bank0
  3403  0239  00B3               	movwf	___lmul@multiplier
  3404  023A  3000               	movlw	0
  3405  023B  00BA               	movwf	___lmul@multiplicand+3
  3406  023C  3000               	movlw	0
  3407  023D  00B9               	movwf	___lmul@multiplicand+2
  3408  023E  3027               	movlw	39
  3409  023F  00B8               	movwf	___lmul@multiplicand+1
  3410  0240  3010               	movlw	16
  3411  0241  00B7               	movwf	___lmul@multiplicand
  3412  0242  160A  158A  2699  120A  118A  	fcall	___lmul
  3413  0247  0833               	movf	?___lmul,w
  3414  0248  1683               	bsf	3,5	;RP0=1, select bank1
  3415  0249  07E6               	addwf	(??_eepromRead+6)^(0+128),f
  3416  024A  1283               	bcf	3,5	;RP0=0, select bank0
  3417  024B  0834               	movf	?___lmul+1,w
  3418  024C  1803               	skipnc
  3419  024D  0F34               	incfsz	?___lmul+1,w
  3420  024E  2A50               	goto	u5430
  3421  024F  2A52               	goto	u5431
  3422  0250                     u5430:
  3423  0250  1683               	bsf	3,5	;RP0=1, select bank1
  3424  0251  07E7               	addwf	((??_eepromRead+6)^(0+128)+1),f
  3425  0252                     u5431:
  3426  0252  1283               	bcf	3,5	;RP0=0, select bank0
  3427  0253  0835               	movf	?___lmul+2,w
  3428  0254  1803               	skipnc
  3429  0255  0F35               	incfsz	?___lmul+2,w
  3430  0256  2A58               	goto	u5432
  3431  0257  2A5A               	goto	u5433
  3432  0258                     u5432:
  3433  0258  1683               	bsf	3,5	;RP0=1, select bank1
  3434  0259  07E8               	addwf	((??_eepromRead+6)^(0+128)+2),f
  3435  025A                     u5433:
  3436  025A  1283               	bcf	3,5	;RP0=0, select bank0
  3437  025B  0836               	movf	?___lmul+3,w
  3438  025C  1803               	skipnc
  3439  025D  0A36               	incf	?___lmul+3,w
  3440  025E  1683               	bsf	3,5	;RP0=1, select bank1
  3441  025F  07E9               	addwf	((??_eepromRead+6)^(0+128)+3),f
  3442  0260  0866               	movf	(??_eepromRead+6)^(0+128),w
  3443  0261  07E0               	addwf	??_eepromRead^(0+128),f
  3444  0262  0867               	movf	(??_eepromRead+7)^(0+128),w
  3445  0263  1803               	skipnc
  3446  0264  0F67               	incfsz	(??_eepromRead+7)^(0+128),w
  3447  0265  2A67               	goto	u5440
  3448  0266  2A68               	goto	u5441
  3449  0267                     u5440:
  3450  0267  07E1               	addwf	(??_eepromRead^(0+128)+1),f
  3451  0268                     u5441:
  3452  0268  0868               	movf	(??_eepromRead+8)^(0+128),w
  3453  0269  1803               	skipnc
  3454  026A  0F68               	incfsz	(??_eepromRead+8)^(0+128),w
  3455  026B  2A6D               	goto	u5442
  3456  026C  2A6E               	goto	u5443
  3457  026D                     u5442:
  3458  026D  07E2               	addwf	(??_eepromRead^(0+128)+2),f
  3459  026E                     u5443:
  3460  026E  0869               	movf	(??_eepromRead+9)^(0+128),w
  3461  026F  1803               	skipnc
  3462  0270  0A69               	incf	(??_eepromRead+9)^(0+128),w
  3463  0271  07E3               	addwf	(??_eepromRead^(0+128)+3),f
  3464  0272  0863               	movf	(??_eepromRead+3)^(0+128),w
  3465  0273  1283               	bcf	3,5	;RP0=0, select bank0
  3466  0274  00D1               	movwf	_pulse+3	;volatile
  3467  0275  1683               	bsf	3,5	;RP0=1, select bank1
  3468  0276  0862               	movf	(??_eepromRead+2)^(0+128),w
  3469  0277  1283               	bcf	3,5	;RP0=0, select bank0
  3470  0278  00D0               	movwf	_pulse+2	;volatile
  3471  0279  1683               	bsf	3,5	;RP0=1, select bank1
  3472  027A  0861               	movf	(??_eepromRead+1)^(0+128),w
  3473  027B  1283               	bcf	3,5	;RP0=0, select bank0
  3474  027C  00CF               	movwf	_pulse+1	;volatile
  3475  027D  1683               	bsf	3,5	;RP0=1, select bank1
  3476  027E  0860               	movf	??_eepromRead^(0+128),w
  3477  027F  1283               	bcf	3,5	;RP0=0, select bank0
  3478  0280  00CE               	movwf	_pulse	;volatile
  3479                           
  3480                           ;newmain.c: 160:     currentClothLength = (unsigned int)eeprom_read(0x0C)* (10000UL) + (
      +                          unsigned int)eeprom_read(0x0D)*100 + (unsigned int)eeprom_read(0x0E);
  3481  0281  300E               	movlw	14
  3482  0282  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  3483  0287  1683               	bsf	3,5	;RP0=1, select bank1
  3484  0288  1303               	bcf	3,6	;RP1=0, select bank1
  3485  0289  00E0               	movwf	??_eepromRead^(0+128)
  3486  028A  01E1               	clrf	(??_eepromRead^(0+128)+1)
  3487  028B  01E2               	clrf	(??_eepromRead^(0+128)+2)
  3488  028C  01E3               	clrf	(??_eepromRead^(0+128)+3)
  3489  028D  300D               	movlw	13
  3490  028E  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  3491  0293  1683               	bsf	3,5	;RP0=1, select bank1
  3492  0294  1303               	bcf	3,6	;RP1=0, select bank1
  3493  0295  00E4               	movwf	(??_eepromRead+4)^(0+128)
  3494  0296  01E5               	clrf	((??_eepromRead+4)^(0+128)+1)
  3495  0297  0864               	movf	(??_eepromRead+4)^(0+128),w
  3496  0298  1283               	bcf	3,5	;RP0=0, select bank0
  3497  0299  00B3               	movwf	___wmul@multiplier
  3498  029A  1683               	bsf	3,5	;RP0=1, select bank1
  3499  029B  0865               	movf	(??_eepromRead+5)^(0+128),w
  3500  029C  1283               	bcf	3,5	;RP0=0, select bank0
  3501  029D  00B4               	movwf	___wmul@multiplier+1
  3502  029E  3064               	movlw	100
  3503  029F  00B5               	movwf	___wmul@multiplicand
  3504  02A0  3000               	movlw	0
  3505  02A1  00B6               	movwf	___wmul@multiplicand+1
  3506  02A2  160A  158A  2580  120A  118A  	fcall	___wmul
  3507  02A7  0833               	movf	?___wmul,w
  3508  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  3509  02A9  00E6               	movwf	(??_eepromRead+6)^(0+128)
  3510  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  3511  02AB  0834               	movf	?___wmul+1,w
  3512  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  3513  02AD  00E7               	movwf	((??_eepromRead+6)^(0+128)+1)
  3514  02AE  01E8               	clrf	((??_eepromRead+6)^(0+128)+2)
  3515  02AF  01E9               	clrf	((??_eepromRead+6)^(0+128)+3)
  3516  02B0  300C               	movlw	12
  3517  02B1  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  3518  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  3519  02B7  1303               	bcf	3,6	;RP1=0, select bank1
  3520  02B8  00EA               	movwf	(??_eepromRead+10)^(0+128)
  3521  02B9  01EB               	clrf	((??_eepromRead+10)^(0+128)+1)
  3522  02BA  01EC               	clrf	((??_eepromRead+10)^(0+128)+2)
  3523  02BB  01ED               	clrf	((??_eepromRead+10)^(0+128)+3)
  3524  02BC  086D               	movf	(??_eepromRead+13)^(0+128),w
  3525  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  3526  02BE  00B6               	movwf	___lmul@multiplier+3
  3527  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  3528  02C0  086C               	movf	(??_eepromRead+12)^(0+128),w
  3529  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  3530  02C2  00B5               	movwf	___lmul@multiplier+2
  3531  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  3532  02C4  086B               	movf	(??_eepromRead+11)^(0+128),w
  3533  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  3534  02C6  00B4               	movwf	___lmul@multiplier+1
  3535  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  3536  02C8  086A               	movf	(??_eepromRead+10)^(0+128),w
  3537  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  3538  02CA  00B3               	movwf	___lmul@multiplier
  3539  02CB  3000               	movlw	0
  3540  02CC  00BA               	movwf	___lmul@multiplicand+3
  3541  02CD  3000               	movlw	0
  3542  02CE  00B9               	movwf	___lmul@multiplicand+2
  3543  02CF  3027               	movlw	39
  3544  02D0  00B8               	movwf	___lmul@multiplicand+1
  3545  02D1  3010               	movlw	16
  3546  02D2  00B7               	movwf	___lmul@multiplicand
  3547  02D3  160A  158A  2699  120A  118A  	fcall	___lmul
  3548  02D8  0833               	movf	?___lmul,w
  3549  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  3550  02DA  07E6               	addwf	(??_eepromRead+6)^(0+128),f
  3551  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  3552  02DC  0834               	movf	?___lmul+1,w
  3553  02DD  1803               	skipnc
  3554  02DE  0F34               	incfsz	?___lmul+1,w
  3555  02DF  2AE1               	goto	u5450
  3556  02E0  2AE3               	goto	u5451
  3557  02E1                     u5450:
  3558  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  3559  02E2  07E7               	addwf	((??_eepromRead+6)^(0+128)+1),f
  3560  02E3                     u5451:
  3561  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  3562  02E4  0835               	movf	?___lmul+2,w
  3563  02E5  1803               	skipnc
  3564  02E6  0F35               	incfsz	?___lmul+2,w
  3565  02E7  2AE9               	goto	u5452
  3566  02E8  2AEB               	goto	u5453
  3567  02E9                     u5452:
  3568  02E9  1683               	bsf	3,5	;RP0=1, select bank1
  3569  02EA  07E8               	addwf	((??_eepromRead+6)^(0+128)+2),f
  3570  02EB                     u5453:
  3571  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  3572  02EC  0836               	movf	?___lmul+3,w
  3573  02ED  1803               	skipnc
  3574  02EE  0A36               	incf	?___lmul+3,w
  3575  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  3576  02F0  07E9               	addwf	((??_eepromRead+6)^(0+128)+3),f
  3577  02F1  0866               	movf	(??_eepromRead+6)^(0+128),w
  3578  02F2  07E0               	addwf	??_eepromRead^(0+128),f
  3579  02F3  0867               	movf	(??_eepromRead+7)^(0+128),w
  3580  02F4  1803               	skipnc
  3581  02F5  0F67               	incfsz	(??_eepromRead+7)^(0+128),w
  3582  02F6  2AF8               	goto	u5460
  3583  02F7  2AF9               	goto	u5461
  3584  02F8                     u5460:
  3585  02F8  07E1               	addwf	(??_eepromRead^(0+128)+1),f
  3586  02F9                     u5461:
  3587  02F9  0868               	movf	(??_eepromRead+8)^(0+128),w
  3588  02FA  1803               	skipnc
  3589  02FB  0F68               	incfsz	(??_eepromRead+8)^(0+128),w
  3590  02FC  2AFE               	goto	u5462
  3591  02FD  2AFF               	goto	u5463
  3592  02FE                     u5462:
  3593  02FE  07E2               	addwf	(??_eepromRead^(0+128)+2),f
  3594  02FF                     u5463:
  3595  02FF  0869               	movf	(??_eepromRead+9)^(0+128),w
  3596  0300  1803               	skipnc
  3597  0301  0A69               	incf	(??_eepromRead+9)^(0+128),w
  3598  0302  07E3               	addwf	(??_eepromRead^(0+128)+3),f
  3599  0303  0863               	movf	(??_eepromRead+3)^(0+128),w
  3600  0304  1283               	bcf	3,5	;RP0=0, select bank0
  3601  0305  00D5               	movwf	_currentClothLength+3	;volatile
  3602  0306  1683               	bsf	3,5	;RP0=1, select bank1
  3603  0307  0862               	movf	(??_eepromRead+2)^(0+128),w
  3604  0308  1283               	bcf	3,5	;RP0=0, select bank0
  3605  0309  00D4               	movwf	_currentClothLength+2	;volatile
  3606  030A  1683               	bsf	3,5	;RP0=1, select bank1
  3607  030B  0861               	movf	(??_eepromRead+1)^(0+128),w
  3608  030C  1283               	bcf	3,5	;RP0=0, select bank0
  3609  030D  00D3               	movwf	_currentClothLength+1	;volatile
  3610  030E  1683               	bsf	3,5	;RP0=1, select bank1
  3611  030F  0860               	movf	??_eepromRead^(0+128),w
  3612  0310  1283               	bcf	3,5	;RP0=0, select bank0
  3613  0311  00D2               	movwf	_currentClothLength	;volatile
  3614                           
  3615                           ;newmain.c: 161:     previousCurrentClothLength = (unsigned int)eeprom_read(0x11)* (1000
      +                          0UL) + (unsigned int)eeprom_read(0x12)*100 + (unsigned int)eeprom_read(0x13);
  3616  0312  3013               	movlw	19
  3617  0313  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  3618  0318  1683               	bsf	3,5	;RP0=1, select bank1
  3619  0319  1303               	bcf	3,6	;RP1=0, select bank1
  3620  031A  00E0               	movwf	??_eepromRead^(0+128)
  3621  031B  01E1               	clrf	(??_eepromRead^(0+128)+1)
  3622  031C  01E2               	clrf	(??_eepromRead^(0+128)+2)
  3623  031D  01E3               	clrf	(??_eepromRead^(0+128)+3)
  3624  031E  3012               	movlw	18
  3625  031F  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  3626  0324  1683               	bsf	3,5	;RP0=1, select bank1
  3627  0325  1303               	bcf	3,6	;RP1=0, select bank1
  3628  0326  00E4               	movwf	(??_eepromRead+4)^(0+128)
  3629  0327  01E5               	clrf	((??_eepromRead+4)^(0+128)+1)
  3630  0328  0864               	movf	(??_eepromRead+4)^(0+128),w
  3631  0329  1283               	bcf	3,5	;RP0=0, select bank0
  3632  032A  00B3               	movwf	___wmul@multiplier
  3633  032B  1683               	bsf	3,5	;RP0=1, select bank1
  3634  032C  0865               	movf	(??_eepromRead+5)^(0+128),w
  3635  032D  1283               	bcf	3,5	;RP0=0, select bank0
  3636  032E  00B4               	movwf	___wmul@multiplier+1
  3637  032F  3064               	movlw	100
  3638  0330  00B5               	movwf	___wmul@multiplicand
  3639  0331  3000               	movlw	0
  3640  0332  00B6               	movwf	___wmul@multiplicand+1
  3641  0333  160A  158A  2580  120A  118A  	fcall	___wmul
  3642  0338  0833               	movf	?___wmul,w
  3643  0339  1683               	bsf	3,5	;RP0=1, select bank1
  3644  033A  00E6               	movwf	(??_eepromRead+6)^(0+128)
  3645  033B  1283               	bcf	3,5	;RP0=0, select bank0
  3646  033C  0834               	movf	?___wmul+1,w
  3647  033D  1683               	bsf	3,5	;RP0=1, select bank1
  3648  033E  00E7               	movwf	((??_eepromRead+6)^(0+128)+1)
  3649  033F  01E8               	clrf	((??_eepromRead+6)^(0+128)+2)
  3650  0340  01E9               	clrf	((??_eepromRead+6)^(0+128)+3)
  3651  0341  3011               	movlw	17
  3652  0342  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  3653  0347  1683               	bsf	3,5	;RP0=1, select bank1
  3654  0348  1303               	bcf	3,6	;RP1=0, select bank1
  3655  0349  00EA               	movwf	(??_eepromRead+10)^(0+128)
  3656  034A  01EB               	clrf	((??_eepromRead+10)^(0+128)+1)
  3657  034B  01EC               	clrf	((??_eepromRead+10)^(0+128)+2)
  3658  034C  01ED               	clrf	((??_eepromRead+10)^(0+128)+3)
  3659  034D  086D               	movf	(??_eepromRead+13)^(0+128),w
  3660  034E  1283               	bcf	3,5	;RP0=0, select bank0
  3661  034F  00B6               	movwf	___lmul@multiplier+3
  3662  0350  1683               	bsf	3,5	;RP0=1, select bank1
  3663  0351  086C               	movf	(??_eepromRead+12)^(0+128),w
  3664  0352  1283               	bcf	3,5	;RP0=0, select bank0
  3665  0353  00B5               	movwf	___lmul@multiplier+2
  3666  0354  1683               	bsf	3,5	;RP0=1, select bank1
  3667  0355  086B               	movf	(??_eepromRead+11)^(0+128),w
  3668  0356  1283               	bcf	3,5	;RP0=0, select bank0
  3669  0357  00B4               	movwf	___lmul@multiplier+1
  3670  0358  1683               	bsf	3,5	;RP0=1, select bank1
  3671  0359  086A               	movf	(??_eepromRead+10)^(0+128),w
  3672  035A  1283               	bcf	3,5	;RP0=0, select bank0
  3673  035B  00B3               	movwf	___lmul@multiplier
  3674  035C  3000               	movlw	0
  3675  035D  00BA               	movwf	___lmul@multiplicand+3
  3676  035E  3000               	movlw	0
  3677  035F  00B9               	movwf	___lmul@multiplicand+2
  3678  0360  3027               	movlw	39
  3679  0361  00B8               	movwf	___lmul@multiplicand+1
  3680  0362  3010               	movlw	16
  3681  0363  00B7               	movwf	___lmul@multiplicand
  3682  0364  160A  158A  2699  120A  118A  	fcall	___lmul
  3683  0369  0833               	movf	?___lmul,w
  3684  036A  1683               	bsf	3,5	;RP0=1, select bank1
  3685  036B  07E6               	addwf	(??_eepromRead+6)^(0+128),f
  3686  036C  1283               	bcf	3,5	;RP0=0, select bank0
  3687  036D  0834               	movf	?___lmul+1,w
  3688  036E  1803               	skipnc
  3689  036F  0F34               	incfsz	?___lmul+1,w
  3690  0370  2B72               	goto	u5470
  3691  0371  2B74               	goto	u5471
  3692  0372                     u5470:
  3693  0372  1683               	bsf	3,5	;RP0=1, select bank1
  3694  0373  07E7               	addwf	((??_eepromRead+6)^(0+128)+1),f
  3695  0374                     u5471:
  3696  0374  1283               	bcf	3,5	;RP0=0, select bank0
  3697  0375  0835               	movf	?___lmul+2,w
  3698  0376  1803               	skipnc
  3699  0377  0F35               	incfsz	?___lmul+2,w
  3700  0378  2B7A               	goto	u5472
  3701  0379  2B7C               	goto	u5473
  3702  037A                     u5472:
  3703  037A  1683               	bsf	3,5	;RP0=1, select bank1
  3704  037B  07E8               	addwf	((??_eepromRead+6)^(0+128)+2),f
  3705  037C                     u5473:
  3706  037C  1283               	bcf	3,5	;RP0=0, select bank0
  3707  037D  0836               	movf	?___lmul+3,w
  3708  037E  1803               	skipnc
  3709  037F  0A36               	incf	?___lmul+3,w
  3710  0380  1683               	bsf	3,5	;RP0=1, select bank1
  3711  0381  07E9               	addwf	((??_eepromRead+6)^(0+128)+3),f
  3712  0382  0866               	movf	(??_eepromRead+6)^(0+128),w
  3713  0383  07E0               	addwf	??_eepromRead^(0+128),f
  3714  0384  0867               	movf	(??_eepromRead+7)^(0+128),w
  3715  0385  1803               	skipnc
  3716  0386  0F67               	incfsz	(??_eepromRead+7)^(0+128),w
  3717  0387  2B89               	goto	u5480
  3718  0388  2B8A               	goto	u5481
  3719  0389                     u5480:
  3720  0389  07E1               	addwf	(??_eepromRead^(0+128)+1),f
  3721  038A                     u5481:
  3722  038A  0868               	movf	(??_eepromRead+8)^(0+128),w
  3723  038B  1803               	skipnc
  3724  038C  0F68               	incfsz	(??_eepromRead+8)^(0+128),w
  3725  038D  2B8F               	goto	u5482
  3726  038E  2B90               	goto	u5483
  3727  038F                     u5482:
  3728  038F  07E2               	addwf	(??_eepromRead^(0+128)+2),f
  3729  0390                     u5483:
  3730  0390  0869               	movf	(??_eepromRead+9)^(0+128),w
  3731  0391  1803               	skipnc
  3732  0392  0A69               	incf	(??_eepromRead+9)^(0+128),w
  3733  0393  07E3               	addwf	(??_eepromRead^(0+128)+3),f
  3734  0394  0863               	movf	(??_eepromRead+3)^(0+128),w
  3735  0395  00DB               	movwf	(_previousCurrentClothLength+3)^(0+128)	;volatile
  3736  0396  0862               	movf	(??_eepromRead+2)^(0+128),w
  3737  0397  00DA               	movwf	(_previousCurrentClothLength+2)^(0+128)	;volatile
  3738  0398  0861               	movf	(??_eepromRead+1)^(0+128),w
  3739  0399  00D9               	movwf	(_previousCurrentClothLength+1)^(0+128)	;volatile
  3740  039A  0860               	movf	??_eepromRead^(0+128),w
  3741  039B  00D8               	movwf	_previousCurrentClothLength^(0+128)	;volatile
  3742                           
  3743                           ;newmain.c: 163:     resetCounter = (unsigned int)eeprom_read(0x14)* (10000UL) + (unsign
      +                          ed int)eeprom_read(0x15)*100 + (unsigned int)eeprom_read(0x16);
  3744  039C  3016               	movlw	22
  3745  039D  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  3746  03A2  1683               	bsf	3,5	;RP0=1, select bank1
  3747  03A3  1303               	bcf	3,6	;RP1=0, select bank1
  3748  03A4  00E0               	movwf	??_eepromRead^(0+128)
  3749  03A5  01E1               	clrf	(??_eepromRead^(0+128)+1)
  3750  03A6  01E2               	clrf	(??_eepromRead^(0+128)+2)
  3751  03A7  01E3               	clrf	(??_eepromRead^(0+128)+3)
  3752  03A8  3015               	movlw	21
  3753  03A9  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  3754  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  3755  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  3756  03B0  00E4               	movwf	(??_eepromRead+4)^(0+128)
  3757  03B1  01E5               	clrf	((??_eepromRead+4)^(0+128)+1)
  3758  03B2  0864               	movf	(??_eepromRead+4)^(0+128),w
  3759  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  3760  03B4  00B3               	movwf	___wmul@multiplier
  3761  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  3762  03B6  0865               	movf	(??_eepromRead+5)^(0+128),w
  3763  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  3764  03B8  00B4               	movwf	___wmul@multiplier+1
  3765  03B9  3064               	movlw	100
  3766  03BA  00B5               	movwf	___wmul@multiplicand
  3767  03BB  3000               	movlw	0
  3768  03BC  00B6               	movwf	___wmul@multiplicand+1
  3769  03BD  160A  158A  2580  120A  118A  	fcall	___wmul
  3770  03C2  0833               	movf	?___wmul,w
  3771  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  3772  03C4  00E6               	movwf	(??_eepromRead+6)^(0+128)
  3773  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  3774  03C6  0834               	movf	?___wmul+1,w
  3775  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  3776  03C8  00E7               	movwf	((??_eepromRead+6)^(0+128)+1)
  3777  03C9  01E8               	clrf	((??_eepromRead+6)^(0+128)+2)
  3778  03CA  01E9               	clrf	((??_eepromRead+6)^(0+128)+3)
  3779  03CB  3014               	movlw	20
  3780  03CC  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  3781  03D1  1683               	bsf	3,5	;RP0=1, select bank1
  3782  03D2  1303               	bcf	3,6	;RP1=0, select bank1
  3783  03D3  00EA               	movwf	(??_eepromRead+10)^(0+128)
  3784  03D4  01EB               	clrf	((??_eepromRead+10)^(0+128)+1)
  3785  03D5  01EC               	clrf	((??_eepromRead+10)^(0+128)+2)
  3786  03D6  01ED               	clrf	((??_eepromRead+10)^(0+128)+3)
  3787  03D7  086D               	movf	(??_eepromRead+13)^(0+128),w
  3788  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  3789  03D9  00B6               	movwf	___lmul@multiplier+3
  3790  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  3791  03DB  086C               	movf	(??_eepromRead+12)^(0+128),w
  3792  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  3793  03DD  00B5               	movwf	___lmul@multiplier+2
  3794  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  3795  03DF  086B               	movf	(??_eepromRead+11)^(0+128),w
  3796  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  3797  03E1  00B4               	movwf	___lmul@multiplier+1
  3798  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  3799  03E3  086A               	movf	(??_eepromRead+10)^(0+128),w
  3800  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  3801  03E5  00B3               	movwf	___lmul@multiplier
  3802  03E6  3000               	movlw	0
  3803  03E7  00BA               	movwf	___lmul@multiplicand+3
  3804  03E8  3000               	movlw	0
  3805  03E9  00B9               	movwf	___lmul@multiplicand+2
  3806  03EA  3027               	movlw	39
  3807  03EB  00B8               	movwf	___lmul@multiplicand+1
  3808  03EC  3010               	movlw	16
  3809  03ED  00B7               	movwf	___lmul@multiplicand
  3810  03EE  160A  158A  2699  120A  118A  	fcall	___lmul
  3811  03F3  0833               	movf	?___lmul,w
  3812  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  3813  03F5  07E6               	addwf	(??_eepromRead+6)^(0+128),f
  3814  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  3815  03F7  0834               	movf	?___lmul+1,w
  3816  03F8  1803               	skipnc
  3817  03F9  0F34               	incfsz	?___lmul+1,w
  3818  03FA  2BFC               	goto	u5490
  3819  03FB  2BFE               	goto	u5491
  3820  03FC                     u5490:
  3821  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  3822  03FD  07E7               	addwf	((??_eepromRead+6)^(0+128)+1),f
  3823  03FE                     u5491:
  3824  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  3825  03FF  0835               	movf	?___lmul+2,w
  3826  0400  1803               	skipnc
  3827  0401  0F35               	incfsz	?___lmul+2,w
  3828  0402  2C04               	goto	u5492
  3829  0403  2C06               	goto	u5493
  3830  0404                     u5492:
  3831  0404  1683               	bsf	3,5	;RP0=1, select bank1
  3832  0405  07E8               	addwf	((??_eepromRead+6)^(0+128)+2),f
  3833  0406                     u5493:
  3834  0406  1283               	bcf	3,5	;RP0=0, select bank0
  3835  0407  0836               	movf	?___lmul+3,w
  3836  0408  1803               	skipnc
  3837  0409  0A36               	incf	?___lmul+3,w
  3838  040A  1683               	bsf	3,5	;RP0=1, select bank1
  3839  040B  07E9               	addwf	((??_eepromRead+6)^(0+128)+3),f
  3840  040C  0866               	movf	(??_eepromRead+6)^(0+128),w
  3841  040D  07E0               	addwf	??_eepromRead^(0+128),f
  3842  040E  0867               	movf	(??_eepromRead+7)^(0+128),w
  3843  040F  1803               	skipnc
  3844  0410  0F67               	incfsz	(??_eepromRead+7)^(0+128),w
  3845  0411  2C13               	goto	u5500
  3846  0412  2C14               	goto	u5501
  3847  0413                     u5500:
  3848  0413  07E1               	addwf	(??_eepromRead^(0+128)+1),f
  3849  0414                     u5501:
  3850  0414  0868               	movf	(??_eepromRead+8)^(0+128),w
  3851  0415  1803               	skipnc
  3852  0416  0F68               	incfsz	(??_eepromRead+8)^(0+128),w
  3853  0417  2C19               	goto	u5502
  3854  0418  2C1A               	goto	u5503
  3855  0419                     u5502:
  3856  0419  07E2               	addwf	(??_eepromRead^(0+128)+2),f
  3857  041A                     u5503:
  3858  041A  0869               	movf	(??_eepromRead+9)^(0+128),w
  3859  041B  1803               	skipnc
  3860  041C  0A69               	incf	(??_eepromRead+9)^(0+128),w
  3861  041D  07E3               	addwf	(??_eepromRead^(0+128)+3),f
  3862  041E  0863               	movf	(??_eepromRead+3)^(0+128),w
  3863  041F  00D7               	movwf	(_resetCounter+3)^(0+128)	;volatile
  3864  0420  0862               	movf	(??_eepromRead+2)^(0+128),w
  3865  0421  00D6               	movwf	(_resetCounter+2)^(0+128)	;volatile
  3866  0422  0861               	movf	(??_eepromRead+1)^(0+128),w
  3867  0423  00D5               	movwf	(_resetCounter+1)^(0+128)	;volatile
  3868  0424  0860               	movf	??_eepromRead^(0+128),w
  3869  0425  00D4               	movwf	_resetCounter^(0+128)	;volatile
  3870                           
  3871                           ;newmain.c: 164:     hourMeter = (unsigned int)eeprom_read(0x17)* (10000UL) + (unsigned 
      +                          int)eeprom_read(0x18)*100 + (unsigned int)eeprom_read(0x19);
  3872  0426  3019               	movlw	25
  3873  0427  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  3874  042C  1683               	bsf	3,5	;RP0=1, select bank1
  3875  042D  1303               	bcf	3,6	;RP1=0, select bank1
  3876  042E  00E0               	movwf	??_eepromRead^(0+128)
  3877  042F  01E1               	clrf	(??_eepromRead^(0+128)+1)
  3878  0430  01E2               	clrf	(??_eepromRead^(0+128)+2)
  3879  0431  01E3               	clrf	(??_eepromRead^(0+128)+3)
  3880  0432  3018               	movlw	24
  3881  0433  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  3882  0438  1683               	bsf	3,5	;RP0=1, select bank1
  3883  0439  1303               	bcf	3,6	;RP1=0, select bank1
  3884  043A  00E4               	movwf	(??_eepromRead+4)^(0+128)
  3885  043B  01E5               	clrf	((??_eepromRead+4)^(0+128)+1)
  3886  043C  0864               	movf	(??_eepromRead+4)^(0+128),w
  3887  043D  1283               	bcf	3,5	;RP0=0, select bank0
  3888  043E  00B3               	movwf	___wmul@multiplier
  3889  043F  1683               	bsf	3,5	;RP0=1, select bank1
  3890  0440  0865               	movf	(??_eepromRead+5)^(0+128),w
  3891  0441  1283               	bcf	3,5	;RP0=0, select bank0
  3892  0442  00B4               	movwf	___wmul@multiplier+1
  3893  0443  3064               	movlw	100
  3894  0444  00B5               	movwf	___wmul@multiplicand
  3895  0445  3000               	movlw	0
  3896  0446  00B6               	movwf	___wmul@multiplicand+1
  3897  0447  160A  158A  2580  120A  118A  	fcall	___wmul
  3898  044C  0833               	movf	?___wmul,w
  3899  044D  1683               	bsf	3,5	;RP0=1, select bank1
  3900  044E  00E6               	movwf	(??_eepromRead+6)^(0+128)
  3901  044F  1283               	bcf	3,5	;RP0=0, select bank0
  3902  0450  0834               	movf	?___wmul+1,w
  3903  0451  1683               	bsf	3,5	;RP0=1, select bank1
  3904  0452  00E7               	movwf	((??_eepromRead+6)^(0+128)+1)
  3905  0453  01E8               	clrf	((??_eepromRead+6)^(0+128)+2)
  3906  0454  01E9               	clrf	((??_eepromRead+6)^(0+128)+3)
  3907  0455  3017               	movlw	23
  3908  0456  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  3909  045B  1683               	bsf	3,5	;RP0=1, select bank1
  3910  045C  1303               	bcf	3,6	;RP1=0, select bank1
  3911  045D  00EA               	movwf	(??_eepromRead+10)^(0+128)
  3912  045E  01EB               	clrf	((??_eepromRead+10)^(0+128)+1)
  3913  045F  01EC               	clrf	((??_eepromRead+10)^(0+128)+2)
  3914  0460  01ED               	clrf	((??_eepromRead+10)^(0+128)+3)
  3915  0461  086D               	movf	(??_eepromRead+13)^(0+128),w
  3916  0462  1283               	bcf	3,5	;RP0=0, select bank0
  3917  0463  00B6               	movwf	___lmul@multiplier+3
  3918  0464  1683               	bsf	3,5	;RP0=1, select bank1
  3919  0465  086C               	movf	(??_eepromRead+12)^(0+128),w
  3920  0466  1283               	bcf	3,5	;RP0=0, select bank0
  3921  0467  00B5               	movwf	___lmul@multiplier+2
  3922  0468  1683               	bsf	3,5	;RP0=1, select bank1
  3923  0469  086B               	movf	(??_eepromRead+11)^(0+128),w
  3924  046A  1283               	bcf	3,5	;RP0=0, select bank0
  3925  046B  00B4               	movwf	___lmul@multiplier+1
  3926  046C  1683               	bsf	3,5	;RP0=1, select bank1
  3927  046D  086A               	movf	(??_eepromRead+10)^(0+128),w
  3928  046E  1283               	bcf	3,5	;RP0=0, select bank0
  3929  046F  00B3               	movwf	___lmul@multiplier
  3930  0470  3000               	movlw	0
  3931  0471  00BA               	movwf	___lmul@multiplicand+3
  3932  0472  3000               	movlw	0
  3933  0473  00B9               	movwf	___lmul@multiplicand+2
  3934  0474  3027               	movlw	39
  3935  0475  00B8               	movwf	___lmul@multiplicand+1
  3936  0476  3010               	movlw	16
  3937  0477  00B7               	movwf	___lmul@multiplicand
  3938  0478  160A  158A  2699  120A  118A  	fcall	___lmul
  3939  047D  0833               	movf	?___lmul,w
  3940  047E  1683               	bsf	3,5	;RP0=1, select bank1
  3941  047F  07E6               	addwf	(??_eepromRead+6)^(0+128),f
  3942  0480  1283               	bcf	3,5	;RP0=0, select bank0
  3943  0481  0834               	movf	?___lmul+1,w
  3944  0482  1803               	skipnc
  3945  0483  0F34               	incfsz	?___lmul+1,w
  3946  0484  2C86               	goto	u5510
  3947  0485  2C88               	goto	u5511
  3948  0486                     u5510:
  3949  0486  1683               	bsf	3,5	;RP0=1, select bank1
  3950  0487  07E7               	addwf	((??_eepromRead+6)^(0+128)+1),f
  3951  0488                     u5511:
  3952  0488  1283               	bcf	3,5	;RP0=0, select bank0
  3953  0489  0835               	movf	?___lmul+2,w
  3954  048A  1803               	skipnc
  3955  048B  0F35               	incfsz	?___lmul+2,w
  3956  048C  2C8E               	goto	u5512
  3957  048D  2C90               	goto	u5513
  3958  048E                     u5512:
  3959  048E  1683               	bsf	3,5	;RP0=1, select bank1
  3960  048F  07E8               	addwf	((??_eepromRead+6)^(0+128)+2),f
  3961  0490                     u5513:
  3962  0490  1283               	bcf	3,5	;RP0=0, select bank0
  3963  0491  0836               	movf	?___lmul+3,w
  3964  0492  1803               	skipnc
  3965  0493  0A36               	incf	?___lmul+3,w
  3966  0494  1683               	bsf	3,5	;RP0=1, select bank1
  3967  0495  07E9               	addwf	((??_eepromRead+6)^(0+128)+3),f
  3968  0496  0866               	movf	(??_eepromRead+6)^(0+128),w
  3969  0497  07E0               	addwf	??_eepromRead^(0+128),f
  3970  0498  0867               	movf	(??_eepromRead+7)^(0+128),w
  3971  0499  1803               	skipnc
  3972  049A  0F67               	incfsz	(??_eepromRead+7)^(0+128),w
  3973  049B  2C9D               	goto	u5520
  3974  049C  2C9E               	goto	u5521
  3975  049D                     u5520:
  3976  049D  07E1               	addwf	(??_eepromRead^(0+128)+1),f
  3977  049E                     u5521:
  3978  049E  0868               	movf	(??_eepromRead+8)^(0+128),w
  3979  049F  1803               	skipnc
  3980  04A0  0F68               	incfsz	(??_eepromRead+8)^(0+128),w
  3981  04A1  2CA3               	goto	u5522
  3982  04A2  2CA4               	goto	u5523
  3983  04A3                     u5522:
  3984  04A3  07E2               	addwf	(??_eepromRead^(0+128)+2),f
  3985  04A4                     u5523:
  3986  04A4  0869               	movf	(??_eepromRead+9)^(0+128),w
  3987  04A5  1803               	skipnc
  3988  04A6  0A69               	incf	(??_eepromRead+9)^(0+128),w
  3989  04A7  07E3               	addwf	(??_eepromRead^(0+128)+3),f
  3990  04A8  0863               	movf	(??_eepromRead+3)^(0+128),w
  3991  04A9  00D3               	movwf	(_hourMeter+3)^(0+128)	;volatile
  3992  04AA  0862               	movf	(??_eepromRead+2)^(0+128),w
  3993  04AB  00D2               	movwf	(_hourMeter+2)^(0+128)	;volatile
  3994  04AC  0861               	movf	(??_eepromRead+1)^(0+128),w
  3995  04AD  00D1               	movwf	(_hourMeter+1)^(0+128)	;volatile
  3996  04AE  0860               	movf	??_eepromRead^(0+128),w
  3997  04AF  00D0               	movwf	_hourMeter^(0+128)	;volatile
  3998                           
  3999                           ;newmain.c: 166:     currentClothLengthBalancePlus = (unsigned char)eeprom_read(0x10);
  4000  04B0  3010               	movlw	16
  4001  04B1  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  4002  04B6  1683               	bsf	3,5	;RP0=1, select bank1
  4003  04B7  1303               	bcf	3,6	;RP1=0, select bank1
  4004  04B8  00E0               	movwf	??_eepromRead^(0+128)
  4005  04B9  01E1               	clrf	(??_eepromRead^(0+128)+1)
  4006  04BA  0860               	movf	??_eepromRead^(0+128),w
  4007  04BB  00DE               	movwf	_currentClothLengthBalancePlus^(0+128)	;volatile
  4008  04BC  0861               	movf	(??_eepromRead+1)^(0+128),w
  4009  04BD  00DF               	movwf	(_currentClothLengthBalancePlus+1)^(0+128)	;volatile
  4010                           
  4011                           ;newmain.c: 167:     currentClothLengthBalanceMinus = (unsigned char)eeprom_read(0x0F);
  4012  04BE  300F               	movlw	15
  4013  04BF  160A  158A  2566  120A  118A  	fcall	_eeprom_read
  4014  04C4  1683               	bsf	3,5	;RP0=1, select bank1
  4015  04C5  1303               	bcf	3,6	;RP1=0, select bank1
  4016  04C6  00E0               	movwf	??_eepromRead^(0+128)
  4017  04C7  01E1               	clrf	(??_eepromRead^(0+128)+1)
  4018  04C8  0860               	movf	??_eepromRead^(0+128),w
  4019  04C9  00DC               	movwf	_currentClothLengthBalanceMinus^(0+128)	;volatile
  4020  04CA  0861               	movf	(??_eepromRead+1)^(0+128),w
  4021  04CB  00DD               	movwf	(_currentClothLengthBalanceMinus+1)^(0+128)	;volatile
  4022                           
  4023                           ;newmain.c: 169:     if(currentClothLength > (9999UL)){
  4024  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  4025  04CD  0855               	movf	_currentClothLength+3,w	;volatile
  4026  04CE  1D03               	btfss	3,2
  4027  04CF  2CDD               	goto	l3690
  4028  04D0  0854               	movf	_currentClothLength+2,w	;volatile
  4029  04D1  1D03               	btfss	3,2
  4030  04D2  2CDD               	goto	l3690
  4031  04D3  3027               	movlw	39
  4032  04D4  0253               	subwf	_currentClothLength+1,w	;volatile
  4033  04D5  1D03               	skipz
  4034  04D6  2CDB               	goto	u5533
  4035  04D7  3010               	movlw	16
  4036  04D8  0252               	subwf	_currentClothLength,w	;volatile
  4037  04D9  1D03               	skipz
  4038  04DA  2CDB               	goto	u5533
  4039  04DB                     u5533:
  4040  04DB  1C03               	btfss	3,0
  4041  04DC  2CE7               	goto	l3692
  4042  04DD                     l3690:
  4043                           
  4044                           ;newmain.c: 170:         currentClothLength = 100;
  4045  04DD  3000               	movlw	0
  4046  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  4047  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  4048  04E0  00D5               	movwf	_currentClothLength+3	;volatile
  4049  04E1  3000               	movlw	0
  4050  04E2  00D4               	movwf	_currentClothLength+2	;volatile
  4051  04E3  3000               	movlw	0
  4052  04E4  00D3               	movwf	_currentClothLength+1	;volatile
  4053  04E5  3064               	movlw	100
  4054  04E6  00D2               	movwf	_currentClothLength	;volatile
  4055  04E7                     l3692:
  4056                           
  4057                           ;newmain.c: 172:     if(previousCurrentClothLength > (9999UL)){
  4058  04E7  1683               	bsf	3,5	;RP0=1, select bank1
  4059  04E8  1303               	bcf	3,6	;RP1=0, select bank1
  4060  04E9  085B               	movf	(_previousCurrentClothLength+3)^(0+128),w	;volatile
  4061  04EA  1D03               	btfss	3,2
  4062  04EB  2CF9               	goto	l3694
  4063  04EC  085A               	movf	(_previousCurrentClothLength+2)^(0+128),w	;volatile
  4064  04ED  1D03               	btfss	3,2
  4065  04EE  2CF9               	goto	l3694
  4066  04EF  3027               	movlw	39
  4067  04F0  0259               	subwf	(_previousCurrentClothLength+1)^(0+128),w	;volatile
  4068  04F1  1D03               	skipz
  4069  04F2  2CF7               	goto	u5543
  4070  04F3  3010               	movlw	16
  4071  04F4  0258               	subwf	_previousCurrentClothLength^(0+128),w	;volatile
  4072  04F5  1D03               	skipz
  4073  04F6  2CF7               	goto	u5543
  4074  04F7                     u5543:
  4075  04F7  1C03               	btfss	3,0
  4076  04F8  2D03               	goto	l3696
  4077  04F9                     l3694:
  4078                           
  4079                           ;newmain.c: 173:         previousCurrentClothLength = 100;
  4080  04F9  3000               	movlw	0
  4081  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  4082  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  4083  04FC  00DB               	movwf	(_previousCurrentClothLength+3)^(0+128)	;volatile
  4084  04FD  3000               	movlw	0
  4085  04FE  00DA               	movwf	(_previousCurrentClothLength+2)^(0+128)	;volatile
  4086  04FF  3000               	movlw	0
  4087  0500  00D9               	movwf	(_previousCurrentClothLength+1)^(0+128)	;volatile
  4088  0501  3064               	movlw	100
  4089  0502  00D8               	movwf	_previousCurrentClothLength^(0+128)	;volatile
  4090  0503                     l3696:
  4091                           
  4092                           ;newmain.c: 175:     if(actualClothLength > (9999UL)){
  4093  0503  1683               	bsf	3,5	;RP0=1, select bank1
  4094  0504  1303               	bcf	3,6	;RP1=0, select bank1
  4095  0505  084F               	movf	(_actualClothLength+3)^(0+128),w	;volatile
  4096  0506  1D03               	btfss	3,2
  4097  0507  2D15               	goto	l3698
  4098  0508  084E               	movf	(_actualClothLength+2)^(0+128),w	;volatile
  4099  0509  1D03               	btfss	3,2
  4100  050A  2D15               	goto	l3698
  4101  050B  3027               	movlw	39
  4102  050C  024D               	subwf	(_actualClothLength+1)^(0+128),w	;volatile
  4103  050D  1D03               	skipz
  4104  050E  2D13               	goto	u5553
  4105  050F  3010               	movlw	16
  4106  0510  024C               	subwf	_actualClothLength^(0+128),w	;volatile
  4107  0511  1D03               	skipz
  4108  0512  2D13               	goto	u5553
  4109  0513                     u5553:
  4110  0513  1C03               	btfss	3,0
  4111  0514  2D1F               	goto	l3700
  4112  0515                     l3698:
  4113                           
  4114                           ;newmain.c: 176:         actualClothLength = 999;
  4115  0515  3000               	movlw	0
  4116  0516  1683               	bsf	3,5	;RP0=1, select bank1
  4117  0517  1303               	bcf	3,6	;RP1=0, select bank1
  4118  0518  00CF               	movwf	(_actualClothLength+3)^(0+128)	;volatile
  4119  0519  3000               	movlw	0
  4120  051A  00CE               	movwf	(_actualClothLength+2)^(0+128)	;volatile
  4121  051B  3003               	movlw	3
  4122  051C  00CD               	movwf	(_actualClothLength+1)^(0+128)	;volatile
  4123  051D  30E7               	movlw	231
  4124  051E  00CC               	movwf	_actualClothLength^(0+128)	;volatile
  4125  051F                     l3700:
  4126                           
  4127                           ;newmain.c: 178:     if(warningClothLength > (9999UL)){
  4128  051F  1683               	bsf	3,5	;RP0=1, select bank1
  4129  0520  1303               	bcf	3,6	;RP1=0, select bank1
  4130  0521  084B               	movf	(_warningClothLength+3)^(0+128),w	;volatile
  4131  0522  1D03               	btfss	3,2
  4132  0523  2D31               	goto	l3702
  4133  0524  084A               	movf	(_warningClothLength+2)^(0+128),w	;volatile
  4134  0525  1D03               	btfss	3,2
  4135  0526  2D31               	goto	l3702
  4136  0527  3027               	movlw	39
  4137  0528  0249               	subwf	(_warningClothLength+1)^(0+128),w	;volatile
  4138  0529  1D03               	skipz
  4139  052A  2D2F               	goto	u5563
  4140  052B  3010               	movlw	16
  4141  052C  0248               	subwf	_warningClothLength^(0+128),w	;volatile
  4142  052D  1D03               	skipz
  4143  052E  2D2F               	goto	u5563
  4144  052F                     u5563:
  4145  052F  1C03               	btfss	3,0
  4146  0530  2D3B               	goto	l3704
  4147  0531                     l3702:
  4148                           
  4149                           ;newmain.c: 179:         warningClothLength = 989;
  4150  0531  3000               	movlw	0
  4151  0532  1683               	bsf	3,5	;RP0=1, select bank1
  4152  0533  1303               	bcf	3,6	;RP1=0, select bank1
  4153  0534  00CB               	movwf	(_warningClothLength+3)^(0+128)	;volatile
  4154  0535  3000               	movlw	0
  4155  0536  00CA               	movwf	(_warningClothLength+2)^(0+128)	;volatile
  4156  0537  3003               	movlw	3
  4157  0538  00C9               	movwf	(_warningClothLength+1)^(0+128)	;volatile
  4158  0539  30DD               	movlw	221
  4159  053A  00C8               	movwf	_warningClothLength^(0+128)	;volatile
  4160  053B                     l3704:
  4161                           
  4162                           ;newmain.c: 181:     if(resetCounter > (99999UL)){
  4163  053B  1683               	bsf	3,5	;RP0=1, select bank1
  4164  053C  1303               	bcf	3,6	;RP1=0, select bank1
  4165  053D  0857               	movf	(_resetCounter+3)^(0+128),w	;volatile
  4166  053E  1D03               	btfss	3,2
  4167  053F  2D4E               	goto	l3706
  4168  0540  3001               	movlw	1
  4169  0541  0256               	subwf	(_resetCounter+2)^(0+128),w	;volatile
  4170  0542  1D03               	skipz
  4171  0543  2D4C               	goto	u5573
  4172  0544  3086               	movlw	134
  4173  0545  0255               	subwf	(_resetCounter+1)^(0+128),w	;volatile
  4174  0546  1D03               	skipz
  4175  0547  2D4C               	goto	u5573
  4176  0548  30A0               	movlw	160
  4177  0549  0254               	subwf	_resetCounter^(0+128),w	;volatile
  4178  054A  1D03               	skipz
  4179  054B  2D4C               	goto	u5573
  4180  054C                     u5573:
  4181  054C  1C03               	btfss	3,0
  4182  054D  2D58               	goto	l3708
  4183  054E                     l3706:
  4184                           
  4185                           ;newmain.c: 182:         resetCounter = 100;
  4186  054E  3000               	movlw	0
  4187  054F  1683               	bsf	3,5	;RP0=1, select bank1
  4188  0550  1303               	bcf	3,6	;RP1=0, select bank1
  4189  0551  00D7               	movwf	(_resetCounter+3)^(0+128)	;volatile
  4190  0552  3000               	movlw	0
  4191  0553  00D6               	movwf	(_resetCounter+2)^(0+128)	;volatile
  4192  0554  3000               	movlw	0
  4193  0555  00D5               	movwf	(_resetCounter+1)^(0+128)	;volatile
  4194  0556  3064               	movlw	100
  4195  0557  00D4               	movwf	_resetCounter^(0+128)	;volatile
  4196  0558                     l3708:
  4197                           
  4198                           ;newmain.c: 184:     if(hourMeter > (99999UL)){
  4199  0558  1683               	bsf	3,5	;RP0=1, select bank1
  4200  0559  1303               	bcf	3,6	;RP1=0, select bank1
  4201  055A  0853               	movf	(_hourMeter+3)^(0+128),w	;volatile
  4202  055B  1D03               	btfss	3,2
  4203  055C  2D6B               	goto	l3710
  4204  055D  3001               	movlw	1
  4205  055E  0252               	subwf	(_hourMeter+2)^(0+128),w	;volatile
  4206  055F  1D03               	skipz
  4207  0560  2D69               	goto	u5583
  4208  0561  3086               	movlw	134
  4209  0562  0251               	subwf	(_hourMeter+1)^(0+128),w	;volatile
  4210  0563  1D03               	skipz
  4211  0564  2D69               	goto	u5583
  4212  0565  30A0               	movlw	160
  4213  0566  0250               	subwf	_hourMeter^(0+128),w	;volatile
  4214  0567  1D03               	skipz
  4215  0568  2D69               	goto	u5583
  4216  0569                     u5583:
  4217  0569  1C03               	btfss	3,0
  4218  056A  2D75               	goto	l3712
  4219  056B                     l3710:
  4220                           
  4221                           ;newmain.c: 185:         hourMeter = 100;
  4222  056B  3000               	movlw	0
  4223  056C  1683               	bsf	3,5	;RP0=1, select bank1
  4224  056D  1303               	bcf	3,6	;RP1=0, select bank1
  4225  056E  00D3               	movwf	(_hourMeter+3)^(0+128)	;volatile
  4226  056F  3000               	movlw	0
  4227  0570  00D2               	movwf	(_hourMeter+2)^(0+128)	;volatile
  4228  0571  3000               	movlw	0
  4229  0572  00D1               	movwf	(_hourMeter+1)^(0+128)	;volatile
  4230  0573  3064               	movlw	100
  4231  0574  00D0               	movwf	_hourMeter^(0+128)	;volatile
  4232  0575                     l3712:
  4233                           
  4234                           ;newmain.c: 187:     if(circumference > (9999UL)){
  4235  0575  1283               	bcf	3,5	;RP0=0, select bank0
  4236  0576  1303               	bcf	3,6	;RP1=0, select bank0
  4237  0577  0859               	movf	_circumference+3,w	;volatile
  4238  0578  1D03               	btfss	3,2
  4239  0579  2D87               	goto	l3714
  4240  057A  0858               	movf	_circumference+2,w	;volatile
  4241  057B  1D03               	btfss	3,2
  4242  057C  2D87               	goto	l3714
  4243  057D  3027               	movlw	39
  4244  057E  0257               	subwf	_circumference+1,w	;volatile
  4245  057F  1D03               	skipz
  4246  0580  2D85               	goto	u5593
  4247  0581  3010               	movlw	16
  4248  0582  0256               	subwf	_circumference,w	;volatile
  4249  0583  1D03               	skipz
  4250  0584  2D85               	goto	u5593
  4251  0585                     u5593:
  4252  0585  1C03               	btfss	3,0
  4253  0586  2D91               	goto	l3716
  4254  0587                     l3714:
  4255                           
  4256                           ;newmain.c: 188:         circumference = 500;
  4257  0587  3000               	movlw	0
  4258  0588  1283               	bcf	3,5	;RP0=0, select bank0
  4259  0589  1303               	bcf	3,6	;RP1=0, select bank0
  4260  058A  00D9               	movwf	_circumference+3	;volatile
  4261  058B  3000               	movlw	0
  4262  058C  00D8               	movwf	_circumference+2	;volatile
  4263  058D  3001               	movlw	1
  4264  058E  00D7               	movwf	_circumference+1	;volatile
  4265  058F  30F4               	movlw	244
  4266  0590  00D6               	movwf	_circumference	;volatile
  4267  0591                     l3716:
  4268                           
  4269                           ;newmain.c: 190:     if(pulse > (9999UL)){
  4270  0591  1283               	bcf	3,5	;RP0=0, select bank0
  4271  0592  1303               	bcf	3,6	;RP1=0, select bank0
  4272  0593  0851               	movf	_pulse+3,w	;volatile
  4273  0594  1D03               	btfss	3,2
  4274  0595  2DA3               	goto	l3718
  4275  0596  0850               	movf	_pulse+2,w	;volatile
  4276  0597  1D03               	btfss	3,2
  4277  0598  2DA3               	goto	l3718
  4278  0599  3027               	movlw	39
  4279  059A  024F               	subwf	_pulse+1,w	;volatile
  4280  059B  1D03               	skipz
  4281  059C  2DA1               	goto	u5603
  4282  059D  3010               	movlw	16
  4283  059E  024E               	subwf	_pulse,w	;volatile
  4284  059F  1D03               	skipz
  4285  05A0  2DA1               	goto	u5603
  4286  05A1                     u5603:
  4287  05A1  1C03               	btfss	3,0
  4288  05A2  2DAD               	goto	l3720
  4289  05A3                     l3718:
  4290                           
  4291                           ;newmain.c: 191:         pulse = 4;
  4292  05A3  3000               	movlw	0
  4293  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  4294  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  4295  05A6  00D1               	movwf	_pulse+3	;volatile
  4296  05A7  3000               	movlw	0
  4297  05A8  00D0               	movwf	_pulse+2	;volatile
  4298  05A9  3000               	movlw	0
  4299  05AA  00CF               	movwf	_pulse+1	;volatile
  4300  05AB  3004               	movlw	4
  4301  05AC  00CE               	movwf	_pulse	;volatile
  4302  05AD                     l3720:
  4303                           
  4304                           ;newmain.c: 194:     countingPulse = (circumference)/pulse;
  4305  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  4306  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  4307  05AF  0851               	movf	_pulse+3,w	;volatile
  4308  05B0  00C3               	movwf	___lldiv@divisor+3
  4309  05B1  0850               	movf	_pulse+2,w	;volatile
  4310  05B2  00C2               	movwf	___lldiv@divisor+2
  4311  05B3  084F               	movf	_pulse+1,w	;volatile
  4312  05B4  00C1               	movwf	___lldiv@divisor+1
  4313  05B5  084E               	movf	_pulse,w	;volatile
  4314  05B6  00C0               	movwf	___lldiv@divisor
  4315  05B7  0859               	movf	_circumference+3,w	;volatile
  4316  05B8  00C7               	movwf	___lldiv@dividend+3
  4317  05B9  0858               	movf	_circumference+2,w	;volatile
  4318  05BA  00C6               	movwf	___lldiv@dividend+2
  4319  05BB  0857               	movf	_circumference+1,w	;volatile
  4320  05BC  00C5               	movwf	___lldiv@dividend+1
  4321  05BD  0856               	movf	_circumference,w	;volatile
  4322  05BE  00C4               	movwf	___lldiv@dividend
  4323  05BF  160A  118A  20FA   	fcall	___lldiv
  4324  05C2  0843               	movf	?___lldiv+3,w
  4325  05C3  1683               	bsf	3,5	;RP0=1, select bank1
  4326  05C4  00A3               	movwf	(_countingPulse+3)^(0+128)	;volatile
  4327  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  4328  05C6  0842               	movf	?___lldiv+2,w
  4329  05C7  1683               	bsf	3,5	;RP0=1, select bank1
  4330  05C8  00A2               	movwf	(_countingPulse+2)^(0+128)	;volatile
  4331  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  4332  05CA  0841               	movf	?___lldiv+1,w
  4333  05CB  1683               	bsf	3,5	;RP0=1, select bank1
  4334  05CC  00A1               	movwf	(_countingPulse+1)^(0+128)	;volatile
  4335  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  4336  05CE  0840               	movf	?___lldiv,w
  4337  05CF  1683               	bsf	3,5	;RP0=1, select bank1
  4338  05D0  00A0               	movwf	_countingPulse^(0+128)	;volatile
  4339                           
  4340                           ;newmain.c: 195:     metrePerMinCounter = 0;
  4341  05D1  3000               	movlw	0
  4342  05D2  00A7               	movwf	(_metrePerMinCounter+3)^(0+128)	;volatile
  4343  05D3  3000               	movlw	0
  4344  05D4  00A6               	movwf	(_metrePerMinCounter+2)^(0+128)	;volatile
  4345  05D5  3000               	movlw	0
  4346  05D6  00A5               	movwf	(_metrePerMinCounter+1)^(0+128)	;volatile
  4347  05D7  3000               	movlw	0
  4348  05D8  00A4               	movwf	_metrePerMinCounter^(0+128)	;volatile
  4349  05D9  0008               	return
  4350  05DA                     __end_of_eepromRead:
  4351                           
  4352                           	psect	text8
  4353  1D66                     __ptext8:	
  4354 ;; *************** function _eeprom_read *****************
  4355 ;; Defined at:
  4356 ;;		line 6 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/pic/__eeread.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  addr            1    wreg     unsigned char 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  addr            1   18[BANK0 ] unsigned char 
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1    wreg      unsigned char 
  4363 ;; Registers used:
  4364 ;;		wreg, status,2, status,0
  4365 ;; Tracked objects:
  4366 ;;		On entry : 200/100
  4367 ;;		On exit  : 300/200
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4370 ;;      Params:         0       0       0       0       0
  4371 ;;      Locals:         0       1       0       0       0
  4372 ;;      Temps:          0       1       0       0       0
  4373 ;;      Totals:         0       2       0       0       0
  4374 ;;Total ram usage:        2 bytes
  4375 ;; Hardware stack levels used: 1
  4376 ;; Hardware stack levels required when called: 2
  4377 ;; This function calls:
  4378 ;;		Nothing
  4379 ;; This function is called by:
  4380 ;;		_eepromRead
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           
  4385                           ;psect for function _eeprom_read
  4386  1D66                     _eeprom_read:
  4387                           
  4388                           ;incstack = 0
  4389                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  4390                           ;eeprom_read@addr stored from wreg
  4391  1D66  1283               	bcf	3,5	;RP0=0, select bank0
  4392  1D67  00B2               	movwf	eeprom_read@addr
  4393  1D68  2D6B               	goto	l504
  4394  1D69                     u2661:
  4395  1D69  1283               	bcf	3,5	;RP0=0, select bank0
  4396  1D6A  1303               	bcf	3,6	;RP1=0, select bank0
  4397  1D6B                     l504:	
  4398                           ;/Applications/microchip/xc8/v2.32/pic/sources/c90/pic/__eeread.c: 6: eeprom_read(unsign
      +                          ed char addr);/Applications/microchip/xc8/v2.32/pic/sources/c90/pic/__eeread.c: 7: {;/Ap
      +                          plications/microchip/xc8/v2.32/pic/sources/c90/pic/__eeread.c: 8:  do
  4399                           
  4400  1D6B  0064               	clrwdt	;# 
  4401  1D6C  1683               	bsf	3,5	;RP0=1, select bank3
  4402  1D6D  1703               	bsf	3,6	;RP1=1, select bank3
  4403  1D6E  188C               	btfsc	12,1	;volsfr
  4404  1D6F  2D69               	goto	u2661
  4405                           
  4406                           ;/Applications/microchip/xc8/v2.32/pic/sources/c90/pic/__eeread.c: 18:  return ( EEADR =
      +                           addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  4407  1D70  1283               	bcf	3,5	;RP0=0, select bank0
  4408  1D71  1303               	bcf	3,6	;RP1=0, select bank0
  4409  1D72  0832               	movf	eeprom_read@addr,w
  4410  1D73  1703               	bsf	3,6	;RP1=1, select bank2
  4411  1D74  008D               	movwf	13	;volatile
  4412  1D75  303F               	movlw	63
  4413  1D76  1303               	bcf	3,6	;RP1=0, select bank0
  4414  1D77  00B1               	movwf	??_eeprom_read
  4415  1D78  0831               	movf	??_eeprom_read,w
  4416  1D79  1683               	bsf	3,5	;RP0=1, select bank3
  4417  1D7A  1703               	bsf	3,6	;RP1=1, select bank3
  4418  1D7B  058C               	andwf	12,f	;volsfr
  4419  1D7C  140C               	bsf	12,0	;volsfr
  4420  1D7D  1283               	bcf	3,5	;RP0=0, select bank2
  4421  1D7E  080C               	movf	12,w	;volatile
  4422  1D7F  0008               	return
  4423  1D80                     __end_of_eeprom_read:
  4424                           
  4425                           	psect	text9
  4426  1D80                     __ptext9:	
  4427 ;; *************** function ___wmul *****************
  4428 ;; Defined at:
  4429 ;;		line 15 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/common/Umul16.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;  multiplier      2   19[BANK0 ] unsigned int 
  4432 ;;  multiplicand    2   21[BANK0 ] unsigned int 
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;  product         2   23[BANK0 ] unsigned int 
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  2   19[BANK0 ] unsigned int 
  4437 ;; Registers used:
  4438 ;;		wreg, status,2, status,0
  4439 ;; Tracked objects:
  4440 ;;		On entry : 300/0
  4441 ;;		On exit  : 300/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4444 ;;      Params:         0       4       0       0       0
  4445 ;;      Locals:         0       2       0       0       0
  4446 ;;      Temps:          0       0       0       0       0
  4447 ;;      Totals:         0       6       0       0       0
  4448 ;;Total ram usage:        6 bytes
  4449 ;; Hardware stack levels used: 1
  4450 ;; Hardware stack levels required when called: 2
  4451 ;; This function calls:
  4452 ;;		Nothing
  4453 ;; This function is called by:
  4454 ;;		_eepromRead
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           
  4459                           ;psect for function ___wmul
  4460  1D80                     ___wmul:
  4461                           
  4462                           ;incstack = 0
  4463                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4464  1D80  01B7               	clrf	___wmul@product
  4465  1D81  01B8               	clrf	___wmul@product+1
  4466  1D82                     l2598:
  4467  1D82  1C33               	btfss	___wmul@multiplier,0
  4468  1D83  2D8A               	goto	l534
  4469  1D84  0835               	movf	___wmul@multiplicand,w
  4470  1D85  07B7               	addwf	___wmul@product,f
  4471  1D86  1803               	skipnc
  4472  1D87  0AB8               	incf	___wmul@product+1,f
  4473  1D88  0836               	movf	___wmul@multiplicand+1,w
  4474  1D89  07B8               	addwf	___wmul@product+1,f
  4475  1D8A                     l534:
  4476  1D8A  3001               	movlw	1
  4477  1D8B                     u3055:
  4478  1D8B  1003               	clrc
  4479  1D8C  0DB5               	rlf	___wmul@multiplicand,f
  4480  1D8D  0DB6               	rlf	___wmul@multiplicand+1,f
  4481  1D8E  3EFF               	addlw	-1
  4482  1D8F  1D03               	skipz
  4483  1D90  2D8B               	goto	u3055
  4484  1D91  3001               	movlw	1
  4485  1D92                     u3065:
  4486  1D92  1003               	clrc
  4487  1D93  0CB4               	rrf	___wmul@multiplier+1,f
  4488  1D94  0CB3               	rrf	___wmul@multiplier,f
  4489  1D95  3EFF               	addlw	-1
  4490  1D96  1D03               	skipz
  4491  1D97  2D92               	goto	u3065
  4492  1D98  0833               	movf	___wmul@multiplier,w
  4493  1D99  0434               	iorwf	___wmul@multiplier+1,w
  4494  1D9A  1D03               	btfss	3,2
  4495  1D9B  2D82               	goto	l2598
  4496  1D9C  0838               	movf	___wmul@product+1,w
  4497  1D9D  00B4               	movwf	?___wmul+1
  4498  1D9E  0837               	movf	___wmul@product,w
  4499  1D9F  00B3               	movwf	?___wmul
  4500  1DA0  0008               	return
  4501  1DA1                     __end_of___wmul:
  4502                           
  4503                           	psect	text10
  4504  1E99                     __ptext10:	
  4505 ;; *************** function ___lmul *****************
  4506 ;; Defined at:
  4507 ;;		line 15 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/common/Umul32.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;  multiplier      4   19[BANK0 ] unsigned long 
  4510 ;;  multiplicand    4   23[BANK0 ] unsigned long 
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;  product         4   28[BANK0 ] unsigned long 
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  4   19[BANK0 ] unsigned long 
  4515 ;; Registers used:
  4516 ;;		wreg, status,2, status,0
  4517 ;; Tracked objects:
  4518 ;;		On entry : 300/0
  4519 ;;		On exit  : 300/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4522 ;;      Params:         0       8       0       0       0
  4523 ;;      Locals:         0       4       0       0       0
  4524 ;;      Temps:          0       1       0       0       0
  4525 ;;      Totals:         0      13       0       0       0
  4526 ;;Total ram usage:       13 bytes
  4527 ;; Hardware stack levels used: 1
  4528 ;; Hardware stack levels required when called: 2
  4529 ;; This function calls:
  4530 ;;		Nothing
  4531 ;; This function is called by:
  4532 ;;		_main
  4533 ;;		_eepromRead
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           
  4538                           ;psect for function ___lmul
  4539  1E99                     ___lmul:
  4540                           
  4541                           ;incstack = 0
  4542                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4543  1E99  3000               	movlw	0
  4544  1E9A  00BF               	movwf	___lmul@product+3
  4545  1E9B  3000               	movlw	0
  4546  1E9C  00BE               	movwf	___lmul@product+2
  4547  1E9D  3000               	movlw	0
  4548  1E9E  00BD               	movwf	___lmul@product+1
  4549  1E9F  3000               	movlw	0
  4550  1EA0  00BC               	movwf	___lmul@product
  4551  1EA1                     l2612:
  4552  1EA1  1C33               	btfss	___lmul@multiplier,0
  4553  1EA2  2EB7               	goto	l2616
  4554  1EA3  0837               	movf	___lmul@multiplicand,w
  4555  1EA4  07BC               	addwf	___lmul@product,f
  4556  1EA5  0838               	movf	___lmul@multiplicand+1,w
  4557  1EA6  1103               	clrz
  4558  1EA7  1803               	skipnc
  4559  1EA8  3E01               	addlw	1
  4560  1EA9  1D03               	btfss	3,2
  4561  1EAA  07BD               	addwf	___lmul@product+1,f
  4562  1EAB  0839               	movf	___lmul@multiplicand+2,w
  4563  1EAC  1103               	clrz
  4564  1EAD  1803               	skipnc
  4565  1EAE  3E01               	addlw	1
  4566  1EAF  1D03               	btfss	3,2
  4567  1EB0  07BE               	addwf	___lmul@product+2,f
  4568  1EB1  083A               	movf	___lmul@multiplicand+3,w
  4569  1EB2  1103               	clrz
  4570  1EB3  1803               	skipnc
  4571  1EB4  3E01               	addlw	1
  4572  1EB5  1D03               	btfss	3,2
  4573  1EB6  07BF               	addwf	___lmul@product+3,f
  4574  1EB7                     l2616:
  4575  1EB7  3001               	movlw	1
  4576  1EB8  00BB               	movwf	??___lmul
  4577  1EB9                     u3105:
  4578  1EB9  1003               	clrc
  4579  1EBA  0DB7               	rlf	___lmul@multiplicand,f
  4580  1EBB  0DB8               	rlf	___lmul@multiplicand+1,f
  4581  1EBC  0DB9               	rlf	___lmul@multiplicand+2,f
  4582  1EBD  0DBA               	rlf	___lmul@multiplicand+3,f
  4583  1EBE  0BBB               	decfsz	??___lmul,f
  4584  1EBF  2EB9               	goto	u3105
  4585  1EC0  3001               	movlw	1
  4586  1EC1                     u3115:
  4587  1EC1  1003               	clrc
  4588  1EC2  0CB6               	rrf	___lmul@multiplier+3,f
  4589  1EC3  0CB5               	rrf	___lmul@multiplier+2,f
  4590  1EC4  0CB4               	rrf	___lmul@multiplier+1,f
  4591  1EC5  0CB3               	rrf	___lmul@multiplier,f
  4592  1EC6  3EFF               	addlw	-1
  4593  1EC7  1D03               	skipz
  4594  1EC8  2EC1               	goto	u3115
  4595  1EC9  0836               	movf	___lmul@multiplier+3,w
  4596  1ECA  0435               	iorwf	___lmul@multiplier+2,w
  4597  1ECB  0434               	iorwf	___lmul@multiplier+1,w
  4598  1ECC  0433               	iorwf	___lmul@multiplier,w
  4599  1ECD  1D03               	skipz
  4600  1ECE  2EA1               	goto	l2612
  4601  1ECF  083F               	movf	___lmul@product+3,w
  4602  1ED0  00B6               	movwf	?___lmul+3
  4603  1ED1  083E               	movf	___lmul@product+2,w
  4604  1ED2  00B5               	movwf	?___lmul+2
  4605  1ED3  083D               	movf	___lmul@product+1,w
  4606  1ED4  00B4               	movwf	?___lmul+1
  4607  1ED5  083C               	movf	___lmul@product,w
  4608  1ED6  00B3               	movwf	?___lmul
  4609  1ED7  0008               	return
  4610  1ED8                     __end_of___lmul:
  4611                           
  4612                           	psect	text11
  4613  0D31                     __ptext11:	
  4614 ;; *************** function _editValues *****************
  4615 ;; Defined at:
  4616 ;;		line 330 in file "newmain.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;		None
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;		None
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  1    wreg      void 
  4623 ;; Registers used:
  4624 ;;		wreg, status,2, status,0, pclath, cstack
  4625 ;; Tracked objects:
  4626 ;;		On entry : 200/100
  4627 ;;		On exit  : 200/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4630 ;;      Params:         0       0       0       0       0
  4631 ;;      Locals:         0       0       0       0       0
  4632 ;;      Temps:          0       0       1       0       0
  4633 ;;      Totals:         0       0       1       0       0
  4634 ;;Total ram usage:        1 bytes
  4635 ;; Hardware stack levels used: 1
  4636 ;; Hardware stack levels required when called: 3
  4637 ;; This function calls:
  4638 ;;		___lldiv
  4639 ;;		___llmod
  4640 ;;		_eeprom_write
  4641 ;;		_enterSwitch
  4642 ;; This function is called by:
  4643 ;;		_main
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           
  4648                           ;psect for function _editValues
  4649  0D31                     _editValues:
  4650                           
  4651                           ;newmain.c: 331:     if(editMenuPointer && enterSwitch()){
  4652                           
  4653                           ;incstack = 0
  4654                           ; Regs used in _editValues: [wreg+status,2+status,0+pclath+cstack]
  4655  0D31  1283               	bcf	3,5	;RP0=0, select bank0
  4656  0D32  085C               	movf	_editMenuPointer,w	;volatile
  4657  0D33  1903               	btfsc	3,2
  4658  0D34  0008               	return
  4659  0D35  160A  158A  251C  120A  158A  	fcall	_enterSwitch
  4660  0D3A  3A00               	xorlw	0
  4661  0D3B  1903               	skipnz
  4662  0D3C  0008               	return
  4663                           
  4664                           ;newmain.c: 332:         if(editValue){
  4665  0D3D  1683               	bsf	3,5	;RP0=1, select bank1
  4666  0D3E  083A               	movf	_editValue^(0+128),w	;volatile
  4667  0D3F  1903               	btfsc	3,2
  4668  0D40  2FF1               	goto	l3852
  4669                           
  4670                           ;newmain.c: 334:             if(editValue == 3 && password != 9876){
  4671  0D41  3003               	movlw	3
  4672  0D42  063A               	xorwf	_editValue^(0+128),w	;volatile
  4673  0D43  1D03               	btfss	3,2
  4674  0D44  2D5F               	goto	l3810
  4675  0D45  3094               	movlw	148
  4676  0D46  062C               	xorwf	_password^(0+128),w	;volatile
  4677  0D47  3026               	movlw	38
  4678  0D48  1903               	skipnz
  4679  0D49  062D               	xorwf	(_password+1)^(0+128),w	;volatile
  4680  0D4A  042E               	iorwf	(_password+2)^(0+128),w	;volatile
  4681  0D4B  042F               	iorwf	(_password+3)^(0+128),w	;volatile
  4682  0D4C  1903               	btfsc	3,2
  4683  0D4D  2D5F               	goto	l3810
  4684                           
  4685                           ;newmain.c: 335:                 editMenuPointer = 0;
  4686  0D4E  1283               	bcf	3,5	;RP0=0, select bank0
  4687  0D4F  1303               	bcf	3,6	;RP1=0, select bank0
  4688  0D50  01DC               	clrf	_editMenuPointer	;volatile
  4689                           
  4690                           ;newmain.c: 336:                 editValue = 0;
  4691  0D51  1683               	bsf	3,5	;RP0=1, select bank1
  4692  0D52  01BA               	clrf	_editValue^(0+128)	;volatile
  4693                           
  4694                           ;newmain.c: 337:                 currentDisplay = 0;
  4695  0D53  1283               	bcf	3,5	;RP0=0, select bank0
  4696  0D54  01DE               	clrf	_currentDisplay	;volatile
  4697                           
  4698                           ;newmain.c: 338:                 password = 0;
  4699  0D55  3000               	movlw	0
  4700  0D56  1683               	bsf	3,5	;RP0=1, select bank1
  4701  0D57  00AF               	movwf	(_password+3)^(0+128)	;volatile
  4702  0D58  3000               	movlw	0
  4703  0D59  00AE               	movwf	(_password+2)^(0+128)	;volatile
  4704  0D5A  3000               	movlw	0
  4705  0D5B  00AD               	movwf	(_password+1)^(0+128)	;volatile
  4706  0D5C  3000               	movlw	0
  4707  0D5D  00AC               	movwf	_password^(0+128)	;volatile
  4708  0D5E  0008               	return
  4709  0D5F                     l3810:
  4710                           
  4711                           ;newmain.c: 342:         if(actualClothLength == 0){
  4712  0D5F  1683               	bsf	3,5	;RP0=1, select bank1
  4713  0D60  1303               	bcf	3,6	;RP1=0, select bank1
  4714  0D61  084F               	movf	(_actualClothLength+3)^(0+128),w	;volatile
  4715  0D62  044E               	iorwf	(_actualClothLength+2)^(0+128),w	;volatile
  4716  0D63  044D               	iorwf	(_actualClothLength+1)^(0+128),w	;volatile
  4717  0D64  044C               	iorwf	_actualClothLength^(0+128),w	;volatile
  4718  0D65  1D03               	skipz
  4719  0D66  2D6F               	goto	l298
  4720                           
  4721                           ;newmain.c: 343:             actualClothLength = 999;
  4722  0D67  3000               	movlw	0
  4723  0D68  00CF               	movwf	(_actualClothLength+3)^(0+128)	;volatile
  4724  0D69  3000               	movlw	0
  4725  0D6A  00CE               	movwf	(_actualClothLength+2)^(0+128)	;volatile
  4726  0D6B  3003               	movlw	3
  4727  0D6C  00CD               	movwf	(_actualClothLength+1)^(0+128)	;volatile
  4728  0D6D  30E7               	movlw	231
  4729  0D6E  00CC               	movwf	_actualClothLength^(0+128)	;volatile
  4730  0D6F                     l298:	
  4731                           ;newmain.c: 344:         }
  4732                           
  4733                           
  4734                           ;newmain.c: 345:         if(warningClothLength == 0){
  4735  0D6F  084B               	movf	(_warningClothLength+3)^(0+128),w	;volatile
  4736  0D70  044A               	iorwf	(_warningClothLength+2)^(0+128),w	;volatile
  4737  0D71  0449               	iorwf	(_warningClothLength+1)^(0+128),w	;volatile
  4738  0D72  0448               	iorwf	_warningClothLength^(0+128),w	;volatile
  4739  0D73  1D03               	skipz
  4740  0D74  2D7D               	goto	l299
  4741                           
  4742                           ;newmain.c: 346:             warningClothLength = 989;
  4743  0D75  3000               	movlw	0
  4744  0D76  00CB               	movwf	(_warningClothLength+3)^(0+128)	;volatile
  4745  0D77  3000               	movlw	0
  4746  0D78  00CA               	movwf	(_warningClothLength+2)^(0+128)	;volatile
  4747  0D79  3003               	movlw	3
  4748  0D7A  00C9               	movwf	(_warningClothLength+1)^(0+128)	;volatile
  4749  0D7B  30DD               	movlw	221
  4750  0D7C  00C8               	movwf	_warningClothLength^(0+128)	;volatile
  4751  0D7D                     l299:	
  4752                           ;newmain.c: 347:         }
  4753                           
  4754                           
  4755                           ;newmain.c: 348:         if(circumference == 0){
  4756  0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  4757  0D7E  0859               	movf	_circumference+3,w	;volatile
  4758  0D7F  0458               	iorwf	_circumference+2,w	;volatile
  4759  0D80  0457               	iorwf	_circumference+1,w	;volatile
  4760  0D81  0456               	iorwf	_circumference,w	;volatile
  4761  0D82  1D03               	skipz
  4762  0D83  2D8C               	goto	l300
  4763                           
  4764                           ;newmain.c: 349:             circumference = 500;
  4765  0D84  3000               	movlw	0
  4766  0D85  00D9               	movwf	_circumference+3	;volatile
  4767  0D86  3000               	movlw	0
  4768  0D87  00D8               	movwf	_circumference+2	;volatile
  4769  0D88  3001               	movlw	1
  4770  0D89  00D7               	movwf	_circumference+1	;volatile
  4771  0D8A  30F4               	movlw	244
  4772  0D8B  00D6               	movwf	_circumference	;volatile
  4773  0D8C                     l300:	
  4774                           ;newmain.c: 350:         }
  4775                           
  4776                           
  4777                           ;newmain.c: 351:         if(pulse == 0){
  4778  0D8C  0851               	movf	_pulse+3,w	;volatile
  4779  0D8D  0450               	iorwf	_pulse+2,w	;volatile
  4780  0D8E  044F               	iorwf	_pulse+1,w	;volatile
  4781  0D8F  044E               	iorwf	_pulse,w	;volatile
  4782  0D90  1D03               	skipz
  4783  0D91  2D9A               	goto	l3820
  4784                           
  4785                           ;newmain.c: 352:             pulse = 4;
  4786  0D92  3000               	movlw	0
  4787  0D93  00D1               	movwf	_pulse+3	;volatile
  4788  0D94  3000               	movlw	0
  4789  0D95  00D0               	movwf	_pulse+2	;volatile
  4790  0D96  3000               	movlw	0
  4791  0D97  00CF               	movwf	_pulse+1	;volatile
  4792  0D98  3004               	movlw	4
  4793  0D99  00CE               	movwf	_pulse	;volatile
  4794  0D9A                     l3820:
  4795                           
  4796                           ;newmain.c: 355:             editValue = 0;
  4797  0D9A  1683               	bsf	3,5	;RP0=1, select bank1
  4798  0D9B  01BA               	clrf	_editValue^(0+128)	;volatile
  4799                           
  4800                           ;newmain.c: 356:             currentDisplay = 0;
  4801  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  4802  0D9D  01DE               	clrf	_currentDisplay	;volatile
  4803                           
  4804                           ;newmain.c: 358:             eeprom_write(0x00,actualClothLength/(10000UL));
  4805  0D9E  3000               	movlw	0
  4806  0D9F  00C3               	movwf	___lldiv@divisor+3
  4807  0DA0  3000               	movlw	0
  4808  0DA1  00C2               	movwf	___lldiv@divisor+2
  4809  0DA2  3027               	movlw	39
  4810  0DA3  00C1               	movwf	___lldiv@divisor+1
  4811  0DA4  3010               	movlw	16
  4812  0DA5  00C0               	movwf	___lldiv@divisor
  4813  0DA6  1683               	bsf	3,5	;RP0=1, select bank1
  4814  0DA7  084F               	movf	(_actualClothLength+3)^(0+128),w	;volatile
  4815  0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  4816  0DA9  00C7               	movwf	___lldiv@dividend+3
  4817  0DAA  1683               	bsf	3,5	;RP0=1, select bank1
  4818  0DAB  084E               	movf	(_actualClothLength+2)^(0+128),w	;volatile
  4819  0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  4820  0DAD  00C6               	movwf	___lldiv@dividend+2
  4821  0DAE  1683               	bsf	3,5	;RP0=1, select bank1
  4822  0DAF  084D               	movf	(_actualClothLength+1)^(0+128),w	;volatile
  4823  0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  4824  0DB1  00C5               	movwf	___lldiv@dividend+1
  4825  0DB2  1683               	bsf	3,5	;RP0=1, select bank1
  4826  0DB3  084C               	movf	_actualClothLength^(0+128),w	;volatile
  4827  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  4828  0DB5  00C4               	movwf	___lldiv@dividend
  4829  0DB6  160A  118A  20FA  120A  158A  	fcall	___lldiv
  4830  0DBB  0840               	movf	?___lldiv,w
  4831  0DBC  1683               	bsf	3,5	;RP0=1, select bank1
  4832  0DBD  00ED               	movwf	??_editValues^(0+128)
  4833  0DBE  086D               	movf	??_editValues^(0+128),w
  4834  0DBF  00EA               	movwf	eeprom_write@value^(0+128)
  4835  0DC0  3000               	movlw	0
  4836  0DC1  160A  158A  25E8  120A  158A  	fcall	_eeprom_write
  4837                           
  4838                           ;newmain.c: 359:             eeprom_write(0x01,(actualClothLength/100)%100);
  4839  0DC6  3000               	movlw	0
  4840  0DC7  1303               	bcf	3,6	;RP1=0, select bank1
  4841  0DC8  00E3               	movwf	(___llmod@divisor+3)^(0+128)
  4842  0DC9  3000               	movlw	0
  4843  0DCA  00E2               	movwf	(___llmod@divisor+2)^(0+128)
  4844  0DCB  3000               	movlw	0
  4845  0DCC  00E1               	movwf	(___llmod@divisor+1)^(0+128)
  4846  0DCD  3064               	movlw	100
  4847  0DCE  00E0               	movwf	___llmod@divisor^(0+128)
  4848  0DCF  3000               	movlw	0
  4849  0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  4850  0DD1  00C3               	movwf	___lldiv@divisor+3
  4851  0DD2  3000               	movlw	0
  4852  0DD3  00C2               	movwf	___lldiv@divisor+2
  4853  0DD4  3000               	movlw	0
  4854  0DD5  00C1               	movwf	___lldiv@divisor+1
  4855  0DD6  3064               	movlw	100
  4856  0DD7  00C0               	movwf	___lldiv@divisor
  4857  0DD8  1683               	bsf	3,5	;RP0=1, select bank1
  4858  0DD9  084F               	movf	(_actualClothLength+3)^(0+128),w	;volatile
  4859  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  4860  0DDB  00C7               	movwf	___lldiv@dividend+3
  4861  0DDC  1683               	bsf	3,5	;RP0=1, select bank1
  4862  0DDD  084E               	movf	(_actualClothLength+2)^(0+128),w	;volatile
  4863  0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  4864  0DDF  00C6               	movwf	___lldiv@dividend+2
  4865  0DE0  1683               	bsf	3,5	;RP0=1, select bank1
  4866  0DE1  084D               	movf	(_actualClothLength+1)^(0+128),w	;volatile
  4867  0DE2  1283               	bcf	3,5	;RP0=0, select bank0
  4868  0DE3  00C5               	movwf	___lldiv@dividend+1
  4869  0DE4  1683               	bsf	3,5	;RP0=1, select bank1
  4870  0DE5  084C               	movf	_actualClothLength^(0+128),w	;volatile
  4871  0DE6  1283               	bcf	3,5	;RP0=0, select bank0
  4872  0DE7  00C4               	movwf	___lldiv@dividend
  4873  0DE8  160A  118A  20FA  120A  158A  	fcall	___lldiv
  4874  0DED  0843               	movf	?___lldiv+3,w
  4875  0DEE  1683               	bsf	3,5	;RP0=1, select bank1
  4876  0DEF  00E7               	movwf	(___llmod@dividend+3)^(0+128)
  4877  0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  4878  0DF1  0842               	movf	?___lldiv+2,w
  4879  0DF2  1683               	bsf	3,5	;RP0=1, select bank1
  4880  0DF3  00E6               	movwf	(___llmod@dividend+2)^(0+128)
  4881  0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  4882  0DF5  0841               	movf	?___lldiv+1,w
  4883  0DF6  1683               	bsf	3,5	;RP0=1, select bank1
  4884  0DF7  00E5               	movwf	(___llmod@dividend+1)^(0+128)
  4885  0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  4886  0DF9  0840               	movf	?___lldiv,w
  4887  0DFA  1683               	bsf	3,5	;RP0=1, select bank1
  4888  0DFB  00E4               	movwf	___llmod@dividend^(0+128)
  4889  0DFC  160A  158A  27B4  120A  158A  	fcall	___llmod
  4890  0E01  0860               	movf	?___llmod^(0+128),w
  4891  0E02  00ED               	movwf	??_editValues^(0+128)
  4892  0E03  086D               	movf	??_editValues^(0+128),w
  4893  0E04  00EA               	movwf	eeprom_write@value^(0+128)
  4894  0E05  3001               	movlw	1
  4895  0E06  160A  158A  25E8  120A  158A  	fcall	_eeprom_write
  4896                           
  4897                           ;newmain.c: 360:             eeprom_write(0x02,actualClothLength%100);
  4898  0E0B  3000               	movlw	0
  4899  0E0C  1303               	bcf	3,6	;RP1=0, select bank1
  4900  0E0D  00E3               	movwf	(___llmod@divisor+3)^(0+128)
  4901  0E0E  3000               	movlw	0
  4902  0E0F  00E2               	movwf	(___llmod@divisor+2)^(0+128)
  4903  0E10  3000               	movlw	0
  4904  0E11  00E1               	movwf	(___llmod@divisor+1)^(0+128)
  4905  0E12  3064               	movlw	100
  4906  0E13  00E0               	movwf	___llmod@divisor^(0+128)
  4907  0E14  084F               	movf	(_actualClothLength+3)^(0+128),w	;volatile
  4908  0E15  00E7               	movwf	(___llmod@dividend+3)^(0+128)
  4909  0E16  084E               	movf	(_actualClothLength+2)^(0+128),w	;volatile
  4910  0E17  00E6               	movwf	(___llmod@dividend+2)^(0+128)
  4911  0E18  084D               	movf	(_actualClothLength+1)^(0+128),w	;volatile
  4912  0E19  00E5               	movwf	(___llmod@dividend+1)^(0+128)
  4913  0E1A  084C               	movf	_actualClothLength^(0+128),w	;volatile
  4914  0E1B  00E4               	movwf	___llmod@dividend^(0+128)
  4915  0E1C  160A  158A  27B4  120A  158A  	fcall	___llmod
  4916  0E21  0860               	movf	?___llmod^(0+128),w
  4917  0E22  00ED               	movwf	??_editValues^(0+128)
  4918  0E23  086D               	movf	??_editValues^(0+128),w
  4919  0E24  00EA               	movwf	eeprom_write@value^(0+128)
  4920  0E25  3002               	movlw	2
  4921  0E26  160A  158A  25E8  120A  158A  	fcall	_eeprom_write
  4922                           
  4923                           ;newmain.c: 362:             eeprom_write(0x03,warningClothLength/(10000UL));
  4924  0E2B  3000               	movlw	0
  4925  0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  4926  0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  4927  0E2E  00C3               	movwf	___lldiv@divisor+3
  4928  0E2F  3000               	movlw	0
  4929  0E30  00C2               	movwf	___lldiv@divisor+2
  4930  0E31  3027               	movlw	39
  4931  0E32  00C1               	movwf	___lldiv@divisor+1
  4932  0E33  3010               	movlw	16
  4933  0E34  00C0               	movwf	___lldiv@divisor
  4934  0E35  1683               	bsf	3,5	;RP0=1, select bank1
  4935  0E36  084B               	movf	(_warningClothLength+3)^(0+128),w	;volatile
  4936  0E37  1283               	bcf	3,5	;RP0=0, select bank0
  4937  0E38  00C7               	movwf	___lldiv@dividend+3
  4938  0E39  1683               	bsf	3,5	;RP0=1, select bank1
  4939  0E3A  084A               	movf	(_warningClothLength+2)^(0+128),w	;volatile
  4940  0E3B  1283               	bcf	3,5	;RP0=0, select bank0
  4941  0E3C  00C6               	movwf	___lldiv@dividend+2
  4942  0E3D  1683               	bsf	3,5	;RP0=1, select bank1
  4943  0E3E  0849               	movf	(_warningClothLength+1)^(0+128),w	;volatile
  4944  0E3F  1283               	bcf	3,5	;RP0=0, select bank0
  4945  0E40  00C5               	movwf	___lldiv@dividend+1
  4946  0E41  1683               	bsf	3,5	;RP0=1, select bank1
  4947  0E42  0848               	movf	_warningClothLength^(0+128),w	;volatile
  4948  0E43  1283               	bcf	3,5	;RP0=0, select bank0
  4949  0E44  00C4               	movwf	___lldiv@dividend
  4950  0E45  160A  118A  20FA  120A  158A  	fcall	___lldiv
  4951  0E4A  0840               	movf	?___lldiv,w
  4952  0E4B  1683               	bsf	3,5	;RP0=1, select bank1
  4953  0E4C  00ED               	movwf	??_editValues^(0+128)
  4954  0E4D  086D               	movf	??_editValues^(0+128),w
  4955  0E4E  00EA               	movwf	eeprom_write@value^(0+128)
  4956  0E4F  3003               	movlw	3
  4957  0E50  160A  158A  25E8  120A  158A  	fcall	_eeprom_write
  4958                           
  4959                           ;newmain.c: 363:             eeprom_write(0x04,(warningClothLength/100)%100);
  4960  0E55  3000               	movlw	0
  4961  0E56  1303               	bcf	3,6	;RP1=0, select bank1
  4962  0E57  00E3               	movwf	(___llmod@divisor+3)^(0+128)
  4963  0E58  3000               	movlw	0
  4964  0E59  00E2               	movwf	(___llmod@divisor+2)^(0+128)
  4965  0E5A  3000               	movlw	0
  4966  0E5B  00E1               	movwf	(___llmod@divisor+1)^(0+128)
  4967  0E5C  3064               	movlw	100
  4968  0E5D  00E0               	movwf	___llmod@divisor^(0+128)
  4969  0E5E  3000               	movlw	0
  4970  0E5F  1283               	bcf	3,5	;RP0=0, select bank0
  4971  0E60  00C3               	movwf	___lldiv@divisor+3
  4972  0E61  3000               	movlw	0
  4973  0E62  00C2               	movwf	___lldiv@divisor+2
  4974  0E63  3000               	movlw	0
  4975  0E64  00C1               	movwf	___lldiv@divisor+1
  4976  0E65  3064               	movlw	100
  4977  0E66  00C0               	movwf	___lldiv@divisor
  4978  0E67  1683               	bsf	3,5	;RP0=1, select bank1
  4979  0E68  084B               	movf	(_warningClothLength+3)^(0+128),w	;volatile
  4980  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  4981  0E6A  00C7               	movwf	___lldiv@dividend+3
  4982  0E6B  1683               	bsf	3,5	;RP0=1, select bank1
  4983  0E6C  084A               	movf	(_warningClothLength+2)^(0+128),w	;volatile
  4984  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  4985  0E6E  00C6               	movwf	___lldiv@dividend+2
  4986  0E6F  1683               	bsf	3,5	;RP0=1, select bank1
  4987  0E70  0849               	movf	(_warningClothLength+1)^(0+128),w	;volatile
  4988  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  4989  0E72  00C5               	movwf	___lldiv@dividend+1
  4990  0E73  1683               	bsf	3,5	;RP0=1, select bank1
  4991  0E74  0848               	movf	_warningClothLength^(0+128),w	;volatile
  4992  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  4993  0E76  00C4               	movwf	___lldiv@dividend
  4994  0E77  160A  118A  20FA  120A  158A  	fcall	___lldiv
  4995  0E7C  0843               	movf	?___lldiv+3,w
  4996  0E7D  1683               	bsf	3,5	;RP0=1, select bank1
  4997  0E7E  00E7               	movwf	(___llmod@dividend+3)^(0+128)
  4998  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  4999  0E80  0842               	movf	?___lldiv+2,w
  5000  0E81  1683               	bsf	3,5	;RP0=1, select bank1
  5001  0E82  00E6               	movwf	(___llmod@dividend+2)^(0+128)
  5002  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  5003  0E84  0841               	movf	?___lldiv+1,w
  5004  0E85  1683               	bsf	3,5	;RP0=1, select bank1
  5005  0E86  00E5               	movwf	(___llmod@dividend+1)^(0+128)
  5006  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  5007  0E88  0840               	movf	?___lldiv,w
  5008  0E89  1683               	bsf	3,5	;RP0=1, select bank1
  5009  0E8A  00E4               	movwf	___llmod@dividend^(0+128)
  5010  0E8B  160A  158A  27B4  120A  158A  	fcall	___llmod
  5011  0E90  0860               	movf	?___llmod^(0+128),w
  5012  0E91  00ED               	movwf	??_editValues^(0+128)
  5013  0E92  086D               	movf	??_editValues^(0+128),w
  5014  0E93  00EA               	movwf	eeprom_write@value^(0+128)
  5015  0E94  3004               	movlw	4
  5016  0E95  160A  158A  25E8  120A  158A  	fcall	_eeprom_write
  5017                           
  5018                           ;newmain.c: 364:             eeprom_write(0x05,warningClothLength%100);
  5019  0E9A  3000               	movlw	0
  5020  0E9B  1303               	bcf	3,6	;RP1=0, select bank1
  5021  0E9C  00E3               	movwf	(___llmod@divisor+3)^(0+128)
  5022  0E9D  3000               	movlw	0
  5023  0E9E  00E2               	movwf	(___llmod@divisor+2)^(0+128)
  5024  0E9F  3000               	movlw	0
  5025  0EA0  00E1               	movwf	(___llmod@divisor+1)^(0+128)
  5026  0EA1  3064               	movlw	100
  5027  0EA2  00E0               	movwf	___llmod@divisor^(0+128)
  5028  0EA3  084B               	movf	(_warningClothLength+3)^(0+128),w	;volatile
  5029  0EA4  00E7               	movwf	(___llmod@dividend+3)^(0+128)
  5030  0EA5  084A               	movf	(_warningClothLength+2)^(0+128),w	;volatile
  5031  0EA6  00E6               	movwf	(___llmod@dividend+2)^(0+128)
  5032  0EA7  0849               	movf	(_warningClothLength+1)^(0+128),w	;volatile
  5033  0EA8  00E5               	movwf	(___llmod@dividend+1)^(0+128)
  5034  0EA9  0848               	movf	_warningClothLength^(0+128),w	;volatile
  5035  0EAA  00E4               	movwf	___llmod@dividend^(0+128)
  5036  0EAB  160A  158A  27B4  120A  158A  	fcall	___llmod
  5037  0EB0  0860               	movf	?___llmod^(0+128),w
  5038  0EB1  00ED               	movwf	??_editValues^(0+128)
  5039  0EB2  086D               	movf	??_editValues^(0+128),w
  5040  0EB3  00EA               	movwf	eeprom_write@value^(0+128)
  5041  0EB4  3005               	movlw	5
  5042  0EB5  160A  158A  25E8  120A  158A  	fcall	_eeprom_write
  5043                           
  5044                           ;newmain.c: 366:             eeprom_write(0x06,circumference/(10000UL));
  5045  0EBA  3000               	movlw	0
  5046  0EBB  1283               	bcf	3,5	;RP0=0, select bank0
  5047  0EBC  1303               	bcf	3,6	;RP1=0, select bank0
  5048  0EBD  00C3               	movwf	___lldiv@divisor+3
  5049  0EBE  3000               	movlw	0
  5050  0EBF  00C2               	movwf	___lldiv@divisor+2
  5051  0EC0  3027               	movlw	39
  5052  0EC1  00C1               	movwf	___lldiv@divisor+1
  5053  0EC2  3010               	movlw	16
  5054  0EC3  00C0               	movwf	___lldiv@divisor
  5055  0EC4  0859               	movf	_circumference+3,w	;volatile
  5056  0EC5  00C7               	movwf	___lldiv@dividend+3
  5057  0EC6  0858               	movf	_circumference+2,w	;volatile
  5058  0EC7  00C6               	movwf	___lldiv@dividend+2
  5059  0EC8  0857               	movf	_circumference+1,w	;volatile
  5060  0EC9  00C5               	movwf	___lldiv@dividend+1
  5061  0ECA  0856               	movf	_circumference,w	;volatile
  5062  0ECB  00C4               	movwf	___lldiv@dividend
  5063  0ECC  160A  118A  20FA  120A  158A  	fcall	___lldiv
  5064  0ED1  0840               	movf	?___lldiv,w
  5065  0ED2  1683               	bsf	3,5	;RP0=1, select bank1
  5066  0ED3  00ED               	movwf	??_editValues^(0+128)
  5067  0ED4  086D               	movf	??_editValues^(0+128),w
  5068  0ED5  00EA               	movwf	eeprom_write@value^(0+128)
  5069  0ED6  3006               	movlw	6
  5070  0ED7  160A  158A  25E8  120A  158A  	fcall	_eeprom_write
  5071                           
  5072                           ;newmain.c: 367:             eeprom_write(0x07,(circumference/100)%100);
  5073  0EDC  3000               	movlw	0
  5074  0EDD  1303               	bcf	3,6	;RP1=0, select bank1
  5075  0EDE  00E3               	movwf	(___llmod@divisor+3)^(0+128)
  5076  0EDF  3000               	movlw	0
  5077  0EE0  00E2               	movwf	(___llmod@divisor+2)^(0+128)
  5078  0EE1  3000               	movlw	0
  5079  0EE2  00E1               	movwf	(___llmod@divisor+1)^(0+128)
  5080  0EE3  3064               	movlw	100
  5081  0EE4  00E0               	movwf	___llmod@divisor^(0+128)
  5082  0EE5  3000               	movlw	0
  5083  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  5084  0EE7  00C3               	movwf	___lldiv@divisor+3
  5085  0EE8  3000               	movlw	0
  5086  0EE9  00C2               	movwf	___lldiv@divisor+2
  5087  0EEA  3000               	movlw	0
  5088  0EEB  00C1               	movwf	___lldiv@divisor+1
  5089  0EEC  3064               	movlw	100
  5090  0EED  00C0               	movwf	___lldiv@divisor
  5091  0EEE  0859               	movf	_circumference+3,w	;volatile
  5092  0EEF  00C7               	movwf	___lldiv@dividend+3
  5093  0EF0  0858               	movf	_circumference+2,w	;volatile
  5094  0EF1  00C6               	movwf	___lldiv@dividend+2
  5095  0EF2  0857               	movf	_circumference+1,w	;volatile
  5096  0EF3  00C5               	movwf	___lldiv@dividend+1
  5097  0EF4  0856               	movf	_circumference,w	;volatile
  5098  0EF5  00C4               	movwf	___lldiv@dividend
  5099  0EF6  160A  118A  20FA  120A  158A  	fcall	___lldiv
  5100  0EFB  0843               	movf	?___lldiv+3,w
  5101  0EFC  1683               	bsf	3,5	;RP0=1, select bank1
  5102  0EFD  00E7               	movwf	(___llmod@dividend+3)^(0+128)
  5103  0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  5104  0EFF  0842               	movf	?___lldiv+2,w
  5105  0F00  1683               	bsf	3,5	;RP0=1, select bank1
  5106  0F01  00E6               	movwf	(___llmod@dividend+2)^(0+128)
  5107  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  5108  0F03  0841               	movf	?___lldiv+1,w
  5109  0F04  1683               	bsf	3,5	;RP0=1, select bank1
  5110  0F05  00E5               	movwf	(___llmod@dividend+1)^(0+128)
  5111  0F06  1283               	bcf	3,5	;RP0=0, select bank0
  5112  0F07  0840               	movf	?___lldiv,w
  5113  0F08  1683               	bsf	3,5	;RP0=1, select bank1
  5114  0F09  00E4               	movwf	___llmod@dividend^(0+128)
  5115  0F0A  160A  158A  27B4  120A  158A  	fcall	___llmod
  5116  0F0F  0860               	movf	?___llmod^(0+128),w
  5117  0F10  00ED               	movwf	??_editValues^(0+128)
  5118  0F11  086D               	movf	??_editValues^(0+128),w
  5119  0F12  00EA               	movwf	eeprom_write@value^(0+128)
  5120  0F13  3007               	movlw	7
  5121  0F14  160A  158A  25E8  120A  158A  	fcall	_eeprom_write
  5122                           
  5123                           ;newmain.c: 368:             eeprom_write(0x08,circumference%100);
  5124  0F19  3000               	movlw	0
  5125  0F1A  1303               	bcf	3,6	;RP1=0, select bank1
  5126  0F1B  00E3               	movwf	(___llmod@divisor+3)^(0+128)
  5127  0F1C  3000               	movlw	0
  5128  0F1D  00E2               	movwf	(___llmod@divisor+2)^(0+128)
  5129  0F1E  3000               	movlw	0
  5130  0F1F  00E1               	movwf	(___llmod@divisor+1)^(0+128)
  5131  0F20  3064               	movlw	100
  5132  0F21  00E0               	movwf	___llmod@divisor^(0+128)
  5133  0F22  1283               	bcf	3,5	;RP0=0, select bank0
  5134  0F23  0859               	movf	_circumference+3,w	;volatile
  5135  0F24  1683               	bsf	3,5	;RP0=1, select bank1
  5136  0F25  00E7               	movwf	(___llmod@dividend+3)^(0+128)
  5137  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  5138  0F27  0858               	movf	_circumference+2,w	;volatile
  5139  0F28  1683               	bsf	3,5	;RP0=1, select bank1
  5140  0F29  00E6               	movwf	(___llmod@dividend+2)^(0+128)
  5141  0F2A  1283               	bcf	3,5	;RP0=0, select bank0
  5142  0F2B  0857               	movf	_circumference+1,w	;volatile
  5143  0F2C  1683               	bsf	3,5	;RP0=1, select bank1
  5144  0F2D  00E5               	movwf	(___llmod@dividend+1)^(0+128)
  5145  0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  5146  0F2F  0856               	movf	_circumference,w	;volatile
  5147  0F30  1683               	bsf	3,5	;RP0=1, select bank1
  5148  0F31  00E4               	movwf	___llmod@dividend^(0+128)
  5149  0F32  160A  158A  27B4  120A  158A  	fcall	___llmod
  5150  0F37  0860               	movf	?___llmod^(0+128),w
  5151  0F38  00ED               	movwf	??_editValues^(0+128)
  5152  0F39  086D               	movf	??_editValues^(0+128),w
  5153  0F3A  00EA               	movwf	eeprom_write@value^(0+128)
  5154  0F3B  3008               	movlw	8
  5155  0F3C  160A  158A  25E8  120A  158A  	fcall	_eeprom_write
  5156                           
  5157                           ;newmain.c: 370:             eeprom_write(0x09,pulse/(10000UL));
  5158  0F41  3000               	movlw	0
  5159  0F42  1283               	bcf	3,5	;RP0=0, select bank0
  5160  0F43  1303               	bcf	3,6	;RP1=0, select bank0
  5161  0F44  00C3               	movwf	___lldiv@divisor+3
  5162  0F45  3000               	movlw	0
  5163  0F46  00C2               	movwf	___lldiv@divisor+2
  5164  0F47  3027               	movlw	39
  5165  0F48  00C1               	movwf	___lldiv@divisor+1
  5166  0F49  3010               	movlw	16
  5167  0F4A  00C0               	movwf	___lldiv@divisor
  5168  0F4B  0851               	movf	_pulse+3,w	;volatile
  5169  0F4C  00C7               	movwf	___lldiv@dividend+3
  5170  0F4D  0850               	movf	_pulse+2,w	;volatile
  5171  0F4E  00C6               	movwf	___lldiv@dividend+2
  5172  0F4F  084F               	movf	_pulse+1,w	;volatile
  5173  0F50  00C5               	movwf	___lldiv@dividend+1
  5174  0F51  084E               	movf	_pulse,w	;volatile
  5175  0F52  00C4               	movwf	___lldiv@dividend
  5176  0F53  160A  118A  20FA  120A  158A  	fcall	___lldiv
  5177  0F58  0840               	movf	?___lldiv,w
  5178  0F59  1683               	bsf	3,5	;RP0=1, select bank1
  5179  0F5A  00ED               	movwf	??_editValues^(0+128)
  5180  0F5B  086D               	movf	??_editValues^(0+128),w
  5181  0F5C  00EA               	movwf	eeprom_write@value^(0+128)
  5182  0F5D  3009               	movlw	9
  5183  0F5E  160A  158A  25E8  120A  158A  	fcall	_eeprom_write
  5184                           
  5185                           ;newmain.c: 371:             eeprom_write(0x0A,(pulse/100)%100);
  5186  0F63  3000               	movlw	0
  5187  0F64  1303               	bcf	3,6	;RP1=0, select bank1
  5188  0F65  00E3               	movwf	(___llmod@divisor+3)^(0+128)
  5189  0F66  3000               	movlw	0
  5190  0F67  00E2               	movwf	(___llmod@divisor+2)^(0+128)
  5191  0F68  3000               	movlw	0
  5192  0F69  00E1               	movwf	(___llmod@divisor+1)^(0+128)
  5193  0F6A  3064               	movlw	100
  5194  0F6B  00E0               	movwf	___llmod@divisor^(0+128)
  5195  0F6C  3000               	movlw	0
  5196  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  5197  0F6E  00C3               	movwf	___lldiv@divisor+3
  5198  0F6F  3000               	movlw	0
  5199  0F70  00C2               	movwf	___lldiv@divisor+2
  5200  0F71  3000               	movlw	0
  5201  0F72  00C1               	movwf	___lldiv@divisor+1
  5202  0F73  3064               	movlw	100
  5203  0F74  00C0               	movwf	___lldiv@divisor
  5204  0F75  0851               	movf	_pulse+3,w	;volatile
  5205  0F76  00C7               	movwf	___lldiv@dividend+3
  5206  0F77  0850               	movf	_pulse+2,w	;volatile
  5207  0F78  00C6               	movwf	___lldiv@dividend+2
  5208  0F79  084F               	movf	_pulse+1,w	;volatile
  5209  0F7A  00C5               	movwf	___lldiv@dividend+1
  5210  0F7B  084E               	movf	_pulse,w	;volatile
  5211  0F7C  00C4               	movwf	___lldiv@dividend
  5212  0F7D  160A  118A  20FA  120A  158A  	fcall	___lldiv
  5213  0F82  0843               	movf	?___lldiv+3,w
  5214  0F83  1683               	bsf	3,5	;RP0=1, select bank1
  5215  0F84  00E7               	movwf	(___llmod@dividend+3)^(0+128)
  5216  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  5217  0F86  0842               	movf	?___lldiv+2,w
  5218  0F87  1683               	bsf	3,5	;RP0=1, select bank1
  5219  0F88  00E6               	movwf	(___llmod@dividend+2)^(0+128)
  5220  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  5221  0F8A  0841               	movf	?___lldiv+1,w
  5222  0F8B  1683               	bsf	3,5	;RP0=1, select bank1
  5223  0F8C  00E5               	movwf	(___llmod@dividend+1)^(0+128)
  5224  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  5225  0F8E  0840               	movf	?___lldiv,w
  5226  0F8F  1683               	bsf	3,5	;RP0=1, select bank1
  5227  0F90  00E4               	movwf	___llmod@dividend^(0+128)
  5228  0F91  160A  158A  27B4  120A  158A  	fcall	___llmod
  5229  0F96  0860               	movf	?___llmod^(0+128),w
  5230  0F97  00ED               	movwf	??_editValues^(0+128)
  5231  0F98  086D               	movf	??_editValues^(0+128),w
  5232  0F99  00EA               	movwf	eeprom_write@value^(0+128)
  5233  0F9A  300A               	movlw	10
  5234  0F9B  160A  158A  25E8  120A  158A  	fcall	_eeprom_write
  5235                           
  5236                           ;newmain.c: 372:             eeprom_write(0x0B,pulse%100);
  5237  0FA0  3000               	movlw	0
  5238  0FA1  1303               	bcf	3,6	;RP1=0, select bank1
  5239  0FA2  00E3               	movwf	(___llmod@divisor+3)^(0+128)
  5240  0FA3  3000               	movlw	0
  5241  0FA4  00E2               	movwf	(___llmod@divisor+2)^(0+128)
  5242  0FA5  3000               	movlw	0
  5243  0FA6  00E1               	movwf	(___llmod@divisor+1)^(0+128)
  5244  0FA7  3064               	movlw	100
  5245  0FA8  00E0               	movwf	___llmod@divisor^(0+128)
  5246  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  5247  0FAA  0851               	movf	_pulse+3,w	;volatile
  5248  0FAB  1683               	bsf	3,5	;RP0=1, select bank1
  5249  0FAC  00E7               	movwf	(___llmod@dividend+3)^(0+128)
  5250  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  5251  0FAE  0850               	movf	_pulse+2,w	;volatile
  5252  0FAF  1683               	bsf	3,5	;RP0=1, select bank1
  5253  0FB0  00E6               	movwf	(___llmod@dividend+2)^(0+128)
  5254  0FB1  1283               	bcf	3,5	;RP0=0, select bank0
  5255  0FB2  084F               	movf	_pulse+1,w	;volatile
  5256  0FB3  1683               	bsf	3,5	;RP0=1, select bank1
  5257  0FB4  00E5               	movwf	(___llmod@dividend+1)^(0+128)
  5258  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  5259  0FB6  084E               	movf	_pulse,w	;volatile
  5260  0FB7  1683               	bsf	3,5	;RP0=1, select bank1
  5261  0FB8  00E4               	movwf	___llmod@dividend^(0+128)
  5262  0FB9  160A  158A  27B4  120A  158A  	fcall	___llmod
  5263  0FBE  0860               	movf	?___llmod^(0+128),w
  5264  0FBF  00ED               	movwf	??_editValues^(0+128)
  5265  0FC0  086D               	movf	??_editValues^(0+128),w
  5266  0FC1  00EA               	movwf	eeprom_write@value^(0+128)
  5267  0FC2  300B               	movlw	11
  5268  0FC3  160A  158A  25E8  120A  158A  	fcall	_eeprom_write
  5269                           
  5270                           ;newmain.c: 374:             editMenuPointer += 1;
  5271  0FC8  3001               	movlw	1
  5272  0FC9  1303               	bcf	3,6	;RP1=0, select bank1
  5273  0FCA  00ED               	movwf	??_editValues^(0+128)
  5274  0FCB  086D               	movf	??_editValues^(0+128),w
  5275  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  5276  0FCD  07DC               	addwf	_editMenuPointer,f	;volatile
  5277                           
  5278                           ;newmain.c: 376:             countingPulse = (circumference)/pulse;
  5279  0FCE  0851               	movf	_pulse+3,w	;volatile
  5280  0FCF  00C3               	movwf	___lldiv@divisor+3
  5281  0FD0  0850               	movf	_pulse+2,w	;volatile
  5282  0FD1  00C2               	movwf	___lldiv@divisor+2
  5283  0FD2  084F               	movf	_pulse+1,w	;volatile
  5284  0FD3  00C1               	movwf	___lldiv@divisor+1
  5285  0FD4  084E               	movf	_pulse,w	;volatile
  5286  0FD5  00C0               	movwf	___lldiv@divisor
  5287  0FD6  0859               	movf	_circumference+3,w	;volatile
  5288  0FD7  00C7               	movwf	___lldiv@dividend+3
  5289  0FD8  0858               	movf	_circumference+2,w	;volatile
  5290  0FD9  00C6               	movwf	___lldiv@dividend+2
  5291  0FDA  0857               	movf	_circumference+1,w	;volatile
  5292  0FDB  00C5               	movwf	___lldiv@dividend+1
  5293  0FDC  0856               	movf	_circumference,w	;volatile
  5294  0FDD  00C4               	movwf	___lldiv@dividend
  5295  0FDE  160A  118A  20FA   	fcall	___lldiv
  5296  0FE1  0843               	movf	?___lldiv+3,w
  5297  0FE2  1683               	bsf	3,5	;RP0=1, select bank1
  5298  0FE3  00A3               	movwf	(_countingPulse+3)^(0+128)	;volatile
  5299  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  5300  0FE5  0842               	movf	?___lldiv+2,w
  5301  0FE6  1683               	bsf	3,5	;RP0=1, select bank1
  5302  0FE7  00A2               	movwf	(_countingPulse+2)^(0+128)	;volatile
  5303  0FE8  1283               	bcf	3,5	;RP0=0, select bank0
  5304  0FE9  0841               	movf	?___lldiv+1,w
  5305  0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  5306  0FEB  00A1               	movwf	(_countingPulse+1)^(0+128)	;volatile
  5307  0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  5308  0FED  0840               	movf	?___lldiv,w
  5309  0FEE  1683               	bsf	3,5	;RP0=1, select bank1
  5310  0FEF  00A0               	movwf	_countingPulse^(0+128)	;volatile
  5311                           
  5312                           ;newmain.c: 378:         }
  5313  0FF0  0008               	return
  5314  0FF1                     l3852:
  5315  0FF1  083A               	movf	_editValue^(0+128),w	;volatile
  5316  0FF2  1D03               	btfss	3,2
  5317  0FF3  0008               	return
  5318                           
  5319                           ;newmain.c: 380:             editValue = editMenuPointer;
  5320  0FF4  1283               	bcf	3,5	;RP0=0, select bank0
  5321  0FF5  085C               	movf	_editMenuPointer,w	;volatile
  5322  0FF6  1683               	bsf	3,5	;RP0=1, select bank1
  5323  0FF7  00ED               	movwf	??_editValues^(0+128)
  5324  0FF8  086D               	movf	??_editValues^(0+128),w
  5325  0FF9  00BA               	movwf	_editValue^(0+128)	;volatile
  5326                           
  5327                           ;newmain.c: 381:             currentDisplay = 1;
  5328  0FFA  3001               	movlw	1
  5329  0FFB  00ED               	movwf	??_editValues^(0+128)
  5330  0FFC  086D               	movf	??_editValues^(0+128),w
  5331  0FFD  1283               	bcf	3,5	;RP0=0, select bank0
  5332  0FFE  00DE               	movwf	_currentDisplay	;volatile
  5333  0FFF  0008               	return
  5334  1000                     __end_of_editValues:
  5335                           
  5336                           	psect	text12
  5337  1D1C                     __ptext12:	
  5338 ;; *************** function _enterSwitch *****************
  5339 ;; Defined at:
  5340 ;;		line 580 in file "newmain.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;		None
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;		None
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  1    wreg      unsigned char 
  5347 ;; Registers used:
  5348 ;;		wreg, status,2
  5349 ;; Tracked objects:
  5350 ;;		On entry : 300/0
  5351 ;;		On exit  : 200/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5354 ;;      Params:         0       0       0       0       0
  5355 ;;      Locals:         0       0       0       0       0
  5356 ;;      Temps:          0       0       0       0       0
  5357 ;;      Totals:         0       0       0       0       0
  5358 ;;Total ram usage:        0 bytes
  5359 ;; Hardware stack levels used: 1
  5360 ;; Hardware stack levels required when called: 2
  5361 ;; This function calls:
  5362 ;;		Nothing
  5363 ;; This function is called by:
  5364 ;;		_editValues
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           
  5369                           ;psect for function _enterSwitch
  5370  1D1C                     _enterSwitch:
  5371                           
  5372                           ;newmain.c: 582:     if(RD3 == 1 && enterFlag == 1){
  5373                           
  5374                           ;incstack = 0
  5375                           ; Regs used in _enterSwitch: [wreg+status,2]
  5376  1D1C  1988               	btfsc	8,3	;volatile
  5377  1D1D  1FDA               	btfss	_enterFlag/(0+8),_enterFlag& (0+7)	;volatile
  5378  1D1E  2D22               	goto	l357
  5379                           
  5380                           ;newmain.c: 583:         enterFlag = 0;
  5381  1D1F  13DA               	bcf	_enterFlag/(0+8),_enterFlag& (0+7)	;volatile
  5382                           
  5383                           ;newmain.c: 584:         return 1;
  5384  1D20  3001               	movlw	1
  5385  1D21  0008               	return
  5386  1D22                     l357:	
  5387                           ;newmain.c: 585:     }
  5388                           
  5389                           
  5390                           ;newmain.c: 586:     if(RD3 == 0){
  5391  1D22  1988               	btfsc	8,3	;volatile
  5392  1D23  2D27               	goto	l2592
  5393                           
  5394                           ;newmain.c: 587:         enterFlag = 1;
  5395  1D24  17DA               	bsf	_enterFlag/(0+8),_enterFlag& (0+7)	;volatile
  5396                           
  5397                           ;newmain.c: 588:         skipCount = 0;
  5398  1D25  1683               	bsf	3,5	;RP0=1, select bank1
  5399  1D26  01B7               	clrf	_skipCount^(0+128)	;volatile
  5400  1D27                     l2592:
  5401                           
  5402                           ;newmain.c: 590:     return 0;
  5403  1D27  3000               	movlw	0
  5404  1D28  0008               	return
  5405  1D29                     __end_of_enterSwitch:
  5406                           
  5407                           	psect	text13
  5408  1DE8                     __ptext13:	
  5409 ;; *************** function _eeprom_write *****************
  5410 ;; Defined at:
  5411 ;;		line 6 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/pic/__eewrite.c"
  5412 ;; Parameters:    Size  Location     Type
  5413 ;;  addr            1    wreg     unsigned char 
  5414 ;;  value           1   10[BANK1 ] unsigned char 
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;  addr            1   12[BANK1 ] unsigned char 
  5417 ;; Return value:  Size  Location     Type
  5418 ;;                  1    wreg      void 
  5419 ;; Registers used:
  5420 ;;		wreg, status,2, status,0
  5421 ;; Tracked objects:
  5422 ;;		On entry : 300/100
  5423 ;;		On exit  : 300/300
  5424 ;;		Unchanged: 0/0
  5425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5426 ;;      Params:         0       0       1       0       0
  5427 ;;      Locals:         0       0       1       0       0
  5428 ;;      Temps:          0       0       1       0       0
  5429 ;;      Totals:         0       0       3       0       0
  5430 ;;Total ram usage:        3 bytes
  5431 ;; Hardware stack levels used: 1
  5432 ;; Hardware stack levels required when called: 2
  5433 ;; This function calls:
  5434 ;;		Nothing
  5435 ;; This function is called by:
  5436 ;;		_main
  5437 ;;		_editValues
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441                           
  5442                           ;psect for function _eeprom_write
  5443  1DE8                     _eeprom_write:
  5444                           
  5445                           ;incstack = 0
  5446                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  5447                           ;eeprom_write@addr stored from wreg
  5448  1DE8  00EC               	movwf	eeprom_write@addr^(0+128)
  5449  1DE9                     l524:	
  5450                           ;/Applications/microchip/xc8/v2.32/pic/sources/c90/pic/__eewrite.c: 6: eeprom_write(unsi
      +                          gned char addr, unsigned char value);/Applications/microchip/xc8/v2.32/pic/sources/c90/p
      +                          ic/__eewrite.c: 7: {;/Applications/microchip/xc8/v2.32/pic/sources/c90/pic/__eewrite.c: 
      +                          8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); EECON1 &= 
      +                          0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCONbits.GIE
      +                           = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EECON1bits.W
      +                          REN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  5451                           
  5452  1DE9  1703               	bsf	3,6	;RP1=1, select bank3
  5453  1DEA  188C               	btfsc	12,1	;volsfr
  5454  1DEB  2DE9               	goto	l524
  5455  1DEC  1303               	bcf	3,6	;RP1=0, select bank1
  5456  1DED  086C               	movf	eeprom_write@addr^(0+128),w
  5457  1DEE  1283               	bcf	3,5	;RP0=0, select bank2
  5458  1DEF  1703               	bsf	3,6	;RP1=1, select bank2
  5459  1DF0  008D               	movwf	13	;volatile
  5460  1DF1  1683               	bsf	3,5	;RP0=1, select bank1
  5461  1DF2  1303               	bcf	3,6	;RP1=0, select bank1
  5462  1DF3  086A               	movf	eeprom_write@value^(0+128),w
  5463  1DF4  1283               	bcf	3,5	;RP0=0, select bank2
  5464  1DF5  1703               	bsf	3,6	;RP1=1, select bank2
  5465  1DF6  008C               	movwf	12	;volatile
  5466  1DF7  303F               	movlw	63
  5467  1DF8  1683               	bsf	3,5	;RP0=1, select bank1
  5468  1DF9  1303               	bcf	3,6	;RP1=0, select bank1
  5469  1DFA  00EB               	movwf	??_eeprom_write^(0+128)
  5470  1DFB  086B               	movf	??_eeprom_write^(0+128),w
  5471  1DFC  1703               	bsf	3,6	;RP1=1, select bank3
  5472  1DFD  058C               	andwf	12,f	;volsfr
  5473  1DFE  1003               	bcf	3,0	;volatile
  5474  1DFF  1B8B               	btfsc	11,7	;volatile
  5475  1E00  1403               	bsf	3,0	;volatile
  5476  1E01  138B               	bcf	11,7	;volatile
  5477  1E02  150C               	bsf	12,2	;volsfr
  5478  1E03  3055               	movlw	85
  5479  1E04  008D               	movwf	13	;volsfr
  5480  1E05  30AA               	movlw	170
  5481  1E06  008D               	movwf	13	;volsfr
  5482  1E07  148C               	bsf	12,1	;volsfr
  5483  1E08  110C               	bcf	12,2	;volsfr
  5484  1E09  1C03               	btfss	3,0	;volatile
  5485  1E0A  0008               	return
  5486  1E0B  178B               	bsf	11,7	;volatile
  5487  1E0C  0008               	return
  5488  1E0D                     __end_of_eeprom_write:
  5489                           
  5490                           	psect	text14
  5491  1660                     __ptext14:	
  5492 ;; *************** function _editMenu *****************
  5493 ;; Defined at:
  5494 ;;		line 265 in file "newmain.c"
  5495 ;; Parameters:    Size  Location     Type
  5496 ;;		None
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;		None
  5499 ;; Return value:  Size  Location     Type
  5500 ;;                  1    wreg      void 
  5501 ;; Registers used:
  5502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5503 ;; Tracked objects:
  5504 ;;		On entry : 0/100
  5505 ;;		On exit  : 200/0
  5506 ;;		Unchanged: 0/0
  5507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5508 ;;      Params:         0       0       0       0       0
  5509 ;;      Locals:         0       0       0       0       0
  5510 ;;      Temps:          0       0       0       1       0
  5511 ;;      Totals:         0       0       0       1       0
  5512 ;;Total ram usage:        1 bytes
  5513 ;; Hardware stack levels used: 1
  5514 ;; Hardware stack levels required when called: 5
  5515 ;; This function calls:
  5516 ;;		_display1
  5517 ;;		_displayChange
  5518 ;;		_displayString
  5519 ;;		_menuSwitch
  5520 ;; This function is called by:
  5521 ;;		_main
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           
  5526                           ;psect for function _editMenu
  5527  1660                     _editMenu:
  5528                           
  5529                           ;newmain.c: 267:     if(editMenuPointer == 1){
  5530                           
  5531                           ;incstack = 0
  5532                           ; Regs used in _editMenu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5533  1660  1283               	bcf	3,5	;RP0=0, select bank0
  5534  1661  1303               	bcf	3,6	;RP1=0, select bank0
  5535  1662  035C               	decf	_editMenuPointer,w	;volatile
  5536  1663  1D03               	btfss	3,2
  5537  1664  2E9F               	goto	l3734
  5538                           
  5539                           ;newmain.c: 268:         if(editValue == 1){
  5540  1665  1683               	bsf	3,5	;RP0=1, select bank1
  5541  1666  033A               	decf	_editValue^(0+128),w	;volatile
  5542  1667  1D03               	btfss	3,2
  5543  1668  2E9D               	goto	l3732
  5544                           
  5545                           ;newmain.c: 269:             display1(actualClothLength);
  5546  1669  084F               	movf	(_actualClothLength+3)^(0+128),w	;volatile
  5547  166A  00ED               	movwf	(display1@value+3)^(0+128)
  5548  166B  084E               	movf	(_actualClothLength+2)^(0+128),w	;volatile
  5549  166C  00EC               	movwf	(display1@value+2)^(0+128)
  5550  166D  084D               	movf	(_actualClothLength+1)^(0+128),w	;volatile
  5551  166E  00EB               	movwf	(display1@value+1)^(0+128)
  5552  166F  084C               	movf	_actualClothLength^(0+128),w	;volatile
  5553  1670  00EA               	movwf	display1@value^(0+128)
  5554  1671  120A  118A  25DA  160A  118A  	fcall	_display1
  5555                           
  5556                           ;newmain.c: 270:             actualClothLength = displayChange(actualClothLength);
  5557  1676  1683               	bsf	3,5	;RP0=1, select bank1
  5558  1677  084F               	movf	(_actualClothLength+3)^(0+128),w	;volatile
  5559  1678  1703               	bsf	3,6	;RP1=1, select bank3
  5560  1679  0097               	movwf	(displayChange@value+3)^(0+384)
  5561  167A  1303               	bcf	3,6	;RP1=0, select bank1
  5562  167B  084E               	movf	(_actualClothLength+2)^(0+128),w	;volatile
  5563  167C  1703               	bsf	3,6	;RP1=1, select bank3
  5564  167D  0096               	movwf	(displayChange@value+2)^(0+384)
  5565  167E  1303               	bcf	3,6	;RP1=0, select bank1
  5566  167F  084D               	movf	(_actualClothLength+1)^(0+128),w	;volatile
  5567  1680  1703               	bsf	3,6	;RP1=1, select bank3
  5568  1681  0095               	movwf	(displayChange@value+1)^(0+384)
  5569  1682  1303               	bcf	3,6	;RP1=0, select bank1
  5570  1683  084C               	movf	_actualClothLength^(0+128),w	;volatile
  5571  1684  1703               	bsf	3,6	;RP1=1, select bank3
  5572  1685  0094               	movwf	displayChange@value^(0+384)
  5573  1686  160A  158A  26D8  160A  118A  	fcall	_displayChange
  5574  168B  1683               	bsf	3,5	;RP0=1, select bank3
  5575  168C  1703               	bsf	3,6	;RP1=1, select bank3
  5576  168D  0817               	movf	(?_displayChange+3)^(0+384),w
  5577  168E  1303               	bcf	3,6	;RP1=0, select bank1
  5578  168F  00CF               	movwf	(_actualClothLength+3)^(0+128)	;volatile
  5579  1690  1703               	bsf	3,6	;RP1=1, select bank3
  5580  1691  0816               	movf	(?_displayChange+2)^(0+384),w
  5581  1692  1303               	bcf	3,6	;RP1=0, select bank1
  5582  1693  00CE               	movwf	(_actualClothLength+2)^(0+128)	;volatile
  5583  1694  1703               	bsf	3,6	;RP1=1, select bank3
  5584  1695  0815               	movf	(?_displayChange+1)^(0+384),w
  5585  1696  1303               	bcf	3,6	;RP1=0, select bank1
  5586  1697  00CD               	movwf	(_actualClothLength+1)^(0+128)	;volatile
  5587  1698  1703               	bsf	3,6	;RP1=1, select bank3
  5588  1699  0814               	movf	?_displayChange^(0+384),w
  5589  169A  1303               	bcf	3,6	;RP1=0, select bank1
  5590  169B  00CC               	movwf	_actualClothLength^(0+128)	;volatile
  5591                           
  5592                           ;newmain.c: 271:         }
  5593  169C  2FC9               	goto	l3774
  5594  169D                     l3732:
  5595                           
  5596                           ;newmain.c: 273:             displayString("F Set");
  5597  169D  306C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  5598  169E  2FC4               	goto	L1
  5599  169F                     l3734:
  5600  169F  3002               	movlw	2
  5601  16A0  065C               	xorwf	_editMenuPointer,w	;volatile
  5602  16A1  1D03               	btfss	3,2
  5603  16A2  2EDE               	goto	l3744
  5604                           
  5605                           ;newmain.c: 277:         if(editValue == 2){
  5606  16A3  3002               	movlw	2
  5607  16A4  1683               	bsf	3,5	;RP0=1, select bank1
  5608  16A5  063A               	xorwf	_editValue^(0+128),w	;volatile
  5609  16A6  1D03               	btfss	3,2
  5610  16A7  2EDC               	goto	l3742
  5611                           
  5612                           ;newmain.c: 278:             display1(warningClothLength);
  5613  16A8  084B               	movf	(_warningClothLength+3)^(0+128),w	;volatile
  5614  16A9  00ED               	movwf	(display1@value+3)^(0+128)
  5615  16AA  084A               	movf	(_warningClothLength+2)^(0+128),w	;volatile
  5616  16AB  00EC               	movwf	(display1@value+2)^(0+128)
  5617  16AC  0849               	movf	(_warningClothLength+1)^(0+128),w	;volatile
  5618  16AD  00EB               	movwf	(display1@value+1)^(0+128)
  5619  16AE  0848               	movf	_warningClothLength^(0+128),w	;volatile
  5620  16AF  00EA               	movwf	display1@value^(0+128)
  5621  16B0  120A  118A  25DA  160A  118A  	fcall	_display1
  5622                           
  5623                           ;newmain.c: 279:             warningClothLength = displayChange(warningClothLength);
  5624  16B5  1683               	bsf	3,5	;RP0=1, select bank1
  5625  16B6  084B               	movf	(_warningClothLength+3)^(0+128),w	;volatile
  5626  16B7  1703               	bsf	3,6	;RP1=1, select bank3
  5627  16B8  0097               	movwf	(displayChange@value+3)^(0+384)
  5628  16B9  1303               	bcf	3,6	;RP1=0, select bank1
  5629  16BA  084A               	movf	(_warningClothLength+2)^(0+128),w	;volatile
  5630  16BB  1703               	bsf	3,6	;RP1=1, select bank3
  5631  16BC  0096               	movwf	(displayChange@value+2)^(0+384)
  5632  16BD  1303               	bcf	3,6	;RP1=0, select bank1
  5633  16BE  0849               	movf	(_warningClothLength+1)^(0+128),w	;volatile
  5634  16BF  1703               	bsf	3,6	;RP1=1, select bank3
  5635  16C0  0095               	movwf	(displayChange@value+1)^(0+384)
  5636  16C1  1303               	bcf	3,6	;RP1=0, select bank1
  5637  16C2  0848               	movf	_warningClothLength^(0+128),w	;volatile
  5638  16C3  1703               	bsf	3,6	;RP1=1, select bank3
  5639  16C4  0094               	movwf	displayChange@value^(0+384)
  5640  16C5  160A  158A  26D8  160A  118A  	fcall	_displayChange
  5641  16CA  1683               	bsf	3,5	;RP0=1, select bank3
  5642  16CB  1703               	bsf	3,6	;RP1=1, select bank3
  5643  16CC  0817               	movf	(?_displayChange+3)^(0+384),w
  5644  16CD  1303               	bcf	3,6	;RP1=0, select bank1
  5645  16CE  00CB               	movwf	(_warningClothLength+3)^(0+128)	;volatile
  5646  16CF  1703               	bsf	3,6	;RP1=1, select bank3
  5647  16D0  0816               	movf	(?_displayChange+2)^(0+384),w
  5648  16D1  1303               	bcf	3,6	;RP1=0, select bank1
  5649  16D2  00CA               	movwf	(_warningClothLength+2)^(0+128)	;volatile
  5650  16D3  1703               	bsf	3,6	;RP1=1, select bank3
  5651  16D4  0815               	movf	(?_displayChange+1)^(0+384),w
  5652  16D5  1303               	bcf	3,6	;RP1=0, select bank1
  5653  16D6  00C9               	movwf	(_warningClothLength+1)^(0+128)	;volatile
  5654  16D7  1703               	bsf	3,6	;RP1=1, select bank3
  5655  16D8  0814               	movf	?_displayChange^(0+384),w
  5656  16D9  1303               	bcf	3,6	;RP1=0, select bank1
  5657  16DA  00C8               	movwf	_warningClothLength^(0+128)	;volatile
  5658                           
  5659                           ;newmain.c: 280:         }
  5660  16DB  2FC9               	goto	l3774
  5661  16DC                     l3742:
  5662                           
  5663                           ;newmain.c: 282:             displayString("P Set");
  5664  16DC  3072               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  5665  16DD  2FC4               	goto	L1
  5666  16DE                     l3744:
  5667  16DE  3003               	movlw	3
  5668  16DF  065C               	xorwf	_editMenuPointer,w	;volatile
  5669  16E0  1D03               	btfss	3,2
  5670  16E1  2F1D               	goto	l3754
  5671                           
  5672                           ;newmain.c: 286:         if(editValue == 3){
  5673  16E2  3003               	movlw	3
  5674  16E3  1683               	bsf	3,5	;RP0=1, select bank1
  5675  16E4  063A               	xorwf	_editValue^(0+128),w	;volatile
  5676  16E5  1D03               	btfss	3,2
  5677  16E6  2F1B               	goto	l3752
  5678                           
  5679                           ;newmain.c: 287:             display1(password);
  5680  16E7  082F               	movf	(_password+3)^(0+128),w	;volatile
  5681  16E8  00ED               	movwf	(display1@value+3)^(0+128)
  5682  16E9  082E               	movf	(_password+2)^(0+128),w	;volatile
  5683  16EA  00EC               	movwf	(display1@value+2)^(0+128)
  5684  16EB  082D               	movf	(_password+1)^(0+128),w	;volatile
  5685  16EC  00EB               	movwf	(display1@value+1)^(0+128)
  5686  16ED  082C               	movf	_password^(0+128),w	;volatile
  5687  16EE  00EA               	movwf	display1@value^(0+128)
  5688  16EF  120A  118A  25DA  160A  118A  	fcall	_display1
  5689                           
  5690                           ;newmain.c: 288:             password = displayChange(password);
  5691  16F4  1683               	bsf	3,5	;RP0=1, select bank1
  5692  16F5  082F               	movf	(_password+3)^(0+128),w	;volatile
  5693  16F6  1703               	bsf	3,6	;RP1=1, select bank3
  5694  16F7  0097               	movwf	(displayChange@value+3)^(0+384)
  5695  16F8  1303               	bcf	3,6	;RP1=0, select bank1
  5696  16F9  082E               	movf	(_password+2)^(0+128),w	;volatile
  5697  16FA  1703               	bsf	3,6	;RP1=1, select bank3
  5698  16FB  0096               	movwf	(displayChange@value+2)^(0+384)
  5699  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  5700  16FD  082D               	movf	(_password+1)^(0+128),w	;volatile
  5701  16FE  1703               	bsf	3,6	;RP1=1, select bank3
  5702  16FF  0095               	movwf	(displayChange@value+1)^(0+384)
  5703  1700  1303               	bcf	3,6	;RP1=0, select bank1
  5704  1701  082C               	movf	_password^(0+128),w	;volatile
  5705  1702  1703               	bsf	3,6	;RP1=1, select bank3
  5706  1703  0094               	movwf	displayChange@value^(0+384)
  5707  1704  160A  158A  26D8  160A  118A  	fcall	_displayChange
  5708  1709  1683               	bsf	3,5	;RP0=1, select bank3
  5709  170A  1703               	bsf	3,6	;RP1=1, select bank3
  5710  170B  0817               	movf	(?_displayChange+3)^(0+384),w
  5711  170C  1303               	bcf	3,6	;RP1=0, select bank1
  5712  170D  00AF               	movwf	(_password+3)^(0+128)	;volatile
  5713  170E  1703               	bsf	3,6	;RP1=1, select bank3
  5714  170F  0816               	movf	(?_displayChange+2)^(0+384),w
  5715  1710  1303               	bcf	3,6	;RP1=0, select bank1
  5716  1711  00AE               	movwf	(_password+2)^(0+128)	;volatile
  5717  1712  1703               	bsf	3,6	;RP1=1, select bank3
  5718  1713  0815               	movf	(?_displayChange+1)^(0+384),w
  5719  1714  1303               	bcf	3,6	;RP1=0, select bank1
  5720  1715  00AD               	movwf	(_password+1)^(0+128)	;volatile
  5721  1716  1703               	bsf	3,6	;RP1=1, select bank3
  5722  1717  0814               	movf	?_displayChange^(0+384),w
  5723  1718  1303               	bcf	3,6	;RP1=0, select bank1
  5724  1719  00AC               	movwf	_password^(0+128)	;volatile
  5725                           
  5726                           ;newmain.c: 289:         }
  5727  171A  2FC9               	goto	l3774
  5728  171B                     l3752:
  5729                           
  5730                           ;newmain.c: 291:             displayString("PASS ");
  5731  171B  3060               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  5732  171C  2FC4               	goto	L1
  5733  171D                     l3754:
  5734  171D  3004               	movlw	4
  5735  171E  065C               	xorwf	_editMenuPointer,w	;volatile
  5736  171F  1D03               	btfss	3,2
  5737  1720  2F71               	goto	l3764
  5738                           
  5739                           ;newmain.c: 295:         if(editValue == 4){
  5740  1721  3004               	movlw	4
  5741  1722  1683               	bsf	3,5	;RP0=1, select bank1
  5742  1723  063A               	xorwf	_editValue^(0+128),w	;volatile
  5743  1724  1D03               	btfss	3,2
  5744  1725  2F6F               	goto	l3762
  5745                           
  5746                           ;newmain.c: 296:             display1(circumference);
  5747  1726  1283               	bcf	3,5	;RP0=0, select bank0
  5748  1727  0859               	movf	_circumference+3,w	;volatile
  5749  1728  1683               	bsf	3,5	;RP0=1, select bank1
  5750  1729  00ED               	movwf	(display1@value+3)^(0+128)
  5751  172A  1283               	bcf	3,5	;RP0=0, select bank0
  5752  172B  0858               	movf	_circumference+2,w	;volatile
  5753  172C  1683               	bsf	3,5	;RP0=1, select bank1
  5754  172D  00EC               	movwf	(display1@value+2)^(0+128)
  5755  172E  1283               	bcf	3,5	;RP0=0, select bank0
  5756  172F  0857               	movf	_circumference+1,w	;volatile
  5757  1730  1683               	bsf	3,5	;RP0=1, select bank1
  5758  1731  00EB               	movwf	(display1@value+1)^(0+128)
  5759  1732  1283               	bcf	3,5	;RP0=0, select bank0
  5760  1733  0856               	movf	_circumference,w	;volatile
  5761  1734  1683               	bsf	3,5	;RP0=1, select bank1
  5762  1735  00EA               	movwf	display1@value^(0+128)
  5763  1736  120A  118A  25DA  160A  118A  	fcall	_display1
  5764                           
  5765                           ;newmain.c: 297:             circumference = displayChange(circumference);
  5766  173B  0859               	movf	_circumference+3,w	;volatile
  5767  173C  1683               	bsf	3,5	;RP0=1, select bank3
  5768  173D  1703               	bsf	3,6	;RP1=1, select bank3
  5769  173E  0097               	movwf	(displayChange@value+3)^(0+384)
  5770  173F  1283               	bcf	3,5	;RP0=0, select bank0
  5771  1740  1303               	bcf	3,6	;RP1=0, select bank0
  5772  1741  0858               	movf	_circumference+2,w	;volatile
  5773  1742  1683               	bsf	3,5	;RP0=1, select bank3
  5774  1743  1703               	bsf	3,6	;RP1=1, select bank3
  5775  1744  0096               	movwf	(displayChange@value+2)^(0+384)
  5776  1745  1283               	bcf	3,5	;RP0=0, select bank0
  5777  1746  1303               	bcf	3,6	;RP1=0, select bank0
  5778  1747  0857               	movf	_circumference+1,w	;volatile
  5779  1748  1683               	bsf	3,5	;RP0=1, select bank3
  5780  1749  1703               	bsf	3,6	;RP1=1, select bank3
  5781  174A  0095               	movwf	(displayChange@value+1)^(0+384)
  5782  174B  1283               	bcf	3,5	;RP0=0, select bank0
  5783  174C  1303               	bcf	3,6	;RP1=0, select bank0
  5784  174D  0856               	movf	_circumference,w	;volatile
  5785  174E  1683               	bsf	3,5	;RP0=1, select bank3
  5786  174F  1703               	bsf	3,6	;RP1=1, select bank3
  5787  1750  0094               	movwf	displayChange@value^(0+384)
  5788  1751  160A  158A  26D8  160A  118A  	fcall	_displayChange
  5789  1756  1683               	bsf	3,5	;RP0=1, select bank3
  5790  1757  1703               	bsf	3,6	;RP1=1, select bank3
  5791  1758  0817               	movf	(?_displayChange+3)^(0+384),w
  5792  1759  1283               	bcf	3,5	;RP0=0, select bank0
  5793  175A  1303               	bcf	3,6	;RP1=0, select bank0
  5794  175B  00D9               	movwf	_circumference+3	;volatile
  5795  175C  1683               	bsf	3,5	;RP0=1, select bank3
  5796  175D  1703               	bsf	3,6	;RP1=1, select bank3
  5797  175E  0816               	movf	(?_displayChange+2)^(0+384),w
  5798  175F  1283               	bcf	3,5	;RP0=0, select bank0
  5799  1760  1303               	bcf	3,6	;RP1=0, select bank0
  5800  1761  00D8               	movwf	_circumference+2	;volatile
  5801  1762  1683               	bsf	3,5	;RP0=1, select bank3
  5802  1763  1703               	bsf	3,6	;RP1=1, select bank3
  5803  1764  0815               	movf	(?_displayChange+1)^(0+384),w
  5804  1765  1283               	bcf	3,5	;RP0=0, select bank0
  5805  1766  1303               	bcf	3,6	;RP1=0, select bank0
  5806  1767  00D7               	movwf	_circumference+1	;volatile
  5807  1768  1683               	bsf	3,5	;RP0=1, select bank3
  5808  1769  1703               	bsf	3,6	;RP1=1, select bank3
  5809  176A  0814               	movf	?_displayChange^(0+384),w
  5810  176B  1283               	bcf	3,5	;RP0=0, select bank0
  5811  176C  1303               	bcf	3,6	;RP1=0, select bank0
  5812  176D  00D6               	movwf	_circumference	;volatile
  5813                           
  5814                           ;newmain.c: 298:         }
  5815  176E  2FC9               	goto	l3774
  5816  176F                     l3762:
  5817                           
  5818                           ;newmain.c: 300:             displayString("Circu");
  5819  176F  3078               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  5820  1770  2FC4               	goto	L1
  5821  1771                     l3764:
  5822  1771  3005               	movlw	5
  5823  1772  065C               	xorwf	_editMenuPointer,w	;volatile
  5824  1773  1D03               	btfss	3,2
  5825  1774  2FC9               	goto	l3774
  5826                           
  5827                           ;newmain.c: 304:         if(editValue == 5){
  5828  1775  3005               	movlw	5
  5829  1776  1683               	bsf	3,5	;RP0=1, select bank1
  5830  1777  063A               	xorwf	_editValue^(0+128),w	;volatile
  5831  1778  1D03               	btfss	3,2
  5832  1779  2FC3               	goto	l3772
  5833                           
  5834                           ;newmain.c: 305:             display1(pulse);
  5835  177A  1283               	bcf	3,5	;RP0=0, select bank0
  5836  177B  0851               	movf	_pulse+3,w	;volatile
  5837  177C  1683               	bsf	3,5	;RP0=1, select bank1
  5838  177D  00ED               	movwf	(display1@value+3)^(0+128)
  5839  177E  1283               	bcf	3,5	;RP0=0, select bank0
  5840  177F  0850               	movf	_pulse+2,w	;volatile
  5841  1780  1683               	bsf	3,5	;RP0=1, select bank1
  5842  1781  00EC               	movwf	(display1@value+2)^(0+128)
  5843  1782  1283               	bcf	3,5	;RP0=0, select bank0
  5844  1783  084F               	movf	_pulse+1,w	;volatile
  5845  1784  1683               	bsf	3,5	;RP0=1, select bank1
  5846  1785  00EB               	movwf	(display1@value+1)^(0+128)
  5847  1786  1283               	bcf	3,5	;RP0=0, select bank0
  5848  1787  084E               	movf	_pulse,w	;volatile
  5849  1788  1683               	bsf	3,5	;RP0=1, select bank1
  5850  1789  00EA               	movwf	display1@value^(0+128)
  5851  178A  120A  118A  25DA  160A  118A  	fcall	_display1
  5852                           
  5853                           ;newmain.c: 306:             pulse = displayChange(pulse);
  5854  178F  0851               	movf	_pulse+3,w	;volatile
  5855  1790  1683               	bsf	3,5	;RP0=1, select bank3
  5856  1791  1703               	bsf	3,6	;RP1=1, select bank3
  5857  1792  0097               	movwf	(displayChange@value+3)^(0+384)
  5858  1793  1283               	bcf	3,5	;RP0=0, select bank0
  5859  1794  1303               	bcf	3,6	;RP1=0, select bank0
  5860  1795  0850               	movf	_pulse+2,w	;volatile
  5861  1796  1683               	bsf	3,5	;RP0=1, select bank3
  5862  1797  1703               	bsf	3,6	;RP1=1, select bank3
  5863  1798  0096               	movwf	(displayChange@value+2)^(0+384)
  5864  1799  1283               	bcf	3,5	;RP0=0, select bank0
  5865  179A  1303               	bcf	3,6	;RP1=0, select bank0
  5866  179B  084F               	movf	_pulse+1,w	;volatile
  5867  179C  1683               	bsf	3,5	;RP0=1, select bank3
  5868  179D  1703               	bsf	3,6	;RP1=1, select bank3
  5869  179E  0095               	movwf	(displayChange@value+1)^(0+384)
  5870  179F  1283               	bcf	3,5	;RP0=0, select bank0
  5871  17A0  1303               	bcf	3,6	;RP1=0, select bank0
  5872  17A1  084E               	movf	_pulse,w	;volatile
  5873  17A2  1683               	bsf	3,5	;RP0=1, select bank3
  5874  17A3  1703               	bsf	3,6	;RP1=1, select bank3
  5875  17A4  0094               	movwf	displayChange@value^(0+384)
  5876  17A5  160A  158A  26D8  160A  118A  	fcall	_displayChange
  5877  17AA  1683               	bsf	3,5	;RP0=1, select bank3
  5878  17AB  1703               	bsf	3,6	;RP1=1, select bank3
  5879  17AC  0817               	movf	(?_displayChange+3)^(0+384),w
  5880  17AD  1283               	bcf	3,5	;RP0=0, select bank0
  5881  17AE  1303               	bcf	3,6	;RP1=0, select bank0
  5882  17AF  00D1               	movwf	_pulse+3	;volatile
  5883  17B0  1683               	bsf	3,5	;RP0=1, select bank3
  5884  17B1  1703               	bsf	3,6	;RP1=1, select bank3
  5885  17B2  0816               	movf	(?_displayChange+2)^(0+384),w
  5886  17B3  1283               	bcf	3,5	;RP0=0, select bank0
  5887  17B4  1303               	bcf	3,6	;RP1=0, select bank0
  5888  17B5  00D0               	movwf	_pulse+2	;volatile
  5889  17B6  1683               	bsf	3,5	;RP0=1, select bank3
  5890  17B7  1703               	bsf	3,6	;RP1=1, select bank3
  5891  17B8  0815               	movf	(?_displayChange+1)^(0+384),w
  5892  17B9  1283               	bcf	3,5	;RP0=0, select bank0
  5893  17BA  1303               	bcf	3,6	;RP1=0, select bank0
  5894  17BB  00CF               	movwf	_pulse+1	;volatile
  5895  17BC  1683               	bsf	3,5	;RP0=1, select bank3
  5896  17BD  1703               	bsf	3,6	;RP1=1, select bank3
  5897  17BE  0814               	movf	?_displayChange^(0+384),w
  5898  17BF  1283               	bcf	3,5	;RP0=0, select bank0
  5899  17C0  1303               	bcf	3,6	;RP1=0, select bank0
  5900  17C1  00CE               	movwf	_pulse	;volatile
  5901                           
  5902                           ;newmain.c: 307:         }
  5903  17C2  2FC9               	goto	l3774
  5904  17C3                     l3772:
  5905                           
  5906                           ;newmain.c: 309:             displayString("PuLSe");
  5907  17C3  3066               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  5908  17C4                     L1:
  5909  17C4  160A  118A  235F  160A  118A  	fcall	_displayString
  5910  17C9                     l3774:
  5911                           
  5912                           ;newmain.c: 313:     if(menuSwitch() == 1 && editValue == 0){
  5913  17C9  160A  158A  2546  160A  118A  	fcall	_menuSwitch
  5914  17CE  3A01               	xorlw	1
  5915  17CF  1D03               	skipz
  5916  17D0  2FF0               	goto	l3788
  5917  17D1  1683               	bsf	3,5	;RP0=1, select bank1
  5918  17D2  083A               	movf	_editValue^(0+128),w	;volatile
  5919  17D3  1D03               	btfss	3,2
  5920  17D4  2FF0               	goto	l3788
  5921                           
  5922                           ;newmain.c: 314:         if(editMenuPointer != 3){
  5923  17D5  3003               	movlw	3
  5924  17D6  1283               	bcf	3,5	;RP0=0, select bank0
  5925  17D7  065C               	xorwf	_editMenuPointer,w	;volatile
  5926  17D8  1903               	btfsc	3,2
  5927  17D9  2FE3               	goto	l3782
  5928  17DA                     l3780:
  5929                           
  5930                           ;newmain.c: 315:             editMenuPointer += 1;
  5931  17DA  3001               	movlw	1
  5932  17DB  1683               	bsf	3,5	;RP0=1, select bank3
  5933  17DC  1703               	bsf	3,6	;RP1=1, select bank3
  5934  17DD  0098               	movwf	??_editMenu^(0+384)
  5935  17DE  0818               	movf	??_editMenu^(0+384),w
  5936  17DF  1283               	bcf	3,5	;RP0=0, select bank0
  5937  17E0  1303               	bcf	3,6	;RP1=0, select bank0
  5938  17E1  07DC               	addwf	_editMenuPointer,f	;volatile
  5939                           
  5940                           ;newmain.c: 316:         }
  5941  17E2  2FF0               	goto	l3788
  5942  17E3                     l3782:
  5943  17E3  3094               	movlw	148
  5944  17E4  1683               	bsf	3,5	;RP0=1, select bank1
  5945  17E5  062C               	xorwf	_password^(0+128),w	;volatile
  5946  17E6  3026               	movlw	38
  5947  17E7  1903               	skipnz
  5948  17E8  062D               	xorwf	(_password+1)^(0+128),w	;volatile
  5949  17E9  042E               	iorwf	(_password+2)^(0+128),w	;volatile
  5950  17EA  042F               	iorwf	(_password+3)^(0+128),w	;volatile
  5951  17EB  1903               	btfsc	3,2
  5952  17EC  2FDA               	goto	l3780
  5953                           
  5954                           ;newmain.c: 321:             editMenuPointer = 0;
  5955  17ED  1283               	bcf	3,5	;RP0=0, select bank0
  5956  17EE  1303               	bcf	3,6	;RP1=0, select bank0
  5957  17EF  01DC               	clrf	_editMenuPointer	;volatile
  5958  17F0                     l3788:
  5959                           
  5960                           ;newmain.c: 324:     if(editMenuPointer == 6){
  5961  17F0  3006               	movlw	6
  5962  17F1  1283               	bcf	3,5	;RP0=0, select bank0
  5963  17F2  065C               	xorwf	_editMenuPointer,w	;volatile
  5964  17F3  1D03               	btfss	3,2
  5965  17F4  0008               	return
  5966                           
  5967                           ;newmain.c: 325:         editMenuPointer = 0;
  5968  17F5  01DC               	clrf	_editMenuPointer	;volatile
  5969                           
  5970                           ;newmain.c: 326:         password = 0;
  5971  17F6  3000               	movlw	0
  5972  17F7  1683               	bsf	3,5	;RP0=1, select bank1
  5973  17F8  00AF               	movwf	(_password+3)^(0+128)	;volatile
  5974  17F9  3000               	movlw	0
  5975  17FA  00AE               	movwf	(_password+2)^(0+128)	;volatile
  5976  17FB  3000               	movlw	0
  5977  17FC  00AD               	movwf	(_password+1)^(0+128)	;volatile
  5978  17FD  3000               	movlw	0
  5979  17FE  00AC               	movwf	_password^(0+128)	;volatile
  5980  17FF  0008               	return
  5981  1800                     __end_of_editMenu:
  5982                           
  5983                           	psect	text15
  5984  1D46                     __ptext15:	
  5985 ;; *************** function _menuSwitch *****************
  5986 ;; Defined at:
  5987 ;;		line 619 in file "newmain.c"
  5988 ;; Parameters:    Size  Location     Type
  5989 ;;		None
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;		None
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  1    wreg      unsigned char 
  5994 ;; Registers used:
  5995 ;;		wreg, status,2
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/100
  5998 ;;		On exit  : 200/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6001 ;;      Params:         0       0       0       0       0
  6002 ;;      Locals:         0       0       0       0       0
  6003 ;;      Temps:          0       0       0       0       0
  6004 ;;      Totals:         0       0       0       0       0
  6005 ;;Total ram usage:        0 bytes
  6006 ;; Hardware stack levels used: 1
  6007 ;; Hardware stack levels required when called: 2
  6008 ;; This function calls:
  6009 ;;		Nothing
  6010 ;; This function is called by:
  6011 ;;		_editMenu
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           
  6016                           ;psect for function _menuSwitch
  6017  1D46                     _menuSwitch:
  6018                           
  6019                           ;newmain.c: 621:     if(RA4 == 1 && menuFlag == 1){
  6020                           
  6021                           ;incstack = 0
  6022                           ; Regs used in _menuSwitch: [wreg+status,2]
  6023  1D46  1283               	bcf	3,5	;RP0=0, select bank0
  6024  1D47  1303               	bcf	3,6	;RP1=0, select bank0
  6025  1D48  1A05               	btfsc	5,4	;volatile
  6026  1D49  1F5A               	btfss	_menuFlag/(0+8),_menuFlag& (0+7)	;volatile
  6027  1D4A  2D4E               	goto	l372
  6028                           
  6029                           ;newmain.c: 622:         menuFlag = 0;
  6030  1D4B  135A               	bcf	_menuFlag/(0+8),_menuFlag& (0+7)	;volatile
  6031                           
  6032                           ;newmain.c: 623:         return 1;
  6033  1D4C  3001               	movlw	1
  6034  1D4D  0008               	return
  6035  1D4E                     l372:	
  6036                           ;newmain.c: 624:     }
  6037                           
  6038                           
  6039                           ;newmain.c: 625:     if(RA4 == 0){
  6040  1D4E  1A05               	btfsc	5,4	;volatile
  6041  1D4F  2D53               	goto	l2574
  6042                           
  6043                           ;newmain.c: 626:         menuFlag = 1;
  6044  1D50  175A               	bsf	_menuFlag/(0+8),_menuFlag& (0+7)	;volatile
  6045                           
  6046                           ;newmain.c: 627:         skipCount = 0;
  6047  1D51  1683               	bsf	3,5	;RP0=1, select bank1
  6048  1D52  01B7               	clrf	_skipCount^(0+128)	;volatile
  6049  1D53                     l2574:
  6050                           
  6051                           ;newmain.c: 629:     return 0;
  6052  1D53  3000               	movlw	0
  6053  1D54  0008               	return
  6054  1D55                     __end_of_menuSwitch:
  6055                           
  6056                           	psect	text16
  6057  135F                     __ptext16:	
  6058 ;; *************** function _displayString *****************
  6059 ;; Defined at:
  6060 ;;		line 541 in file "newmain.c"
  6061 ;; Parameters:    Size  Location     Type
  6062 ;;  string          1    wreg     PTR const unsigned char 
  6063 ;;		 -> STR_5(6), STR_4(6), STR_3(6), STR_2(6), 
  6064 ;;		 -> STR_1(6), 
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;  string          1   22[BANK0 ] PTR const unsigned char 
  6067 ;;		 -> STR_5(6), STR_4(6), STR_3(6), STR_2(6), 
  6068 ;;		 -> STR_1(6), 
  6069 ;; Return value:  Size  Location     Type
  6070 ;;                  1    wreg      void 
  6071 ;; Registers used:
  6072 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6073 ;; Tracked objects:
  6074 ;;		On entry : 300/100
  6075 ;;		On exit  : 0/0
  6076 ;;		Unchanged: 0/0
  6077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6078 ;;      Params:         0       0       0       0       0
  6079 ;;      Locals:         0       1       0       0       0
  6080 ;;      Temps:          0       2       0       0       0
  6081 ;;      Totals:         0       3       0       0       0
  6082 ;;Total ram usage:        3 bytes
  6083 ;; Hardware stack levels used: 1
  6084 ;; Hardware stack levels required when called: 3
  6085 ;; This function calls:
  6086 ;;		_dataPass
  6087 ;; This function is called by:
  6088 ;;		_editMenu
  6089 ;; This function uses a non-reentrant model
  6090 ;;
  6091                           
  6092                           
  6093                           ;psect for function _displayString
  6094  135F                     _displayString:
  6095                           
  6096                           ;incstack = 0
  6097                           ; Regs used in _displayString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6098                           ;displayString@string stored from wreg
  6099  135F  1283               	bcf	3,5	;RP0=0, select bank0
  6100  1360  00B6               	movwf	displayString@string
  6101                           
  6102                           ;newmain.c: 542:     dataPass(FONT_DEFAULT[string[0]-32]);
  6103  1361  0836               	movf	displayString@string,w
  6104  1362  0084               	movwf	4
  6105  1363  160A  118A  2000  160A  118A  	fcall	stringdir
  6106  1368  3EE1               	addlw	low (((_FONT_DEFAULT-__stringbase)| (0+32768)+224))
  6107  1369  0084               	movwf	4
  6108  136A  160A  118A  2000  160A  118A  	fcall	stringdir
  6109  136F  160A  158A  25A1  160A  118A  	fcall	_dataPass
  6110                           
  6111                           ;newmain.c: 543:     RA2 = 0;
  6112  1374  1105               	bcf	5,2	;volatile
  6113                           
  6114                           ;newmain.c: 544:     RA0 = 0;
  6115  1375  1005               	bcf	5,0	;volatile
  6116                           
  6117                           ;newmain.c: 545:     RA1 = 1;
  6118  1376  1485               	bsf	5,1	;volatile
  6119                           
  6120                           ;newmain.c: 546:     RA3 = 1;
  6121  1377  1585               	bsf	5,3	;volatile
  6122                           
  6123                           ;newmain.c: 547:     _delay((unsigned long)((1)*(20000000/4000.0)));
  6124  1378  3007               	movlw	7
  6125  1379  1283               	bcf	3,5	;RP0=0, select bank0
  6126  137A  1303               	bcf	3,6	;RP1=0, select bank0
  6127  137B  00B5               	movwf	??_displayString+1
  6128  137C  307C               	movlw	124
  6129  137D  00B4               	movwf	??_displayString
  6130  137E                     u6207:
  6131  137E  0BB4               	decfsz	??_displayString,f
  6132  137F  2B7E               	goto	u6207
  6133  1380  0BB5               	decfsz	??_displayString+1,f
  6134  1381  2B7E               	goto	u6207
  6135  1382  0000               	nop
  6136                           
  6137                           ;newmain.c: 549:     dataPass(FONT_DEFAULT[string[1]-32]);
  6138  1383  1283               	bcf	3,5	;RP0=0, select bank0
  6139  1384  1303               	bcf	3,6	;RP1=0, select bank0
  6140  1385  0836               	movf	displayString@string,w
  6141  1386  3E01               	addlw	1
  6142  1387  0084               	movwf	4
  6143  1388  160A  118A  2000  160A  118A  	fcall	stringdir
  6144  138D  3EE1               	addlw	low (((_FONT_DEFAULT-__stringbase)| (0+32768)+224))
  6145  138E  0084               	movwf	4
  6146  138F  160A  118A  2000  160A  118A  	fcall	stringdir
  6147  1394  160A  158A  25A1  160A  118A  	fcall	_dataPass
  6148                           
  6149                           ;newmain.c: 550:     RA2 = 0;
  6150  1399  1105               	bcf	5,2	;volatile
  6151                           
  6152                           ;newmain.c: 551:     RA0 = 0;
  6153  139A  1005               	bcf	5,0	;volatile
  6154                           
  6155                           ;newmain.c: 552:     RA1 = 1;
  6156  139B  1485               	bsf	5,1	;volatile
  6157                           
  6158                           ;newmain.c: 553:     RA3 = 0;
  6159  139C  1185               	bcf	5,3	;volatile
  6160                           
  6161                           ;newmain.c: 554:     _delay((unsigned long)((1)*(20000000/4000.0)));
  6162  139D  3007               	movlw	7
  6163  139E  1283               	bcf	3,5	;RP0=0, select bank0
  6164  139F  1303               	bcf	3,6	;RP1=0, select bank0
  6165  13A0  00B5               	movwf	??_displayString+1
  6166  13A1  307C               	movlw	124
  6167  13A2  00B4               	movwf	??_displayString
  6168  13A3                     u6217:
  6169  13A3  0BB4               	decfsz	??_displayString,f
  6170  13A4  2BA3               	goto	u6217
  6171  13A5  0BB5               	decfsz	??_displayString+1,f
  6172  13A6  2BA3               	goto	u6217
  6173  13A7  0000               	nop
  6174                           
  6175                           ;newmain.c: 556:     dataPass(FONT_DEFAULT[string[2]-32]);
  6176  13A8  1283               	bcf	3,5	;RP0=0, select bank0
  6177  13A9  1303               	bcf	3,6	;RP1=0, select bank0
  6178  13AA  0836               	movf	displayString@string,w
  6179  13AB  3E02               	addlw	2
  6180  13AC  0084               	movwf	4
  6181  13AD  160A  118A  2000  160A  118A  	fcall	stringdir
  6182  13B2  3EE1               	addlw	low (((_FONT_DEFAULT-__stringbase)| (0+32768)+224))
  6183  13B3  0084               	movwf	4
  6184  13B4  160A  118A  2000  160A  118A  	fcall	stringdir
  6185  13B9  160A  158A  25A1  160A  118A  	fcall	_dataPass
  6186                           
  6187                           ;newmain.c: 557:     RA2 = 0;
  6188  13BE  1105               	bcf	5,2	;volatile
  6189                           
  6190                           ;newmain.c: 558:     RA0 = 0;
  6191  13BF  1005               	bcf	5,0	;volatile
  6192                           
  6193                           ;newmain.c: 559:     RA1 = 0;
  6194  13C0  1085               	bcf	5,1	;volatile
  6195                           
  6196                           ;newmain.c: 560:     RA3 = 1;
  6197  13C1  1585               	bsf	5,3	;volatile
  6198                           
  6199                           ;newmain.c: 561:     _delay((unsigned long)((1)*(20000000/4000.0)));
  6200  13C2  3007               	movlw	7
  6201  13C3  1283               	bcf	3,5	;RP0=0, select bank0
  6202  13C4  1303               	bcf	3,6	;RP1=0, select bank0
  6203  13C5  00B5               	movwf	??_displayString+1
  6204  13C6  307C               	movlw	124
  6205  13C7  00B4               	movwf	??_displayString
  6206  13C8                     u6227:
  6207  13C8  0BB4               	decfsz	??_displayString,f
  6208  13C9  2BC8               	goto	u6227
  6209  13CA  0BB5               	decfsz	??_displayString+1,f
  6210  13CB  2BC8               	goto	u6227
  6211  13CC  0000               	nop
  6212                           
  6213                           ;newmain.c: 564:     dataPass(FONT_DEFAULT[string[3]-32]);
  6214  13CD  1283               	bcf	3,5	;RP0=0, select bank0
  6215  13CE  1303               	bcf	3,6	;RP1=0, select bank0
  6216  13CF  0836               	movf	displayString@string,w
  6217  13D0  3E03               	addlw	3
  6218  13D1  0084               	movwf	4
  6219  13D2  160A  118A  2000  160A  118A  	fcall	stringdir
  6220  13D7  3EE1               	addlw	low (((_FONT_DEFAULT-__stringbase)| (0+32768)+224))
  6221  13D8  0084               	movwf	4
  6222  13D9  160A  118A  2000  160A  118A  	fcall	stringdir
  6223  13DE  160A  158A  25A1  160A  118A  	fcall	_dataPass
  6224                           
  6225                           ;newmain.c: 565:     RA2 = 0;
  6226  13E3  1105               	bcf	5,2	;volatile
  6227                           
  6228                           ;newmain.c: 566:     RA0 = 0;
  6229  13E4  1005               	bcf	5,0	;volatile
  6230                           
  6231                           ;newmain.c: 567:     RA1 = 0;
  6232  13E5  1085               	bcf	5,1	;volatile
  6233                           
  6234                           ;newmain.c: 568:     RA3 = 0;
  6235  13E6  1185               	bcf	5,3	;volatile
  6236                           
  6237                           ;newmain.c: 569:     _delay((unsigned long)((1)*(20000000/4000.0)));
  6238  13E7  3007               	movlw	7
  6239  13E8  1283               	bcf	3,5	;RP0=0, select bank0
  6240  13E9  1303               	bcf	3,6	;RP1=0, select bank0
  6241  13EA  00B5               	movwf	??_displayString+1
  6242  13EB  307C               	movlw	124
  6243  13EC  00B4               	movwf	??_displayString
  6244  13ED                     u6237:
  6245  13ED  0BB4               	decfsz	??_displayString,f
  6246  13EE  2BED               	goto	u6237
  6247  13EF  0BB5               	decfsz	??_displayString+1,f
  6248  13F0  2BED               	goto	u6237
  6249  13F1  0000               	nop
  6250                           
  6251                           ;newmain.c: 571:     dataPass(FONT_DEFAULT[string[4]-32]);
  6252  13F2  1283               	bcf	3,5	;RP0=0, select bank0
  6253  13F3  1303               	bcf	3,6	;RP1=0, select bank0
  6254  13F4  0836               	movf	displayString@string,w
  6255  13F5  3E04               	addlw	4
  6256  13F6  0084               	movwf	4
  6257  13F7  160A  118A  2000  160A  118A  	fcall	stringdir
  6258  13FC  3EE1               	addlw	low (((_FONT_DEFAULT-__stringbase)| (0+32768)+224))
  6259  13FD  0084               	movwf	4
  6260  13FE  160A  118A  2000  160A  118A  	fcall	stringdir
  6261  1403  160A  158A  25A1  160A  118A  	fcall	_dataPass
  6262                           
  6263                           ;newmain.c: 572:     RA2 = 1;
  6264  1408  1505               	bsf	5,2	;volatile
  6265                           
  6266                           ;newmain.c: 573:     RA0 = 1;
  6267  1409  1405               	bsf	5,0	;volatile
  6268                           
  6269                           ;newmain.c: 574:     RA1 = 0;
  6270  140A  1085               	bcf	5,1	;volatile
  6271                           
  6272                           ;newmain.c: 575:     RA3 = 1;
  6273  140B  1585               	bsf	5,3	;volatile
  6274                           
  6275                           ;newmain.c: 576:     _delay((unsigned long)((1)*(20000000/4000.0)));
  6276  140C  3007               	movlw	7
  6277  140D  1283               	bcf	3,5	;RP0=0, select bank0
  6278  140E  1303               	bcf	3,6	;RP1=0, select bank0
  6279  140F  00B5               	movwf	??_displayString+1
  6280  1410  307C               	movlw	124
  6281  1411  00B4               	movwf	??_displayString
  6282  1412                     u6247:
  6283  1412  0BB4               	decfsz	??_displayString,f
  6284  1413  2C12               	goto	u6247
  6285  1414  0BB5               	decfsz	??_displayString+1,f
  6286  1415  2C12               	goto	u6247
  6287  1416  0000               	nop
  6288  1417  0008               	return
  6289  1418                     __end_of_displayString:
  6290                           
  6291                           	psect	text17
  6292  1ED8                     __ptext17:	
  6293 ;; *************** function _displayChange *****************
  6294 ;; Defined at:
  6295 ;;		line 645 in file "newmain.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;  value           4    4[BANK3 ] unsigned long 
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;		None
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  4    4[BANK3 ] unsigned long 
  6302 ;; Registers used:
  6303 ;;		wreg, status,2, status,0, pclath, cstack
  6304 ;; Tracked objects:
  6305 ;;		On entry : 300/300
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6309 ;;      Params:         0       0       0       4       0
  6310 ;;      Locals:         0       0       0       0       0
  6311 ;;      Temps:          0       0       1       0       0
  6312 ;;      Totals:         0       0       1       4       0
  6313 ;;Total ram usage:        5 bytes
  6314 ;; Hardware stack levels used: 1
  6315 ;; Hardware stack levels required when called: 4
  6316 ;; This function calls:
  6317 ;;		_increment
  6318 ;;		_selectSwitch
  6319 ;;		_upSwitch
  6320 ;; This function is called by:
  6321 ;;		_editMenu
  6322 ;; This function uses a non-reentrant model
  6323 ;;
  6324                           
  6325                           
  6326                           ;psect for function _displayChange
  6327  1ED8                     _displayChange:
  6328                           
  6329                           ;newmain.c: 646:     if(selectSwitch() == 1){
  6330                           
  6331                           ;incstack = 0
  6332                           ; Regs used in _displayChange: [wreg+status,2+status,0+pclath+cstack]
  6333  1ED8  160A  158A  2537  160A  158A  	fcall	_selectSwitch
  6334  1EDD  3A01               	xorlw	1
  6335  1EDE  1D03               	skipz
  6336  1EDF  2EF0               	goto	l3552
  6337                           
  6338                           ;newmain.c: 647:         currentDisplay += 1;
  6339  1EE0  3001               	movlw	1
  6340  1EE1  1683               	bsf	3,5	;RP0=1, select bank1
  6341  1EE2  00EE               	movwf	??_displayChange^(0+128)
  6342  1EE3  086E               	movf	??_displayChange^(0+128),w
  6343  1EE4  1283               	bcf	3,5	;RP0=0, select bank0
  6344  1EE5  07DE               	addwf	_currentDisplay,f	;volatile
  6345                           
  6346                           ;newmain.c: 648:         if(currentDisplay == 5){
  6347  1EE6  3005               	movlw	5
  6348  1EE7  065E               	xorwf	_currentDisplay,w	;volatile
  6349  1EE8  1D03               	btfss	3,2
  6350  1EE9  2EF0               	goto	l3552
  6351                           
  6352                           ;newmain.c: 649:         currentDisplay = 1;}
  6353  1EEA  3001               	movlw	1
  6354  1EEB  1683               	bsf	3,5	;RP0=1, select bank1
  6355  1EEC  00EE               	movwf	??_displayChange^(0+128)
  6356  1EED  086E               	movf	??_displayChange^(0+128),w
  6357  1EEE  1283               	bcf	3,5	;RP0=0, select bank0
  6358  1EEF  00DE               	movwf	_currentDisplay	;volatile
  6359  1EF0                     l3552:
  6360                           
  6361                           ;newmain.c: 651:     if(upSwitch() == 1){
  6362  1EF0  160A  158A  2529  160A  158A  	fcall	_upSwitch
  6363  1EF5  3A01               	xorlw	1
  6364  1EF6  1D03               	skipz
  6365  1EF7  0008               	return
  6366                           
  6367                           ;newmain.c: 652:        value = increment(value);
  6368  1EF8  1683               	bsf	3,5	;RP0=1, select bank3
  6369  1EF9  1703               	bsf	3,6	;RP1=1, select bank3
  6370  1EFA  0817               	movf	(displayChange@value+3)^(0+384),w
  6371  1EFB  1303               	bcf	3,6	;RP1=0, select bank1
  6372  1EFC  00ED               	movwf	(increment@value+3)^(0+128)
  6373  1EFD  1703               	bsf	3,6	;RP1=1, select bank3
  6374  1EFE  0816               	movf	(displayChange@value+2)^(0+384),w
  6375  1EFF  1303               	bcf	3,6	;RP1=0, select bank1
  6376  1F00  00EC               	movwf	(increment@value+2)^(0+128)
  6377  1F01  1703               	bsf	3,6	;RP1=1, select bank3
  6378  1F02  0815               	movf	(displayChange@value+1)^(0+384),w
  6379  1F03  1303               	bcf	3,6	;RP1=0, select bank1
  6380  1F04  00EB               	movwf	(increment@value+1)^(0+128)
  6381  1F05  1703               	bsf	3,6	;RP1=1, select bank3
  6382  1F06  0814               	movf	displayChange@value^(0+384),w
  6383  1F07  1303               	bcf	3,6	;RP1=0, select bank1
  6384  1F08  00EA               	movwf	increment@value^(0+128)
  6385  1F09  160A  118A  24D6   	fcall	_increment
  6386  1F0C  1683               	bsf	3,5	;RP0=1, select bank1
  6387  1F0D  086D               	movf	(?_increment+3)^(0+128),w
  6388  1F0E  1703               	bsf	3,6	;RP1=1, select bank3
  6389  1F0F  0097               	movwf	(displayChange@value+3)^(0+384)
  6390  1F10  1303               	bcf	3,6	;RP1=0, select bank1
  6391  1F11  086C               	movf	(?_increment+2)^(0+128),w
  6392  1F12  1703               	bsf	3,6	;RP1=1, select bank3
  6393  1F13  0096               	movwf	(displayChange@value+2)^(0+384)
  6394  1F14  1303               	bcf	3,6	;RP1=0, select bank1
  6395  1F15  086B               	movf	(?_increment+1)^(0+128),w
  6396  1F16  1703               	bsf	3,6	;RP1=1, select bank3
  6397  1F17  0095               	movwf	(displayChange@value+1)^(0+384)
  6398  1F18  1303               	bcf	3,6	;RP1=0, select bank1
  6399  1F19  086A               	movf	?_increment^(0+128),w
  6400  1F1A  1703               	bsf	3,6	;RP1=1, select bank3
  6401  1F1B  0094               	movwf	displayChange@value^(0+384)
  6402                           
  6403                           ;newmain.c: 654:     return value;
  6404  1F1C  0008               	return
  6405  1F1D                     __end_of_displayChange:
  6406                           
  6407                           	psect	text18
  6408  1D29                     __ptext18:	
  6409 ;; *************** function _upSwitch *****************
  6410 ;; Defined at:
  6411 ;;		line 606 in file "newmain.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;		None
  6414 ;; Auto vars:     Size  Location     Type
  6415 ;;		None
  6416 ;; Return value:  Size  Location     Type
  6417 ;;                  1    wreg      unsigned char 
  6418 ;; Registers used:
  6419 ;;		wreg, status,2
  6420 ;; Tracked objects:
  6421 ;;		On entry : 200/0
  6422 ;;		On exit  : 200/0
  6423 ;;		Unchanged: 0/0
  6424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6425 ;;      Params:         0       0       0       0       0
  6426 ;;      Locals:         0       0       0       0       0
  6427 ;;      Temps:          0       0       0       0       0
  6428 ;;      Totals:         0       0       0       0       0
  6429 ;;Total ram usage:        0 bytes
  6430 ;; Hardware stack levels used: 1
  6431 ;; Hardware stack levels required when called: 2
  6432 ;; This function calls:
  6433 ;;		Nothing
  6434 ;; This function is called by:
  6435 ;;		_viewMenu
  6436 ;;		_displayChange
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440                           
  6441                           ;psect for function _upSwitch
  6442  1D29                     _upSwitch:
  6443                           
  6444                           ;newmain.c: 608:     if(RB5 == 1 && upFlag == 1){
  6445                           
  6446                           ;incstack = 0
  6447                           ; Regs used in _upSwitch: [wreg+status,2]
  6448  1D29  1283               	bcf	3,5	;RP0=0, select bank0
  6449  1D2A  1A86               	btfsc	6,5	;volatile
  6450  1D2B  1EDA               	btfss	_upFlag/(0+8),_upFlag& (0+7)	;volatile
  6451  1D2C  2D30               	goto	l367
  6452                           
  6453                           ;newmain.c: 609:         upFlag = 0;
  6454  1D2D  12DA               	bcf	_upFlag/(0+8),_upFlag& (0+7)	;volatile
  6455                           
  6456                           ;newmain.c: 610:         return 1;
  6457  1D2E  3001               	movlw	1
  6458  1D2F  0008               	return
  6459  1D30                     l367:	
  6460                           ;newmain.c: 611:     }
  6461                           
  6462                           
  6463                           ;newmain.c: 612:     if(RB5 == 0){
  6464  1D30  1A86               	btfsc	6,5	;volatile
  6465  1D31  2D35               	goto	l2168
  6466                           
  6467                           ;newmain.c: 613:         upFlag = 1;
  6468  1D32  16DA               	bsf	_upFlag/(0+8),_upFlag& (0+7)	;volatile
  6469                           
  6470                           ;newmain.c: 614:         skipCount = 0;
  6471  1D33  1683               	bsf	3,5	;RP0=1, select bank1
  6472  1D34  01B7               	clrf	_skipCount^(0+128)	;volatile
  6473  1D35                     l2168:
  6474                           
  6475                           ;newmain.c: 616:     return 0;
  6476  1D35  3000               	movlw	0
  6477  1D36  0008               	return
  6478  1D37                     __end_of_upSwitch:
  6479                           
  6480                           	psect	text19
  6481  1D37                     __ptext19:	
  6482 ;; *************** function _selectSwitch *****************
  6483 ;; Defined at:
  6484 ;;		line 593 in file "newmain.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;		None
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;		None
  6489 ;; Return value:  Size  Location     Type
  6490 ;;                  1    wreg      unsigned char 
  6491 ;; Registers used:
  6492 ;;		wreg, status,2
  6493 ;; Tracked objects:
  6494 ;;		On entry : 300/300
  6495 ;;		On exit  : 200/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6498 ;;      Params:         0       0       0       0       0
  6499 ;;      Locals:         0       0       0       0       0
  6500 ;;      Temps:          0       0       0       0       0
  6501 ;;      Totals:         0       0       0       0       0
  6502 ;;Total ram usage:        0 bytes
  6503 ;; Hardware stack levels used: 1
  6504 ;; Hardware stack levels required when called: 2
  6505 ;; This function calls:
  6506 ;;		Nothing
  6507 ;; This function is called by:
  6508 ;;		_displayChange
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           
  6513                           ;psect for function _selectSwitch
  6514  1D37                     _selectSwitch:
  6515                           
  6516                           ;newmain.c: 595:     if(RB4 == 1 && selectFlag == 1){
  6517                           
  6518                           ;incstack = 0
  6519                           ; Regs used in _selectSwitch: [wreg+status,2]
  6520  1D37  1283               	bcf	3,5	;RP0=0, select bank0
  6521  1D38  1303               	bcf	3,6	;RP1=0, select bank0
  6522  1D39  1A06               	btfsc	6,4	;volatile
  6523  1D3A  1E5A               	btfss	_selectFlag/(0+8),_selectFlag& (0+7)	;volatile
  6524  1D3B  2D3F               	goto	l362
  6525                           
  6526                           ;newmain.c: 596:         selectFlag = 0;
  6527  1D3C  125A               	bcf	_selectFlag/(0+8),_selectFlag& (0+7)	;volatile
  6528                           
  6529                           ;newmain.c: 597:         return 1;
  6530  1D3D  3001               	movlw	1
  6531  1D3E  0008               	return
  6532  1D3F                     l362:	
  6533                           ;newmain.c: 598:     }
  6534                           
  6535                           
  6536                           ;newmain.c: 599:     if(RB4 == 0){
  6537  1D3F  1A06               	btfsc	6,4	;volatile
  6538  1D40  2D44               	goto	l2200
  6539                           
  6540                           ;newmain.c: 600:         selectFlag = 1;
  6541  1D41  165A               	bsf	_selectFlag/(0+8),_selectFlag& (0+7)	;volatile
  6542                           
  6543                           ;newmain.c: 601:         skipCount = 0;
  6544  1D42  1683               	bsf	3,5	;RP0=1, select bank1
  6545  1D43  01B7               	clrf	_skipCount^(0+128)	;volatile
  6546  1D44                     l2200:
  6547                           
  6548                           ;newmain.c: 603:     return 0;
  6549  1D44  3000               	movlw	0
  6550  1D45  0008               	return
  6551  1D46                     __end_of_selectSwitch:
  6552                           
  6553                           	psect	text20
  6554  14D6                     __ptext20:	
  6555 ;; *************** function _increment *****************
  6556 ;; Defined at:
  6557 ;;		line 657 in file "newmain.c"
  6558 ;; Parameters:    Size  Location     Type
  6559 ;;  value           4   10[BANK1 ] unsigned long 
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;		None
  6562 ;; Return value:  Size  Location     Type
  6563 ;;                  4   10[BANK1 ] unsigned long 
  6564 ;; Registers used:
  6565 ;;		wreg, status,2, status,0, pclath, cstack
  6566 ;; Tracked objects:
  6567 ;;		On entry : 300/100
  6568 ;;		On exit  : 200/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6571 ;;      Params:         0       0       4       0       0
  6572 ;;      Locals:         0       0       0       0       0
  6573 ;;      Temps:          0       0       0       4       0
  6574 ;;      Totals:         0       0       4       4       0
  6575 ;;Total ram usage:        8 bytes
  6576 ;; Hardware stack levels used: 1
  6577 ;; Hardware stack levels required when called: 3
  6578 ;; This function calls:
  6579 ;;		___llmod
  6580 ;; This function is called by:
  6581 ;;		_displayChange
  6582 ;; This function uses a non-reentrant model
  6583 ;;
  6584                           
  6585                           
  6586                           ;psect for function _increment
  6587  14D6                     _increment:
  6588                           
  6589                           ;newmain.c: 667:     if(currentDisplay == 1){
  6590                           
  6591                           ;incstack = 0
  6592                           ; Regs used in _increment: [wreg+status,2+status,0+pclath+cstack]
  6593  14D6  1283               	bcf	3,5	;RP0=0, select bank0
  6594  14D7  035E               	decf	_currentDisplay,w	;volatile
  6595  14D8  1D03               	btfss	3,2
  6596  14D9  2D38               	goto	l3270
  6597                           
  6598                           ;newmain.c: 668:         if(value%10000>=9000){
  6599  14DA  3000               	movlw	0
  6600  14DB  1683               	bsf	3,5	;RP0=1, select bank1
  6601  14DC  00E3               	movwf	(___llmod@divisor+3)^(0+128)
  6602  14DD  3000               	movlw	0
  6603  14DE  00E2               	movwf	(___llmod@divisor+2)^(0+128)
  6604  14DF  3027               	movlw	39
  6605  14E0  00E1               	movwf	(___llmod@divisor+1)^(0+128)
  6606  14E1  3010               	movlw	16
  6607  14E2  00E0               	movwf	___llmod@divisor^(0+128)
  6608  14E3  086D               	movf	(increment@value+3)^(0+128),w
  6609  14E4  00E7               	movwf	(___llmod@dividend+3)^(0+128)
  6610  14E5  086C               	movf	(increment@value+2)^(0+128),w
  6611  14E6  00E6               	movwf	(___llmod@dividend+2)^(0+128)
  6612  14E7  086B               	movf	(increment@value+1)^(0+128),w
  6613  14E8  00E5               	movwf	(___llmod@dividend+1)^(0+128)
  6614  14E9  086A               	movf	increment@value^(0+128),w
  6615  14EA  00E4               	movwf	___llmod@dividend^(0+128)
  6616  14EB  160A  158A  27B4  160A  118A  	fcall	___llmod
  6617  14F0  0863               	movf	(?___llmod+3)^(0+128),w
  6618  14F1  1D03               	btfss	3,2
  6619  14F2  2D00               	goto	l3266
  6620  14F3  0862               	movf	(?___llmod+2)^(0+128),w
  6621  14F4  1D03               	btfss	3,2
  6622  14F5  2D00               	goto	l3266
  6623  14F6  3023               	movlw	35
  6624  14F7  0261               	subwf	(?___llmod+1)^(0+128),w
  6625  14F8  1D03               	skipz
  6626  14F9  2CFE               	goto	u4663
  6627  14FA  3028               	movlw	40
  6628  14FB  0260               	subwf	?___llmod^(0+128),w
  6629  14FC  1D03               	skipz
  6630  14FD  2CFE               	goto	u4663
  6631  14FE                     u4663:
  6632  14FE  1C03               	btfss	3,0
  6633  14FF  2D28               	goto	l3268
  6634  1500                     l3266:
  6635                           
  6636                           ;newmain.c: 669:             value -= 9000;
  6637  1500  3028               	movlw	40
  6638  1501  1683               	bsf	3,5	;RP0=1, select bank3
  6639  1502  1703               	bsf	3,6	;RP1=1, select bank3
  6640  1503  0090               	movwf	??_increment^(0+384)
  6641  1504  3023               	movlw	35
  6642  1505  0091               	movwf	(??_increment^(0+384)+1)
  6643  1506  3000               	movlw	0
  6644  1507  0092               	movwf	(??_increment^(0+384)+2)
  6645  1508  3000               	movlw	0
  6646  1509  0093               	movwf	(??_increment^(0+384)+3)
  6647  150A  0810               	movf	??_increment^(0+384),w
  6648  150B  1303               	bcf	3,6	;RP1=0, select bank1
  6649  150C  02EA               	subwf	increment@value^(0+128),f
  6650  150D  1703               	bsf	3,6	;RP1=1, select bank3
  6651  150E  0811               	movf	(??_increment+1)^(0+384),w
  6652  150F  1C03               	skipc
  6653  1510  0F11               	incfsz	(??_increment+1)^(0+384),w
  6654  1511  2D13               	goto	u4675
  6655  1512  2D15               	goto	u4676
  6656  1513                     u4675:
  6657  1513  1303               	bcf	3,6	;RP1=0, select bank1
  6658  1514  02EB               	subwf	(increment@value+1)^(0+128),f
  6659  1515                     u4676:
  6660  1515  1703               	bsf	3,6	;RP1=1, select bank3
  6661  1516  0812               	movf	(??_increment+2)^(0+384),w
  6662  1517  1C03               	skipc
  6663  1518  0F12               	incfsz	(??_increment+2)^(0+384),w
  6664  1519  2D1B               	goto	u4677
  6665  151A  2D1D               	goto	u4678
  6666  151B                     u4677:
  6667  151B  1303               	bcf	3,6	;RP1=0, select bank1
  6668  151C  02EC               	subwf	(increment@value+2)^(0+128),f
  6669  151D                     u4678:
  6670  151D  1703               	bsf	3,6	;RP1=1, select bank3
  6671  151E  0813               	movf	(??_increment+3)^(0+384),w
  6672  151F  1C03               	skipc
  6673  1520  0F13               	incfsz	(??_increment+3)^(0+384),w
  6674  1521  2D23               	goto	u4679
  6675  1522  2D25               	goto	u4670
  6676  1523                     u4679:
  6677  1523  1303               	bcf	3,6	;RP1=0, select bank1
  6678  1524  02ED               	subwf	(increment@value+3)^(0+128),f
  6679  1525                     u4670:
  6680  1525  1703               	bsf	3,6	;RP1=1, select bank3
  6681  1526  1303               	bcf	3,6	;RP1=0, select bank1
  6682                           
  6683                           ;newmain.c: 670:         }
  6684  1527  2D38               	goto	l3270
  6685  1528                     l3268:
  6686                           
  6687                           ;newmain.c: 672:             value += 1000;
  6688  1528  30E8               	movlw	232
  6689  1529  1683               	bsf	3,5	;RP0=1, select bank1
  6690  152A  1303               	bcf	3,6	;RP1=0, select bank1
  6691  152B  07EA               	addwf	increment@value^(0+128),f
  6692  152C  3003               	movlw	3
  6693  152D  1803               	skipnc
  6694  152E  3004               	movlw	4
  6695  152F  07EB               	addwf	(increment@value+1)^(0+128),f
  6696  1530  3000               	movlw	0
  6697  1531  1803               	skipnc
  6698  1532  3001               	movlw	1
  6699  1533  07EC               	addwf	(increment@value+2)^(0+128),f
  6700  1534  3000               	movlw	0
  6701  1535  1803               	skipnc
  6702  1536  3001               	movlw	1
  6703  1537  07ED               	addwf	(increment@value+3)^(0+128),f
  6704  1538                     l3270:
  6705                           
  6706                           ;newmain.c: 676:     if(currentDisplay == 2){
  6707  1538  3002               	movlw	2
  6708  1539  1283               	bcf	3,5	;RP0=0, select bank0
  6709  153A  065E               	xorwf	_currentDisplay,w	;volatile
  6710  153B  1D03               	btfss	3,2
  6711  153C  2D9B               	goto	l3278
  6712                           
  6713                           ;newmain.c: 677:         if(value%1000>=900){
  6714  153D  3000               	movlw	0
  6715  153E  1683               	bsf	3,5	;RP0=1, select bank1
  6716  153F  00E3               	movwf	(___llmod@divisor+3)^(0+128)
  6717  1540  3000               	movlw	0
  6718  1541  00E2               	movwf	(___llmod@divisor+2)^(0+128)
  6719  1542  3003               	movlw	3
  6720  1543  00E1               	movwf	(___llmod@divisor+1)^(0+128)
  6721  1544  30E8               	movlw	232
  6722  1545  00E0               	movwf	___llmod@divisor^(0+128)
  6723  1546  086D               	movf	(increment@value+3)^(0+128),w
  6724  1547  00E7               	movwf	(___llmod@dividend+3)^(0+128)
  6725  1548  086C               	movf	(increment@value+2)^(0+128),w
  6726  1549  00E6               	movwf	(___llmod@dividend+2)^(0+128)
  6727  154A  086B               	movf	(increment@value+1)^(0+128),w
  6728  154B  00E5               	movwf	(___llmod@dividend+1)^(0+128)
  6729  154C  086A               	movf	increment@value^(0+128),w
  6730  154D  00E4               	movwf	___llmod@dividend^(0+128)
  6731  154E  160A  158A  27B4  160A  118A  	fcall	___llmod
  6732  1553  0863               	movf	(?___llmod+3)^(0+128),w
  6733  1554  1D03               	btfss	3,2
  6734  1555  2D63               	goto	l3274
  6735  1556  0862               	movf	(?___llmod+2)^(0+128),w
  6736  1557  1D03               	btfss	3,2
  6737  1558  2D63               	goto	l3274
  6738  1559  3003               	movlw	3
  6739  155A  0261               	subwf	(?___llmod+1)^(0+128),w
  6740  155B  1D03               	skipz
  6741  155C  2D61               	goto	u4693
  6742  155D  3084               	movlw	132
  6743  155E  0260               	subwf	?___llmod^(0+128),w
  6744  155F  1D03               	skipz
  6745  1560  2D61               	goto	u4693
  6746  1561                     u4693:
  6747  1561  1C03               	btfss	3,0
  6748  1562  2D8B               	goto	l3276
  6749  1563                     l3274:
  6750                           
  6751                           ;newmain.c: 678:             value -= 900;
  6752  1563  3084               	movlw	132
  6753  1564  1683               	bsf	3,5	;RP0=1, select bank3
  6754  1565  1703               	bsf	3,6	;RP1=1, select bank3
  6755  1566  0090               	movwf	??_increment^(0+384)
  6756  1567  3003               	movlw	3
  6757  1568  0091               	movwf	(??_increment^(0+384)+1)
  6758  1569  3000               	movlw	0
  6759  156A  0092               	movwf	(??_increment^(0+384)+2)
  6760  156B  3000               	movlw	0
  6761  156C  0093               	movwf	(??_increment^(0+384)+3)
  6762  156D  0810               	movf	??_increment^(0+384),w
  6763  156E  1303               	bcf	3,6	;RP1=0, select bank1
  6764  156F  02EA               	subwf	increment@value^(0+128),f
  6765  1570  1703               	bsf	3,6	;RP1=1, select bank3
  6766  1571  0811               	movf	(??_increment+1)^(0+384),w
  6767  1572  1C03               	skipc
  6768  1573  0F11               	incfsz	(??_increment+1)^(0+384),w
  6769  1574  2D76               	goto	u4705
  6770  1575  2D78               	goto	u4706
  6771  1576                     u4705:
  6772  1576  1303               	bcf	3,6	;RP1=0, select bank1
  6773  1577  02EB               	subwf	(increment@value+1)^(0+128),f
  6774  1578                     u4706:
  6775  1578  1703               	bsf	3,6	;RP1=1, select bank3
  6776  1579  0812               	movf	(??_increment+2)^(0+384),w
  6777  157A  1C03               	skipc
  6778  157B  0F12               	incfsz	(??_increment+2)^(0+384),w
  6779  157C  2D7E               	goto	u4707
  6780  157D  2D80               	goto	u4708
  6781  157E                     u4707:
  6782  157E  1303               	bcf	3,6	;RP1=0, select bank1
  6783  157F  02EC               	subwf	(increment@value+2)^(0+128),f
  6784  1580                     u4708:
  6785  1580  1703               	bsf	3,6	;RP1=1, select bank3
  6786  1581  0813               	movf	(??_increment+3)^(0+384),w
  6787  1582  1C03               	skipc
  6788  1583  0F13               	incfsz	(??_increment+3)^(0+384),w
  6789  1584  2D86               	goto	u4709
  6790  1585  2D88               	goto	u4700
  6791  1586                     u4709:
  6792  1586  1303               	bcf	3,6	;RP1=0, select bank1
  6793  1587  02ED               	subwf	(increment@value+3)^(0+128),f
  6794  1588                     u4700:
  6795  1588  1703               	bsf	3,6	;RP1=1, select bank3
  6796  1589  1303               	bcf	3,6	;RP1=0, select bank1
  6797                           
  6798                           ;newmain.c: 679:         }
  6799  158A  2D9B               	goto	l3278
  6800  158B                     l3276:
  6801                           
  6802                           ;newmain.c: 681:             value += 100;
  6803  158B  3064               	movlw	100
  6804  158C  1683               	bsf	3,5	;RP0=1, select bank1
  6805  158D  1303               	bcf	3,6	;RP1=0, select bank1
  6806  158E  07EA               	addwf	increment@value^(0+128),f
  6807  158F  3000               	movlw	0
  6808  1590  1803               	skipnc
  6809  1591  3001               	movlw	1
  6810  1592  07EB               	addwf	(increment@value+1)^(0+128),f
  6811  1593  3000               	movlw	0
  6812  1594  1803               	skipnc
  6813  1595  3001               	movlw	1
  6814  1596  07EC               	addwf	(increment@value+2)^(0+128),f
  6815  1597  3000               	movlw	0
  6816  1598  1803               	skipnc
  6817  1599  3001               	movlw	1
  6818  159A  07ED               	addwf	(increment@value+3)^(0+128),f
  6819  159B                     l3278:
  6820                           
  6821                           ;newmain.c: 685:     if(currentDisplay == 3){
  6822  159B  3003               	movlw	3
  6823  159C  1283               	bcf	3,5	;RP0=0, select bank0
  6824  159D  065E               	xorwf	_currentDisplay,w	;volatile
  6825  159E  1D03               	btfss	3,2
  6826  159F  2DFD               	goto	l3286
  6827                           
  6828                           ;newmain.c: 686:         if(value%100>=90){
  6829  15A0  3000               	movlw	0
  6830  15A1  1683               	bsf	3,5	;RP0=1, select bank1
  6831  15A2  00E3               	movwf	(___llmod@divisor+3)^(0+128)
  6832  15A3  3000               	movlw	0
  6833  15A4  00E2               	movwf	(___llmod@divisor+2)^(0+128)
  6834  15A5  3000               	movlw	0
  6835  15A6  00E1               	movwf	(___llmod@divisor+1)^(0+128)
  6836  15A7  3064               	movlw	100
  6837  15A8  00E0               	movwf	___llmod@divisor^(0+128)
  6838  15A9  086D               	movf	(increment@value+3)^(0+128),w
  6839  15AA  00E7               	movwf	(___llmod@dividend+3)^(0+128)
  6840  15AB  086C               	movf	(increment@value+2)^(0+128),w
  6841  15AC  00E6               	movwf	(___llmod@dividend+2)^(0+128)
  6842  15AD  086B               	movf	(increment@value+1)^(0+128),w
  6843  15AE  00E5               	movwf	(___llmod@dividend+1)^(0+128)
  6844  15AF  086A               	movf	increment@value^(0+128),w
  6845  15B0  00E4               	movwf	___llmod@dividend^(0+128)
  6846  15B1  160A  158A  27B4  160A  118A  	fcall	___llmod
  6847  15B6  0863               	movf	(?___llmod+3)^(0+128),w
  6848  15B7  1D03               	btfss	3,2
  6849  15B8  2DC5               	goto	l3282
  6850  15B9  0862               	movf	(?___llmod+2)^(0+128),w
  6851  15BA  1D03               	btfss	3,2
  6852  15BB  2DC5               	goto	l3282
  6853  15BC  0861               	movf	(?___llmod+1)^(0+128),w
  6854  15BD  1D03               	btfss	3,2
  6855  15BE  2DC5               	goto	l3282
  6856  15BF  305A               	movlw	90
  6857  15C0  0260               	subwf	?___llmod^(0+128),w
  6858  15C1  1D03               	skipz
  6859  15C2  2DC3               	goto	u4723
  6860  15C3                     u4723:
  6861  15C3  1C03               	btfss	3,0
  6862  15C4  2DED               	goto	l3284
  6863  15C5                     l3282:
  6864                           
  6865                           ;newmain.c: 687:             value -= 90;
  6866  15C5  305A               	movlw	90
  6867  15C6  1683               	bsf	3,5	;RP0=1, select bank3
  6868  15C7  1703               	bsf	3,6	;RP1=1, select bank3
  6869  15C8  0090               	movwf	??_increment^(0+384)
  6870  15C9  3000               	movlw	0
  6871  15CA  0091               	movwf	(??_increment^(0+384)+1)
  6872  15CB  3000               	movlw	0
  6873  15CC  0092               	movwf	(??_increment^(0+384)+2)
  6874  15CD  3000               	movlw	0
  6875  15CE  0093               	movwf	(??_increment^(0+384)+3)
  6876  15CF  0810               	movf	??_increment^(0+384),w
  6877  15D0  1303               	bcf	3,6	;RP1=0, select bank1
  6878  15D1  02EA               	subwf	increment@value^(0+128),f
  6879  15D2  1703               	bsf	3,6	;RP1=1, select bank3
  6880  15D3  0811               	movf	(??_increment+1)^(0+384),w
  6881  15D4  1C03               	skipc
  6882  15D5  0F11               	incfsz	(??_increment+1)^(0+384),w
  6883  15D6  2DD8               	goto	u4735
  6884  15D7  2DDA               	goto	u4736
  6885  15D8                     u4735:
  6886  15D8  1303               	bcf	3,6	;RP1=0, select bank1
  6887  15D9  02EB               	subwf	(increment@value+1)^(0+128),f
  6888  15DA                     u4736:
  6889  15DA  1703               	bsf	3,6	;RP1=1, select bank3
  6890  15DB  0812               	movf	(??_increment+2)^(0+384),w
  6891  15DC  1C03               	skipc
  6892  15DD  0F12               	incfsz	(??_increment+2)^(0+384),w
  6893  15DE  2DE0               	goto	u4737
  6894  15DF  2DE2               	goto	u4738
  6895  15E0                     u4737:
  6896  15E0  1303               	bcf	3,6	;RP1=0, select bank1
  6897  15E1  02EC               	subwf	(increment@value+2)^(0+128),f
  6898  15E2                     u4738:
  6899  15E2  1703               	bsf	3,6	;RP1=1, select bank3
  6900  15E3  0813               	movf	(??_increment+3)^(0+384),w
  6901  15E4  1C03               	skipc
  6902  15E5  0F13               	incfsz	(??_increment+3)^(0+384),w
  6903  15E6  2DE8               	goto	u4739
  6904  15E7  2DEA               	goto	u4730
  6905  15E8                     u4739:
  6906  15E8  1303               	bcf	3,6	;RP1=0, select bank1
  6907  15E9  02ED               	subwf	(increment@value+3)^(0+128),f
  6908  15EA                     u4730:
  6909  15EA  1703               	bsf	3,6	;RP1=1, select bank3
  6910  15EB  1303               	bcf	3,6	;RP1=0, select bank1
  6911                           
  6912                           ;newmain.c: 688:         }
  6913  15EC  2DFD               	goto	l3286
  6914  15ED                     l3284:
  6915                           
  6916                           ;newmain.c: 690:             value += 10;
  6917  15ED  300A               	movlw	10
  6918  15EE  1683               	bsf	3,5	;RP0=1, select bank1
  6919  15EF  1303               	bcf	3,6	;RP1=0, select bank1
  6920  15F0  07EA               	addwf	increment@value^(0+128),f
  6921  15F1  3000               	movlw	0
  6922  15F2  1803               	skipnc
  6923  15F3  3001               	movlw	1
  6924  15F4  07EB               	addwf	(increment@value+1)^(0+128),f
  6925  15F5  3000               	movlw	0
  6926  15F6  1803               	skipnc
  6927  15F7  3001               	movlw	1
  6928  15F8  07EC               	addwf	(increment@value+2)^(0+128),f
  6929  15F9  3000               	movlw	0
  6930  15FA  1803               	skipnc
  6931  15FB  3001               	movlw	1
  6932  15FC  07ED               	addwf	(increment@value+3)^(0+128),f
  6933  15FD                     l3286:
  6934                           
  6935                           ;newmain.c: 694:     if(currentDisplay == 4){
  6936  15FD  3004               	movlw	4
  6937  15FE  1283               	bcf	3,5	;RP0=0, select bank0
  6938  15FF  065E               	xorwf	_currentDisplay,w	;volatile
  6939  1600  1D03               	btfss	3,2
  6940  1601  0008               	return
  6941                           
  6942                           ;newmain.c: 695:         if(value%10>=9){
  6943  1602  3000               	movlw	0
  6944  1603  1683               	bsf	3,5	;RP0=1, select bank1
  6945  1604  00E3               	movwf	(___llmod@divisor+3)^(0+128)
  6946  1605  3000               	movlw	0
  6947  1606  00E2               	movwf	(___llmod@divisor+2)^(0+128)
  6948  1607  3000               	movlw	0
  6949  1608  00E1               	movwf	(___llmod@divisor+1)^(0+128)
  6950  1609  300A               	movlw	10
  6951  160A  00E0               	movwf	___llmod@divisor^(0+128)
  6952  160B  086D               	movf	(increment@value+3)^(0+128),w
  6953  160C  00E7               	movwf	(___llmod@dividend+3)^(0+128)
  6954  160D  086C               	movf	(increment@value+2)^(0+128),w
  6955  160E  00E6               	movwf	(___llmod@dividend+2)^(0+128)
  6956  160F  086B               	movf	(increment@value+1)^(0+128),w
  6957  1610  00E5               	movwf	(___llmod@dividend+1)^(0+128)
  6958  1611  086A               	movf	increment@value^(0+128),w
  6959  1612  00E4               	movwf	___llmod@dividend^(0+128)
  6960  1613  160A  158A  27B4  160A  118A  	fcall	___llmod
  6961  1618  0863               	movf	(?___llmod+3)^(0+128),w
  6962  1619  1D03               	btfss	3,2
  6963  161A  2E27               	goto	l3290
  6964  161B  0862               	movf	(?___llmod+2)^(0+128),w
  6965  161C  1D03               	btfss	3,2
  6966  161D  2E27               	goto	l3290
  6967  161E  0861               	movf	(?___llmod+1)^(0+128),w
  6968  161F  1D03               	btfss	3,2
  6969  1620  2E27               	goto	l3290
  6970  1621  3009               	movlw	9
  6971  1622  0260               	subwf	?___llmod^(0+128),w
  6972  1623  1D03               	skipz
  6973  1624  2E25               	goto	u4753
  6974  1625                     u4753:
  6975  1625  1C03               	btfss	3,0
  6976  1626  2E4F               	goto	l3292
  6977  1627                     l3290:
  6978                           
  6979                           ;newmain.c: 696:             value -= 9;
  6980  1627  3009               	movlw	9
  6981  1628  1683               	bsf	3,5	;RP0=1, select bank3
  6982  1629  1703               	bsf	3,6	;RP1=1, select bank3
  6983  162A  0090               	movwf	??_increment^(0+384)
  6984  162B  3000               	movlw	0
  6985  162C  0091               	movwf	(??_increment^(0+384)+1)
  6986  162D  3000               	movlw	0
  6987  162E  0092               	movwf	(??_increment^(0+384)+2)
  6988  162F  3000               	movlw	0
  6989  1630  0093               	movwf	(??_increment^(0+384)+3)
  6990  1631  0810               	movf	??_increment^(0+384),w
  6991  1632  1303               	bcf	3,6	;RP1=0, select bank1
  6992  1633  02EA               	subwf	increment@value^(0+128),f
  6993  1634  1703               	bsf	3,6	;RP1=1, select bank3
  6994  1635  0811               	movf	(??_increment+1)^(0+384),w
  6995  1636  1C03               	skipc
  6996  1637  0F11               	incfsz	(??_increment+1)^(0+384),w
  6997  1638  2E3A               	goto	u4765
  6998  1639  2E3C               	goto	u4766
  6999  163A                     u4765:
  7000  163A  1303               	bcf	3,6	;RP1=0, select bank1
  7001  163B  02EB               	subwf	(increment@value+1)^(0+128),f
  7002  163C                     u4766:
  7003  163C  1703               	bsf	3,6	;RP1=1, select bank3
  7004  163D  0812               	movf	(??_increment+2)^(0+384),w
  7005  163E  1C03               	skipc
  7006  163F  0F12               	incfsz	(??_increment+2)^(0+384),w
  7007  1640  2E42               	goto	u4767
  7008  1641  2E44               	goto	u4768
  7009  1642                     u4767:
  7010  1642  1303               	bcf	3,6	;RP1=0, select bank1
  7011  1643  02EC               	subwf	(increment@value+2)^(0+128),f
  7012  1644                     u4768:
  7013  1644  1703               	bsf	3,6	;RP1=1, select bank3
  7014  1645  0813               	movf	(??_increment+3)^(0+384),w
  7015  1646  1C03               	skipc
  7016  1647  0F13               	incfsz	(??_increment+3)^(0+384),w
  7017  1648  2E4A               	goto	u4769
  7018  1649  2E4C               	goto	u4760
  7019  164A                     u4769:
  7020  164A  1303               	bcf	3,6	;RP1=0, select bank1
  7021  164B  02ED               	subwf	(increment@value+3)^(0+128),f
  7022  164C                     u4760:
  7023  164C  1703               	bsf	3,6	;RP1=1, select bank3
  7024  164D  1303               	bcf	3,6	;RP1=0, select bank1
  7025                           
  7026                           ;newmain.c: 697:         }
  7027  164E  0008               	return
  7028  164F                     l3292:
  7029                           
  7030                           ;newmain.c: 699:             value += 1;
  7031  164F  3001               	movlw	1
  7032  1650  1683               	bsf	3,5	;RP0=1, select bank1
  7033  1651  1303               	bcf	3,6	;RP1=0, select bank1
  7034  1652  07EA               	addwf	increment@value^(0+128),f
  7035  1653  3000               	movlw	0
  7036  1654  1803               	skipnc
  7037  1655  3001               	movlw	1
  7038  1656  07EB               	addwf	(increment@value+1)^(0+128),f
  7039  1657  3000               	movlw	0
  7040  1658  1803               	skipnc
  7041  1659  3001               	movlw	1
  7042  165A  07EC               	addwf	(increment@value+2)^(0+128),f
  7043  165B  3000               	movlw	0
  7044  165C  1803               	skipnc
  7045  165D  3001               	movlw	1
  7046  165E  07ED               	addwf	(increment@value+3)^(0+128),f
  7047                           
  7048                           ;newmain.c: 702:     return value;
  7049  165F  0008               	return
  7050  1660                     __end_of_increment:
  7051                           
  7052                           	psect	text21
  7053  05DA                     __ptext21:	
  7054 ;; *************** function _display1 *****************
  7055 ;; Defined at:
  7056 ;;		line 396 in file "newmain.c"
  7057 ;; Parameters:    Size  Location     Type
  7058 ;;  value           4   10[BANK1 ] unsigned long 
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;  dot             1    0[BANK3 ] unsigned char 
  7061 ;; Return value:  Size  Location     Type
  7062 ;;                  1    wreg      void 
  7063 ;; Registers used:
  7064 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7065 ;; Tracked objects:
  7066 ;;		On entry : 300/100
  7067 ;;		On exit  : 300/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7070 ;;      Params:         0       0       4       0       0
  7071 ;;      Locals:         0       0       0       1       0
  7072 ;;      Temps:          0       0       2       0       0
  7073 ;;      Totals:         0       0       6       1       0
  7074 ;;Total ram usage:        7 bytes
  7075 ;; Hardware stack levels used: 1
  7076 ;; Hardware stack levels required when called: 3
  7077 ;; This function calls:
  7078 ;;		___lldiv
  7079 ;;		___llmod
  7080 ;;		_dataPass
  7081 ;; This function is called by:
  7082 ;;		_viewMenu
  7083 ;;		_editMenu
  7084 ;; This function uses a non-reentrant model
  7085 ;;
  7086                           
  7087                           
  7088                           ;psect for function _display1
  7089  05DA                     _display1:
  7090                           
  7091                           ;newmain.c: 398:     if(value/10000 == 0){
  7092                           
  7093                           ;incstack = 0
  7094                           ; Regs used in _display1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7095  05DA  3000               	movlw	0
  7096  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  7097  05DC  00C3               	movwf	___lldiv@divisor+3
  7098  05DD  3000               	movlw	0
  7099  05DE  00C2               	movwf	___lldiv@divisor+2
  7100  05DF  3027               	movlw	39
  7101  05E0  00C1               	movwf	___lldiv@divisor+1
  7102  05E1  3010               	movlw	16
  7103  05E2  00C0               	movwf	___lldiv@divisor
  7104  05E3  1683               	bsf	3,5	;RP0=1, select bank1
  7105  05E4  086D               	movf	(display1@value+3)^(0+128),w
  7106  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  7107  05E6  00C7               	movwf	___lldiv@dividend+3
  7108  05E7  1683               	bsf	3,5	;RP0=1, select bank1
  7109  05E8  086C               	movf	(display1@value+2)^(0+128),w
  7110  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  7111  05EA  00C6               	movwf	___lldiv@dividend+2
  7112  05EB  1683               	bsf	3,5	;RP0=1, select bank1
  7113  05EC  086B               	movf	(display1@value+1)^(0+128),w
  7114  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  7115  05EE  00C5               	movwf	___lldiv@dividend+1
  7116  05EF  1683               	bsf	3,5	;RP0=1, select bank1
  7117  05F0  086A               	movf	display1@value^(0+128),w
  7118  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  7119  05F2  00C4               	movwf	___lldiv@dividend
  7120  05F3  160A  118A  20FA  120A  118A  	fcall	___lldiv
  7121  05F8  0843               	movf	?___lldiv+3,w
  7122  05F9  0442               	iorwf	?___lldiv+2,w
  7123  05FA  0441               	iorwf	?___lldiv+1,w
  7124  05FB  0440               	iorwf	?___lldiv,w
  7125  05FC  1D03               	skipz
  7126  05FD  2E40               	goto	l3388
  7127                           
  7128                           ;newmain.c: 399:         if(viewMenuPointer == 0 && editMenuPointer == 0){
  7129  05FE  085D               	movf	_viewMenuPointer,w	;volatile
  7130  05FF  1D03               	btfss	3,2
  7131  0600  2E06               	goto	l3350
  7132  0601  085C               	movf	_editMenuPointer,w	;volatile
  7133  0602  1D03               	btfss	3,2
  7134  0603  2E06               	goto	l3350
  7135                           
  7136                           ;newmain.c: 400:             dataPass(FONT_DEFAULT[44] | 0x20);
  7137  0604  302D               	movlw	low (((_FONT_DEFAULT+44)-__stringbase)| (0+32768))
  7138  0605  2E38               	goto	L15
  7139  0606                     l3350:	
  7140                           ;newmain.c: 401:         }
  7141                           
  7142  0606  035D               	decf	_viewMenuPointer,w	;volatile
  7143  0607  1D03               	btfss	3,2
  7144  0608  2E0E               	goto	l3356
  7145  0609  085C               	movf	_editMenuPointer,w	;volatile
  7146  060A  1D03               	btfss	3,2
  7147  060B  2E0E               	goto	l3356
  7148                           
  7149                           ;newmain.c: 403:             dataPass(FONT_DEFAULT[82] | 0x20);
  7150  060C  3053               	movlw	low (((_FONT_DEFAULT+82)-__stringbase)| (0+32768))
  7151  060D  2E38               	goto	L15
  7152  060E                     l3356:	
  7153                           ;newmain.c: 404:         }
  7154                           
  7155  060E  3002               	movlw	2
  7156  060F  065D               	xorwf	_viewMenuPointer,w	;volatile
  7157  0610  1D03               	btfss	3,2
  7158  0611  2E17               	goto	l3362
  7159  0612  085C               	movf	_editMenuPointer,w	;volatile
  7160  0613  1D03               	btfss	3,2
  7161  0614  2E17               	goto	l3362
  7162                           
  7163                           ;newmain.c: 406:             dataPass(FONT_DEFAULT['d' - 32] | 0x20);
  7164  0615  3045               	movlw	low (((_FONT_DEFAULT+68)-__stringbase)| (0+32768))
  7165  0616  2E38               	goto	L15
  7166  0617                     l3362:	
  7167                           ;newmain.c: 407:         }
  7168                           
  7169  0617  3003               	movlw	3
  7170  0618  065D               	xorwf	_viewMenuPointer,w	;volatile
  7171  0619  1D03               	btfss	3,2
  7172  061A  2E20               	goto	l3368
  7173  061B  085C               	movf	_editMenuPointer,w	;volatile
  7174  061C  1D03               	btfss	3,2
  7175  061D  2E20               	goto	l3368
  7176                           
  7177                           ;newmain.c: 409:             dataPass(FONT_DEFAULT['H' - 32] | 0x20);
  7178  061E  3029               	movlw	low (((_FONT_DEFAULT+40)-__stringbase)| (0+32768))
  7179  061F  2E38               	goto	L15
  7180  0620                     l3368:	
  7181                           ;newmain.c: 410:         }
  7182                           
  7183  0620  035C               	decf	_editMenuPointer,w	;volatile
  7184  0621  1D03               	btfss	3,2
  7185  0622  2E25               	goto	l3372
  7186                           
  7187                           ;newmain.c: 412:             dataPass(FONT_DEFAULT['F' - 32] | 0x20);
  7188  0623  3027               	movlw	low (((_FONT_DEFAULT+38)-__stringbase)| (0+32768))
  7189  0624  2E38               	goto	L15
  7190  0625                     l3372:	
  7191                           ;newmain.c: 413:         }
  7192                           
  7193  0625  3002               	movlw	2
  7194  0626  065C               	xorwf	_editMenuPointer,w	;volatile
  7195  0627  1903               	btfsc	3,2
  7196  0628  2E37               	goto	L16
  7197                           
  7198                           ;newmain.c: 416:         }
  7199                           
  7200                           ;newmain.c: 415:             dataPass(FONT_DEFAULT['P'- 32] | 0x20);
  7201  0629  3003               	movlw	3
  7202  062A  065C               	xorwf	_editMenuPointer,w	;volatile
  7203  062B  1903               	btfsc	3,2
  7204  062C  2E37               	goto	L16
  7205                           
  7206                           ;newmain.c: 419:         }
  7207                           
  7208                           ;newmain.c: 418:             dataPass(FONT_DEFAULT['P'- 32] | 0x20);
  7209  062D  3004               	movlw	4
  7210  062E  065C               	xorwf	_editMenuPointer,w	;volatile
  7211  062F  1D03               	btfss	3,2
  7212  0630  2E33               	goto	l3384
  7213                           
  7214                           ;newmain.c: 421:             dataPass(FONT_DEFAULT['C'- 32] | 0x20);
  7215  0631  3024               	movlw	low (((_FONT_DEFAULT+35)-__stringbase)| (0+32768))
  7216  0632  2E38               	goto	L15
  7217  0633                     l3384:	
  7218                           ;newmain.c: 422:         }
  7219                           
  7220  0633  3005               	movlw	5
  7221  0634  065C               	xorwf	_editMenuPointer,w	;volatile
  7222  0635  1D03               	btfss	3,2
  7223  0636  2E67               	goto	l3390
  7224  0637                     L16:
  7225                           
  7226                           ;newmain.c: 424:             dataPass(FONT_DEFAULT['P'- 32] | 0x20);
  7227  0637  3031               	movlw	low (((_FONT_DEFAULT+48)-__stringbase)| (0+32768))
  7228  0638                     L15:
  7229  0638  0084               	movwf	4
  7230  0639  160A  118A  2000  120A  118A  	fcall	stringdir
  7231  063E  3820               	iorlw	32
  7232  063F  2E62               	goto	L2
  7233  0640                     l3388:
  7234                           
  7235                           ;newmain.c: 428:         dataPass(segCode[value/10000]);
  7236  0640  3000               	movlw	0
  7237  0641  00C3               	movwf	___lldiv@divisor+3
  7238  0642  3000               	movlw	0
  7239  0643  00C2               	movwf	___lldiv@divisor+2
  7240  0644  3027               	movlw	39
  7241  0645  00C1               	movwf	___lldiv@divisor+1
  7242  0646  3010               	movlw	16
  7243  0647  00C0               	movwf	___lldiv@divisor
  7244  0648  1683               	bsf	3,5	;RP0=1, select bank1
  7245  0649  086D               	movf	(display1@value+3)^(0+128),w
  7246  064A  1283               	bcf	3,5	;RP0=0, select bank0
  7247  064B  00C7               	movwf	___lldiv@dividend+3
  7248  064C  1683               	bsf	3,5	;RP0=1, select bank1
  7249  064D  086C               	movf	(display1@value+2)^(0+128),w
  7250  064E  1283               	bcf	3,5	;RP0=0, select bank0
  7251  064F  00C6               	movwf	___lldiv@dividend+2
  7252  0650  1683               	bsf	3,5	;RP0=1, select bank1
  7253  0651  086B               	movf	(display1@value+1)^(0+128),w
  7254  0652  1283               	bcf	3,5	;RP0=0, select bank0
  7255  0653  00C5               	movwf	___lldiv@dividend+1
  7256  0654  1683               	bsf	3,5	;RP0=1, select bank1
  7257  0655  086A               	movf	display1@value^(0+128),w
  7258  0656  1283               	bcf	3,5	;RP0=0, select bank0
  7259  0657  00C4               	movwf	___lldiv@dividend
  7260  0658  160A  118A  20FA  120A  118A  	fcall	___lldiv
  7261  065D  0840               	movf	?___lldiv,w
  7262  065E  3EBE               	addlw	(low (_segCode| 0))& (0+255)
  7263  065F  0084               	movwf	4
  7264  0660  1383               	bcf	3,7	;select IRP bank1
  7265  0661  0800               	movf	0,w
  7266  0662                     L2:
  7267  0662  160A  158A  25A1  120A  118A  	fcall	_dataPass
  7268  0667                     l3390:
  7269                           
  7270                           ;newmain.c: 430:     RA2 = 0;
  7271  0667  1105               	bcf	5,2	;volatile
  7272                           
  7273                           ;newmain.c: 431:     RA0 = 0;
  7274  0668  1005               	bcf	5,0	;volatile
  7275                           
  7276                           ;newmain.c: 432:     RA1 = 1;
  7277  0669  1485               	bsf	5,1	;volatile
  7278                           
  7279                           ;newmain.c: 433:     RA3 = 1;
  7280  066A  1585               	bsf	5,3	;volatile
  7281                           
  7282                           ;newmain.c: 434:     _delay((unsigned long)((1)*(20000000/4000.0)));
  7283  066B  3007               	movlw	7
  7284  066C  1683               	bsf	3,5	;RP0=1, select bank1
  7285  066D  1303               	bcf	3,6	;RP1=0, select bank1
  7286  066E  00EF               	movwf	(??_display1^(0+128)+1)
  7287  066F  307C               	movlw	124
  7288  0670  00EE               	movwf	??_display1^(0+128)
  7289  0671                     u6257:
  7290  0671  0BEE               	decfsz	??_display1^(0+128),f
  7291  0672  2E71               	goto	u6257
  7292  0673  0BEF               	decfsz	(??_display1^(0+128)+1),f
  7293  0674  2E71               	goto	u6257
  7294  0675  0000               	nop
  7295                           
  7296                           ;newmain.c: 436:     if(currentDisplay == 1 && blinkValue > 10){
  7297  0676  1283               	bcf	3,5	;RP0=0, select bank0
  7298  0677  1303               	bcf	3,6	;RP1=0, select bank0
  7299  0678  035E               	decf	_currentDisplay,w	;volatile
  7300  0679  1D03               	btfss	3,2
  7301  067A  2E81               	goto	l3406
  7302  067B  300B               	movlw	11
  7303  067C  025B               	subwf	_blinkValue,w	;volatile
  7304  067D  1C03               	skipc
  7305  067E  2E81               	goto	l3406
  7306                           
  7307                           ;newmain.c: 437:         dataPass (0x00);
  7308  067F  3000               	movlw	0
  7309  0680  2EC1               	goto	L3
  7310  0681                     l3406:	
  7311                           ;newmain.c: 438:     }
  7312                           
  7313                           
  7314                           ;newmain.c: 440:         dataPass(segCode[(value/1000)%10]);
  7315  0681  3000               	movlw	0
  7316  0682  1683               	bsf	3,5	;RP0=1, select bank1
  7317  0683  00E3               	movwf	(___llmod@divisor+3)^(0+128)
  7318  0684  3000               	movlw	0
  7319  0685  00E2               	movwf	(___llmod@divisor+2)^(0+128)
  7320  0686  3000               	movlw	0
  7321  0687  00E1               	movwf	(___llmod@divisor+1)^(0+128)
  7322  0688  300A               	movlw	10
  7323  0689  00E0               	movwf	___llmod@divisor^(0+128)
  7324  068A  3000               	movlw	0
  7325  068B  1283               	bcf	3,5	;RP0=0, select bank0
  7326  068C  00C3               	movwf	___lldiv@divisor+3
  7327  068D  3000               	movlw	0
  7328  068E  00C2               	movwf	___lldiv@divisor+2
  7329  068F  3003               	movlw	3
  7330  0690  00C1               	movwf	___lldiv@divisor+1
  7331  0691  30E8               	movlw	232
  7332  0692  00C0               	movwf	___lldiv@divisor
  7333  0693  1683               	bsf	3,5	;RP0=1, select bank1
  7334  0694  086D               	movf	(display1@value+3)^(0+128),w
  7335  0695  1283               	bcf	3,5	;RP0=0, select bank0
  7336  0696  00C7               	movwf	___lldiv@dividend+3
  7337  0697  1683               	bsf	3,5	;RP0=1, select bank1
  7338  0698  086C               	movf	(display1@value+2)^(0+128),w
  7339  0699  1283               	bcf	3,5	;RP0=0, select bank0
  7340  069A  00C6               	movwf	___lldiv@dividend+2
  7341  069B  1683               	bsf	3,5	;RP0=1, select bank1
  7342  069C  086B               	movf	(display1@value+1)^(0+128),w
  7343  069D  1283               	bcf	3,5	;RP0=0, select bank0
  7344  069E  00C5               	movwf	___lldiv@dividend+1
  7345  069F  1683               	bsf	3,5	;RP0=1, select bank1
  7346  06A0  086A               	movf	display1@value^(0+128),w
  7347  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  7348  06A2  00C4               	movwf	___lldiv@dividend
  7349  06A3  160A  118A  20FA  120A  118A  	fcall	___lldiv
  7350  06A8  0843               	movf	?___lldiv+3,w
  7351  06A9  1683               	bsf	3,5	;RP0=1, select bank1
  7352  06AA  00E7               	movwf	(___llmod@dividend+3)^(0+128)
  7353  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  7354  06AC  0842               	movf	?___lldiv+2,w
  7355  06AD  1683               	bsf	3,5	;RP0=1, select bank1
  7356  06AE  00E6               	movwf	(___llmod@dividend+2)^(0+128)
  7357  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  7358  06B0  0841               	movf	?___lldiv+1,w
  7359  06B1  1683               	bsf	3,5	;RP0=1, select bank1
  7360  06B2  00E5               	movwf	(___llmod@dividend+1)^(0+128)
  7361  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  7362  06B4  0840               	movf	?___lldiv,w
  7363  06B5  1683               	bsf	3,5	;RP0=1, select bank1
  7364  06B6  00E4               	movwf	___llmod@dividend^(0+128)
  7365  06B7  160A  158A  27B4  120A  118A  	fcall	___llmod
  7366  06BC  0860               	movf	?___llmod^(0+128),w
  7367  06BD  3EBE               	addlw	(low (_segCode| 0))& (0+255)
  7368  06BE  0084               	movwf	4
  7369  06BF  1383               	bcf	3,7	;select IRP bank1
  7370  06C0  0800               	movf	0,w
  7371  06C1                     L3:
  7372  06C1  160A  158A  25A1  120A  118A  	fcall	_dataPass
  7373                           
  7374                           ;newmain.c: 442:     RA2 = 0;
  7375  06C6  1105               	bcf	5,2	;volatile
  7376                           
  7377                           ;newmain.c: 443:     RA0 = 0;
  7378  06C7  1005               	bcf	5,0	;volatile
  7379                           
  7380                           ;newmain.c: 444:     RA1 = 1;
  7381  06C8  1485               	bsf	5,1	;volatile
  7382                           
  7383                           ;newmain.c: 445:     RA3 = 0;
  7384  06C9  1185               	bcf	5,3	;volatile
  7385                           
  7386                           ;newmain.c: 446:     _delay((unsigned long)((1)*(20000000/4000.0)));
  7387  06CA  3007               	movlw	7
  7388  06CB  1683               	bsf	3,5	;RP0=1, select bank1
  7389  06CC  1303               	bcf	3,6	;RP1=0, select bank1
  7390  06CD  00EF               	movwf	(??_display1^(0+128)+1)
  7391  06CE  307C               	movlw	124
  7392  06CF  00EE               	movwf	??_display1^(0+128)
  7393  06D0                     u6267:
  7394  06D0  0BEE               	decfsz	??_display1^(0+128),f
  7395  06D1  2ED0               	goto	u6267
  7396  06D2  0BEF               	decfsz	(??_display1^(0+128)+1),f
  7397  06D3  2ED0               	goto	u6267
  7398  06D4  0000               	nop
  7399                           
  7400                           ;newmain.c: 448:     if(currentDisplay == 2 && blinkValue > 10){
  7401  06D5  3002               	movlw	2
  7402  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  7403  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  7404  06D8  065E               	xorwf	_currentDisplay,w	;volatile
  7405  06D9  1D03               	btfss	3,2
  7406  06DA  2EE1               	goto	l3424
  7407  06DB  300B               	movlw	11
  7408  06DC  025B               	subwf	_blinkValue,w	;volatile
  7409  06DD  1C03               	skipc
  7410  06DE  2EE1               	goto	l3424
  7411                           
  7412                           ;newmain.c: 449:         dataPass (0x00);
  7413  06DF  3000               	movlw	0
  7414  06E0  2F21               	goto	L4
  7415  06E1                     l3424:	
  7416                           ;newmain.c: 450:     }
  7417                           
  7418                           
  7419                           ;newmain.c: 452:         dataPass(segCode[(value/100)%10]);
  7420  06E1  3000               	movlw	0
  7421  06E2  1683               	bsf	3,5	;RP0=1, select bank1
  7422  06E3  00E3               	movwf	(___llmod@divisor+3)^(0+128)
  7423  06E4  3000               	movlw	0
  7424  06E5  00E2               	movwf	(___llmod@divisor+2)^(0+128)
  7425  06E6  3000               	movlw	0
  7426  06E7  00E1               	movwf	(___llmod@divisor+1)^(0+128)
  7427  06E8  300A               	movlw	10
  7428  06E9  00E0               	movwf	___llmod@divisor^(0+128)
  7429  06EA  3000               	movlw	0
  7430  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  7431  06EC  00C3               	movwf	___lldiv@divisor+3
  7432  06ED  3000               	movlw	0
  7433  06EE  00C2               	movwf	___lldiv@divisor+2
  7434  06EF  3000               	movlw	0
  7435  06F0  00C1               	movwf	___lldiv@divisor+1
  7436  06F1  3064               	movlw	100
  7437  06F2  00C0               	movwf	___lldiv@divisor
  7438  06F3  1683               	bsf	3,5	;RP0=1, select bank1
  7439  06F4  086D               	movf	(display1@value+3)^(0+128),w
  7440  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  7441  06F6  00C7               	movwf	___lldiv@dividend+3
  7442  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  7443  06F8  086C               	movf	(display1@value+2)^(0+128),w
  7444  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  7445  06FA  00C6               	movwf	___lldiv@dividend+2
  7446  06FB  1683               	bsf	3,5	;RP0=1, select bank1
  7447  06FC  086B               	movf	(display1@value+1)^(0+128),w
  7448  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  7449  06FE  00C5               	movwf	___lldiv@dividend+1
  7450  06FF  1683               	bsf	3,5	;RP0=1, select bank1
  7451  0700  086A               	movf	display1@value^(0+128),w
  7452  0701  1283               	bcf	3,5	;RP0=0, select bank0
  7453  0702  00C4               	movwf	___lldiv@dividend
  7454  0703  160A  118A  20FA  120A  118A  	fcall	___lldiv
  7455  0708  0843               	movf	?___lldiv+3,w
  7456  0709  1683               	bsf	3,5	;RP0=1, select bank1
  7457  070A  00E7               	movwf	(___llmod@dividend+3)^(0+128)
  7458  070B  1283               	bcf	3,5	;RP0=0, select bank0
  7459  070C  0842               	movf	?___lldiv+2,w
  7460  070D  1683               	bsf	3,5	;RP0=1, select bank1
  7461  070E  00E6               	movwf	(___llmod@dividend+2)^(0+128)
  7462  070F  1283               	bcf	3,5	;RP0=0, select bank0
  7463  0710  0841               	movf	?___lldiv+1,w
  7464  0711  1683               	bsf	3,5	;RP0=1, select bank1
  7465  0712  00E5               	movwf	(___llmod@dividend+1)^(0+128)
  7466  0713  1283               	bcf	3,5	;RP0=0, select bank0
  7467  0714  0840               	movf	?___lldiv,w
  7468  0715  1683               	bsf	3,5	;RP0=1, select bank1
  7469  0716  00E4               	movwf	___llmod@dividend^(0+128)
  7470  0717  160A  158A  27B4  120A  118A  	fcall	___llmod
  7471  071C  0860               	movf	?___llmod^(0+128),w
  7472  071D  3EBE               	addlw	(low (_segCode| 0))& (0+255)
  7473  071E  0084               	movwf	4
  7474  071F  1383               	bcf	3,7	;select IRP bank1
  7475  0720  0800               	movf	0,w
  7476  0721                     L4:
  7477  0721  160A  158A  25A1  120A  118A  	fcall	_dataPass
  7478                           
  7479                           ;newmain.c: 454:     RA2 = 0;
  7480  0726  1105               	bcf	5,2	;volatile
  7481                           
  7482                           ;newmain.c: 455:     RA0 = 0;
  7483  0727  1005               	bcf	5,0	;volatile
  7484                           
  7485                           ;newmain.c: 456:     RA1 = 0;
  7486  0728  1085               	bcf	5,1	;volatile
  7487                           
  7488                           ;newmain.c: 457:     RA3 = 1;
  7489  0729  1585               	bsf	5,3	;volatile
  7490                           
  7491                           ;newmain.c: 458:     _delay((unsigned long)((1)*(20000000/4000.0)));
  7492  072A  3007               	movlw	7
  7493  072B  1683               	bsf	3,5	;RP0=1, select bank1
  7494  072C  1303               	bcf	3,6	;RP1=0, select bank1
  7495  072D  00EF               	movwf	(??_display1^(0+128)+1)
  7496  072E  307C               	movlw	124
  7497  072F  00EE               	movwf	??_display1^(0+128)
  7498  0730                     u6277:
  7499  0730  0BEE               	decfsz	??_display1^(0+128),f
  7500  0731  2F30               	goto	u6277
  7501  0732  0BEF               	decfsz	(??_display1^(0+128)+1),f
  7502  0733  2F30               	goto	u6277
  7503  0734  0000               	nop
  7504                           
  7505                           ;newmain.c: 460:     if(currentDisplay == 3 && blinkValue > 10){
  7506  0735  3003               	movlw	3
  7507  0736  1283               	bcf	3,5	;RP0=0, select bank0
  7508  0737  1303               	bcf	3,6	;RP1=0, select bank0
  7509  0738  065E               	xorwf	_currentDisplay,w	;volatile
  7510  0739  1D03               	btfss	3,2
  7511  073A  2F41               	goto	l3442
  7512  073B  300B               	movlw	11
  7513  073C  025B               	subwf	_blinkValue,w	;volatile
  7514  073D  1C03               	skipc
  7515  073E  2F41               	goto	l3442
  7516                           
  7517                           ;newmain.c: 461:         dataPass (0x00);
  7518  073F  3000               	movlw	0
  7519  0740  2F96               	goto	L5
  7520  0741                     l3442:	
  7521                           ;newmain.c: 462:     }
  7522                           
  7523                           
  7524                           ;newmain.c: 464:         uint8_t dot = 0x20;
  7525  0741  3020               	movlw	32
  7526  0742  1683               	bsf	3,5	;RP0=1, select bank1
  7527  0743  00EE               	movwf	??_display1^(0+128)
  7528  0744  086E               	movf	??_display1^(0+128),w
  7529  0745  1703               	bsf	3,6	;RP1=1, select bank3
  7530  0746  0090               	movwf	display1@dot^(0+384)
  7531                           
  7532                           ;newmain.c: 465:         if(editMenuPointer || viewMenuPointer == 2){
  7533  0747  1283               	bcf	3,5	;RP0=0, select bank0
  7534  0748  1303               	bcf	3,6	;RP1=0, select bank0
  7535  0749  085C               	movf	_editMenuPointer,w	;volatile
  7536  074A  1D03               	btfss	3,2
  7537  074B  2F50               	goto	l3448
  7538  074C  3002               	movlw	2
  7539  074D  065D               	xorwf	_viewMenuPointer,w	;volatile
  7540  074E  1D03               	btfss	3,2
  7541  074F  2F53               	goto	l3450
  7542  0750                     l3448:
  7543                           
  7544                           ;newmain.c: 466:             dot = 0;
  7545  0750  1683               	bsf	3,5	;RP0=1, select bank3
  7546  0751  1703               	bsf	3,6	;RP1=1, select bank3
  7547  0752  0190               	clrf	display1@dot^(0+384)
  7548  0753                     l3450:
  7549                           
  7550                           ;newmain.c: 468:         dataPass(segCode[(value/10)%10] | dot);
  7551  0753  3000               	movlw	0
  7552  0754  1683               	bsf	3,5	;RP0=1, select bank1
  7553  0755  1303               	bcf	3,6	;RP1=0, select bank1
  7554  0756  00E3               	movwf	(___llmod@divisor+3)^(0+128)
  7555  0757  3000               	movlw	0
  7556  0758  00E2               	movwf	(___llmod@divisor+2)^(0+128)
  7557  0759  3000               	movlw	0
  7558  075A  00E1               	movwf	(___llmod@divisor+1)^(0+128)
  7559  075B  300A               	movlw	10
  7560  075C  00E0               	movwf	___llmod@divisor^(0+128)
  7561  075D  3000               	movlw	0
  7562  075E  1283               	bcf	3,5	;RP0=0, select bank0
  7563  075F  00C3               	movwf	___lldiv@divisor+3
  7564  0760  3000               	movlw	0
  7565  0761  00C2               	movwf	___lldiv@divisor+2
  7566  0762  3000               	movlw	0
  7567  0763  00C1               	movwf	___lldiv@divisor+1
  7568  0764  300A               	movlw	10
  7569  0765  00C0               	movwf	___lldiv@divisor
  7570  0766  1683               	bsf	3,5	;RP0=1, select bank1
  7571  0767  086D               	movf	(display1@value+3)^(0+128),w
  7572  0768  1283               	bcf	3,5	;RP0=0, select bank0
  7573  0769  00C7               	movwf	___lldiv@dividend+3
  7574  076A  1683               	bsf	3,5	;RP0=1, select bank1
  7575  076B  086C               	movf	(display1@value+2)^(0+128),w
  7576  076C  1283               	bcf	3,5	;RP0=0, select bank0
  7577  076D  00C6               	movwf	___lldiv@dividend+2
  7578  076E  1683               	bsf	3,5	;RP0=1, select bank1
  7579  076F  086B               	movf	(display1@value+1)^(0+128),w
  7580  0770  1283               	bcf	3,5	;RP0=0, select bank0
  7581  0771  00C5               	movwf	___lldiv@dividend+1
  7582  0772  1683               	bsf	3,5	;RP0=1, select bank1
  7583  0773  086A               	movf	display1@value^(0+128),w
  7584  0774  1283               	bcf	3,5	;RP0=0, select bank0
  7585  0775  00C4               	movwf	___lldiv@dividend
  7586  0776  160A  118A  20FA  120A  118A  	fcall	___lldiv
  7587  077B  0843               	movf	?___lldiv+3,w
  7588  077C  1683               	bsf	3,5	;RP0=1, select bank1
  7589  077D  00E7               	movwf	(___llmod@dividend+3)^(0+128)
  7590  077E  1283               	bcf	3,5	;RP0=0, select bank0
  7591  077F  0842               	movf	?___lldiv+2,w
  7592  0780  1683               	bsf	3,5	;RP0=1, select bank1
  7593  0781  00E6               	movwf	(___llmod@dividend+2)^(0+128)
  7594  0782  1283               	bcf	3,5	;RP0=0, select bank0
  7595  0783  0841               	movf	?___lldiv+1,w
  7596  0784  1683               	bsf	3,5	;RP0=1, select bank1
  7597  0785  00E5               	movwf	(___llmod@dividend+1)^(0+128)
  7598  0786  1283               	bcf	3,5	;RP0=0, select bank0
  7599  0787  0840               	movf	?___lldiv,w
  7600  0788  1683               	bsf	3,5	;RP0=1, select bank1
  7601  0789  00E4               	movwf	___llmod@dividend^(0+128)
  7602  078A  160A  158A  27B4  120A  118A  	fcall	___llmod
  7603  078F  0860               	movf	?___llmod^(0+128),w
  7604  0790  3EBE               	addlw	(low (_segCode| 0))& (0+255)
  7605  0791  0084               	movwf	4
  7606  0792  1383               	bcf	3,7	;select IRP bank1
  7607  0793  0800               	movf	0,w
  7608  0794  1703               	bsf	3,6	;RP1=1, select bank3
  7609  0795  0410               	iorwf	display1@dot^(0+384),w
  7610  0796                     L5:
  7611  0796  160A  158A  25A1  120A  118A  	fcall	_dataPass
  7612                           
  7613                           ;newmain.c: 470:     RA2 = 0;
  7614  079B  1105               	bcf	5,2	;volatile
  7615                           
  7616                           ;newmain.c: 471:     RA0 = 0;
  7617  079C  1005               	bcf	5,0	;volatile
  7618                           
  7619                           ;newmain.c: 472:     RA1 = 0;
  7620  079D  1085               	bcf	5,1	;volatile
  7621                           
  7622                           ;newmain.c: 473:     RA3 = 0;
  7623  079E  1185               	bcf	5,3	;volatile
  7624                           
  7625                           ;newmain.c: 474:     _delay((unsigned long)((1)*(20000000/4000.0)));
  7626  079F  3007               	movlw	7
  7627  07A0  1683               	bsf	3,5	;RP0=1, select bank1
  7628  07A1  1303               	bcf	3,6	;RP1=0, select bank1
  7629  07A2  00EF               	movwf	(??_display1^(0+128)+1)
  7630  07A3  307C               	movlw	124
  7631  07A4  00EE               	movwf	??_display1^(0+128)
  7632  07A5                     u6287:
  7633  07A5  0BEE               	decfsz	??_display1^(0+128),f
  7634  07A6  2FA5               	goto	u6287
  7635  07A7  0BEF               	decfsz	(??_display1^(0+128)+1),f
  7636  07A8  2FA5               	goto	u6287
  7637  07A9  0000               	nop
  7638                           
  7639                           ;newmain.c: 476:     if(currentDisplay == 4 && blinkValue > 10){
  7640  07AA  3004               	movlw	4
  7641  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  7642  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  7643  07AD  065E               	xorwf	_currentDisplay,w	;volatile
  7644  07AE  1D03               	btfss	3,2
  7645  07AF  2FB6               	goto	l3468
  7646  07B0  300B               	movlw	11
  7647  07B1  025B               	subwf	_blinkValue,w	;volatile
  7648  07B2  1C03               	skipc
  7649  07B3  2FB6               	goto	l3468
  7650                           
  7651                           ;newmain.c: 477:         dataPass (0x00);
  7652  07B4  3000               	movlw	0
  7653  07B5  2FD1               	goto	L6
  7654  07B6                     l3468:	
  7655                           ;newmain.c: 478:     }
  7656                           
  7657                           
  7658                           ;newmain.c: 480:         dataPass(segCode[value%10]);
  7659  07B6  3000               	movlw	0
  7660  07B7  1683               	bsf	3,5	;RP0=1, select bank1
  7661  07B8  00E3               	movwf	(___llmod@divisor+3)^(0+128)
  7662  07B9  3000               	movlw	0
  7663  07BA  00E2               	movwf	(___llmod@divisor+2)^(0+128)
  7664  07BB  3000               	movlw	0
  7665  07BC  00E1               	movwf	(___llmod@divisor+1)^(0+128)
  7666  07BD  300A               	movlw	10
  7667  07BE  00E0               	movwf	___llmod@divisor^(0+128)
  7668  07BF  086D               	movf	(display1@value+3)^(0+128),w
  7669  07C0  00E7               	movwf	(___llmod@dividend+3)^(0+128)
  7670  07C1  086C               	movf	(display1@value+2)^(0+128),w
  7671  07C2  00E6               	movwf	(___llmod@dividend+2)^(0+128)
  7672  07C3  086B               	movf	(display1@value+1)^(0+128),w
  7673  07C4  00E5               	movwf	(___llmod@dividend+1)^(0+128)
  7674  07C5  086A               	movf	display1@value^(0+128),w
  7675  07C6  00E4               	movwf	___llmod@dividend^(0+128)
  7676  07C7  160A  158A  27B4  120A  118A  	fcall	___llmod
  7677  07CC  0860               	movf	?___llmod^(0+128),w
  7678  07CD  3EBE               	addlw	(low (_segCode| 0))& (0+255)
  7679  07CE  0084               	movwf	4
  7680  07CF  1383               	bcf	3,7	;select IRP bank1
  7681  07D0  0800               	movf	0,w
  7682  07D1                     L6:
  7683  07D1  160A  158A  25A1  120A  118A  	fcall	_dataPass
  7684                           
  7685                           ;newmain.c: 482:     RA2 = 1;
  7686  07D6  1505               	bsf	5,2	;volatile
  7687                           
  7688                           ;newmain.c: 483:     RA0 = 1;
  7689  07D7  1405               	bsf	5,0	;volatile
  7690                           
  7691                           ;newmain.c: 484:     RA1 = 0;
  7692  07D8  1085               	bcf	5,1	;volatile
  7693                           
  7694                           ;newmain.c: 485:     RA3 = 1;
  7695  07D9  1585               	bsf	5,3	;volatile
  7696                           
  7697                           ;newmain.c: 486:     _delay((unsigned long)((1)*(20000000/4000.0)));
  7698  07DA  3007               	movlw	7
  7699  07DB  1683               	bsf	3,5	;RP0=1, select bank1
  7700  07DC  1303               	bcf	3,6	;RP1=0, select bank1
  7701  07DD  00EF               	movwf	(??_display1^(0+128)+1)
  7702  07DE  307C               	movlw	124
  7703  07DF  00EE               	movwf	??_display1^(0+128)
  7704  07E0                     u6297:
  7705  07E0  0BEE               	decfsz	??_display1^(0+128),f
  7706  07E1  2FE0               	goto	u6297
  7707  07E2  0BEF               	decfsz	(??_display1^(0+128)+1),f
  7708  07E3  2FE0               	goto	u6297
  7709  07E4  0000               	nop
  7710                           
  7711                           ;newmain.c: 488:     blinkValue += 1;
  7712  07E5  3001               	movlw	1
  7713  07E6  1683               	bsf	3,5	;RP0=1, select bank1
  7714  07E7  1303               	bcf	3,6	;RP1=0, select bank1
  7715  07E8  00EE               	movwf	??_display1^(0+128)
  7716  07E9  086E               	movf	??_display1^(0+128),w
  7717  07EA  1283               	bcf	3,5	;RP0=0, select bank0
  7718  07EB  07DB               	addwf	_blinkValue,f	;volatile
  7719                           
  7720                           ;newmain.c: 489:     if(blinkValue > 20){
  7721  07EC  3015               	movlw	21
  7722  07ED  025B               	subwf	_blinkValue,w	;volatile
  7723  07EE  1C03               	skipc
  7724  07EF  0008               	return
  7725                           
  7726                           ;newmain.c: 490:         blinkValue = 0;
  7727  07F0  01DB               	clrf	_blinkValue	;volatile
  7728  07F1  0008               	return
  7729  07F2                     __end_of_display1:
  7730                           
  7731                           	psect	text22
  7732  1DA1                     __ptext22:	
  7733 ;; *************** function _dataPass *****************
  7734 ;; Defined at:
  7735 ;;		line 386 in file "newmain.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;  data            1    wreg     unsigned char 
  7738 ;; Auto vars:     Size  Location     Type
  7739 ;;  data            1   18[BANK0 ] unsigned char 
  7740 ;;  i               1   19[BANK0 ] unsigned char 
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  1    wreg      void 
  7743 ;; Registers used:
  7744 ;;		wreg, status,2, status,0
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 300/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7750 ;;      Params:         0       0       0       0       0
  7751 ;;      Locals:         0       2       0       0       0
  7752 ;;      Temps:          0       1       0       0       0
  7753 ;;      Totals:         0       3       0       0       0
  7754 ;;Total ram usage:        3 bytes
  7755 ;; Hardware stack levels used: 1
  7756 ;; Hardware stack levels required when called: 2
  7757 ;; This function calls:
  7758 ;;		Nothing
  7759 ;; This function is called by:
  7760 ;;		_display1
  7761 ;;		_display2
  7762 ;;		_led
  7763 ;;		_displayString
  7764 ;; This function uses a non-reentrant model
  7765 ;;
  7766                           
  7767                           
  7768                           ;psect for function _dataPass
  7769  1DA1                     _dataPass:
  7770                           
  7771                           ;incstack = 0
  7772                           ; Regs used in _dataPass: [wreg+status,2+status,0]
  7773                           ;dataPass@data stored from wreg
  7774  1DA1  1283               	bcf	3,5	;RP0=0, select bank0
  7775  1DA2  1303               	bcf	3,6	;RP1=0, select bank0
  7776  1DA3  00B2               	movwf	dataPass@data
  7777                           
  7778                           ;newmain.c: 387:     for (uint8_t i=0 ; i<8 ; i++){
  7779  1DA4  01B3               	clrf	dataPass@i
  7780  1DA5                     l3254:
  7781                           
  7782                           ;newmain.c: 388:         RB1 = (data >> i) & 0x01;
  7783  1DA5  0832               	movf	dataPass@data,w
  7784  1DA6  00B1               	movwf	??_dataPass
  7785  1DA7  0A33               	incf	dataPass@i,w
  7786  1DA8  2DAB               	goto	u4614
  7787  1DA9                     u4615:
  7788  1DA9  1003               	clrc
  7789  1DAA  0CB1               	rrf	??_dataPass,f
  7790  1DAB                     u4614:
  7791  1DAB  3EFF               	addlw	-1
  7792  1DAC  1D03               	skipz
  7793  1DAD  2DA9               	goto	u4615
  7794  1DAE  1C31               	btfss	??_dataPass,0
  7795  1DAF  2DB4               	goto	u4620
  7796  1DB0  1283               	bcf	3,5	;RP0=0, select bank0
  7797  1DB1  1303               	bcf	3,6	;RP1=0, select bank0
  7798  1DB2  1486               	bsf	6,1	;volatile
  7799  1DB3  2DB7               	goto	l3256
  7800  1DB4                     u4620:
  7801  1DB4  1283               	bcf	3,5	;RP0=0, select bank0
  7802  1DB5  1303               	bcf	3,6	;RP1=0, select bank0
  7803  1DB6  1086               	bcf	6,1	;volatile
  7804  1DB7                     l3256:
  7805                           
  7806                           ;newmain.c: 389:         RB3 = 1;
  7807  1DB7  1586               	bsf	6,3	;volatile
  7808                           
  7809                           ;newmain.c: 390:         RB3 = 0;
  7810  1DB8  1186               	bcf	6,3	;volatile
  7811                           
  7812                           ;newmain.c: 391:     }
  7813  1DB9  3001               	movlw	1
  7814  1DBA  00B1               	movwf	??_dataPass
  7815  1DBB  0831               	movf	??_dataPass,w
  7816  1DBC  07B3               	addwf	dataPass@i,f
  7817  1DBD  3008               	movlw	8
  7818  1DBE  0233               	subwf	dataPass@i,w
  7819  1DBF  1C03               	skipc
  7820  1DC0  2DA5               	goto	l3254
  7821                           
  7822                           ;newmain.c: 392:     RB2 = 1;
  7823  1DC1  1506               	bsf	6,2	;volatile
  7824                           
  7825                           ;newmain.c: 393:     RB2 = 0;
  7826  1DC2  1106               	bcf	6,2	;volatile
  7827  1DC3  0008               	return
  7828  1DC4                     __end_of_dataPass:
  7829                           
  7830                           	psect	text23
  7831  1FB4                     __ptext23:	
  7832 ;; *************** function ___llmod *****************
  7833 ;; Defined at:
  7834 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/common/llmod.c"
  7835 ;; Parameters:    Size  Location     Type
  7836 ;;  divisor         4    0[BANK1 ] unsigned long 
  7837 ;;  dividend        4    4[BANK1 ] unsigned long 
  7838 ;; Auto vars:     Size  Location     Type
  7839 ;;  counter         1    9[BANK1 ] unsigned char 
  7840 ;; Return value:  Size  Location     Type
  7841 ;;                  4    0[BANK1 ] unsigned long 
  7842 ;; Registers used:
  7843 ;;		wreg, status,2, status,0
  7844 ;; Tracked objects:
  7845 ;;		On entry : 300/100
  7846 ;;		On exit  : 300/100
  7847 ;;		Unchanged: 0/0
  7848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7849 ;;      Params:         0       0       8       0       0
  7850 ;;      Locals:         0       0       1       0       0
  7851 ;;      Temps:          0       0       1       0       0
  7852 ;;      Totals:         0       0      10       0       0
  7853 ;;Total ram usage:       10 bytes
  7854 ;; Hardware stack levels used: 1
  7855 ;; Hardware stack levels required when called: 2
  7856 ;; This function calls:
  7857 ;;		Nothing
  7858 ;; This function is called by:
  7859 ;;		_main
  7860 ;;		_editValues
  7861 ;;		_display1
  7862 ;;		_display2
  7863 ;;		_increment
  7864 ;; This function uses a non-reentrant model
  7865 ;;
  7866                           
  7867                           
  7868                           ;psect for function ___llmod
  7869  1FB4                     ___llmod:
  7870                           
  7871                           ;incstack = 0
  7872                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7873  1FB4  0863               	movf	(___llmod@divisor+3)^(0+128),w
  7874  1FB5  0462               	iorwf	(___llmod@divisor+2)^(0+128),w
  7875  1FB6  0461               	iorwf	(___llmod@divisor+1)^(0+128),w
  7876  1FB7  0460               	iorwf	___llmod@divisor^(0+128),w
  7877  1FB8  1903               	skipnz
  7878  1FB9  2FF7               	goto	l3244
  7879  1FBA  01E9               	clrf	___llmod@counter^(0+128)
  7880  1FBB  0AE9               	incf	___llmod@counter^(0+128),f
  7881  1FBC                     l3234:
  7882  1FBC  1BE3               	btfsc	(___llmod@divisor+3)^(0+128),7
  7883  1FBD  2FCC               	goto	l3236
  7884  1FBE  3001               	movlw	1
  7885  1FBF  00E8               	movwf	??___llmod^(0+128)
  7886  1FC0                     u4565:
  7887  1FC0  1003               	clrc
  7888  1FC1  0DE0               	rlf	___llmod@divisor^(0+128),f
  7889  1FC2  0DE1               	rlf	(___llmod@divisor+1)^(0+128),f
  7890  1FC3  0DE2               	rlf	(___llmod@divisor+2)^(0+128),f
  7891  1FC4  0DE3               	rlf	(___llmod@divisor+3)^(0+128),f
  7892  1FC5  0BE8               	decfsz	??___llmod^(0+128),f
  7893  1FC6  2FC0               	goto	u4565
  7894  1FC7  3001               	movlw	1
  7895  1FC8  00E8               	movwf	??___llmod^(0+128)
  7896  1FC9  0868               	movf	??___llmod^(0+128),w
  7897  1FCA  07E9               	addwf	___llmod@counter^(0+128),f
  7898  1FCB  2FBC               	goto	l3234
  7899  1FCC                     l3236:
  7900  1FCC  0863               	movf	(___llmod@divisor+3)^(0+128),w
  7901  1FCD  0267               	subwf	(___llmod@dividend+3)^(0+128),w
  7902  1FCE  1D03               	skipz
  7903  1FCF  2FDA               	goto	u4585
  7904  1FD0  0862               	movf	(___llmod@divisor+2)^(0+128),w
  7905  1FD1  0266               	subwf	(___llmod@dividend+2)^(0+128),w
  7906  1FD2  1D03               	skipz
  7907  1FD3  2FDA               	goto	u4585
  7908  1FD4  0861               	movf	(___llmod@divisor+1)^(0+128),w
  7909  1FD5  0265               	subwf	(___llmod@dividend+1)^(0+128),w
  7910  1FD6  1D03               	skipz
  7911  1FD7  2FDA               	goto	u4585
  7912  1FD8  0860               	movf	___llmod@divisor^(0+128),w
  7913  1FD9  0264               	subwf	___llmod@dividend^(0+128),w
  7914  1FDA                     u4585:
  7915  1FDA  1C03               	skipc
  7916  1FDB  2FEA               	goto	l3240
  7917  1FDC  0860               	movf	___llmod@divisor^(0+128),w
  7918  1FDD  02E4               	subwf	___llmod@dividend^(0+128),f
  7919  1FDE  0861               	movf	(___llmod@divisor+1)^(0+128),w
  7920  1FDF  1C03               	skipc
  7921  1FE0  0F61               	incfsz	(___llmod@divisor+1)^(0+128),w
  7922  1FE1  02E5               	subwf	(___llmod@dividend+1)^(0+128),f
  7923  1FE2  0862               	movf	(___llmod@divisor+2)^(0+128),w
  7924  1FE3  1C03               	skipc
  7925  1FE4  0F62               	incfsz	(___llmod@divisor+2)^(0+128),w
  7926  1FE5  02E6               	subwf	(___llmod@dividend+2)^(0+128),f
  7927  1FE6  0863               	movf	(___llmod@divisor+3)^(0+128),w
  7928  1FE7  1C03               	skipc
  7929  1FE8  0F63               	incfsz	(___llmod@divisor+3)^(0+128),w
  7930  1FE9  02E7               	subwf	(___llmod@dividend+3)^(0+128),f
  7931  1FEA                     l3240:
  7932  1FEA  3001               	movlw	1
  7933  1FEB                     u4595:
  7934  1FEB  1003               	clrc
  7935  1FEC  0CE3               	rrf	(___llmod@divisor+3)^(0+128),f
  7936  1FED  0CE2               	rrf	(___llmod@divisor+2)^(0+128),f
  7937  1FEE  0CE1               	rrf	(___llmod@divisor+1)^(0+128),f
  7938  1FEF  0CE0               	rrf	___llmod@divisor^(0+128),f
  7939  1FF0  3EFF               	addlw	-1
  7940  1FF1  1D03               	skipz
  7941  1FF2  2FEB               	goto	u4595
  7942  1FF3  3001               	movlw	1
  7943  1FF4  02E9               	subwf	___llmod@counter^(0+128),f
  7944  1FF5  1D03               	btfss	3,2
  7945  1FF6  2FCC               	goto	l3236
  7946  1FF7                     l3244:
  7947  1FF7  0867               	movf	(___llmod@dividend+3)^(0+128),w
  7948  1FF8  00E3               	movwf	(?___llmod+3)^(0+128)
  7949  1FF9  0866               	movf	(___llmod@dividend+2)^(0+128),w
  7950  1FFA  00E2               	movwf	(?___llmod+2)^(0+128)
  7951  1FFB  0865               	movf	(___llmod@dividend+1)^(0+128),w
  7952  1FFC  00E1               	movwf	(?___llmod+1)^(0+128)
  7953  1FFD  0864               	movf	___llmod@dividend^(0+128),w
  7954  1FFE  00E0               	movwf	?___llmod^(0+128)
  7955  1FFF  0008               	return
  7956  2000                     __end_of___llmod:
  7957                           
  7958                           	psect	text24
  7959  10FA                     __ptext24:	
  7960 ;; *************** function ___lldiv *****************
  7961 ;; Defined at:
  7962 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/common/__lldiv.c"
  7963 ;; Parameters:    Size  Location     Type
  7964 ;;  divisor         4   32[BANK0 ] unsigned long 
  7965 ;;  dividend        4   36[BANK0 ] unsigned long 
  7966 ;; Auto vars:     Size  Location     Type
  7967 ;;  quotient        4   41[BANK0 ] unsigned long 
  7968 ;;  counter         1   45[BANK0 ] unsigned char 
  7969 ;; Return value:  Size  Location     Type
  7970 ;;                  4   32[BANK0 ] unsigned long 
  7971 ;; Registers used:
  7972 ;;		wreg, status,2, status,0
  7973 ;; Tracked objects:
  7974 ;;		On entry : 300/0
  7975 ;;		On exit  : 300/0
  7976 ;;		Unchanged: 0/0
  7977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7978 ;;      Params:         0       8       0       0       0
  7979 ;;      Locals:         0       5       0       0       0
  7980 ;;      Temps:          0       1       0       0       0
  7981 ;;      Totals:         0      14       0       0       0
  7982 ;;Total ram usage:       14 bytes
  7983 ;; Hardware stack levels used: 1
  7984 ;; Hardware stack levels required when called: 2
  7985 ;; This function calls:
  7986 ;;		Nothing
  7987 ;; This function is called by:
  7988 ;;		_main
  7989 ;;		_eepromRead
  7990 ;;		_editValues
  7991 ;;		_display1
  7992 ;;		_display2
  7993 ;; This function uses a non-reentrant model
  7994 ;;
  7995                           
  7996                           
  7997                           ;psect for function ___lldiv
  7998  10FA                     ___lldiv:
  7999                           
  8000                           ;incstack = 0
  8001                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8002  10FA  3000               	movlw	0
  8003  10FB  00CC               	movwf	___lldiv@quotient+3
  8004  10FC  3000               	movlw	0
  8005  10FD  00CB               	movwf	___lldiv@quotient+2
  8006  10FE  3000               	movlw	0
  8007  10FF  00CA               	movwf	___lldiv@quotient+1
  8008  1100  3000               	movlw	0
  8009  1101  00C9               	movwf	___lldiv@quotient
  8010  1102  0843               	movf	___lldiv@divisor+3,w
  8011  1103  0442               	iorwf	___lldiv@divisor+2,w
  8012  1104  0441               	iorwf	___lldiv@divisor+1,w
  8013  1105  0440               	iorwf	___lldiv@divisor,w
  8014  1106  1903               	skipnz
  8015  1107  294F               	goto	l3318
  8016  1108  01CD               	clrf	___lldiv@counter
  8017  1109  0ACD               	incf	___lldiv@counter,f
  8018  110A                     l3304:
  8019  110A  1BC3               	btfsc	___lldiv@divisor+3,7
  8020  110B  291A               	goto	l3306
  8021  110C  3001               	movlw	1
  8022  110D  00C8               	movwf	??___lldiv
  8023  110E                     u4785:
  8024  110E  1003               	clrc
  8025  110F  0DC0               	rlf	___lldiv@divisor,f
  8026  1110  0DC1               	rlf	___lldiv@divisor+1,f
  8027  1111  0DC2               	rlf	___lldiv@divisor+2,f
  8028  1112  0DC3               	rlf	___lldiv@divisor+3,f
  8029  1113  0BC8               	decfsz	??___lldiv,f
  8030  1114  290E               	goto	u4785
  8031  1115  3001               	movlw	1
  8032  1116  00C8               	movwf	??___lldiv
  8033  1117  0848               	movf	??___lldiv,w
  8034  1118  07CD               	addwf	___lldiv@counter,f
  8035  1119  290A               	goto	l3304
  8036  111A                     l3306:
  8037  111A  3001               	movlw	1
  8038  111B  00C8               	movwf	??___lldiv
  8039  111C                     u4805:
  8040  111C  1003               	clrc
  8041  111D  0DC9               	rlf	___lldiv@quotient,f
  8042  111E  0DCA               	rlf	___lldiv@quotient+1,f
  8043  111F  0DCB               	rlf	___lldiv@quotient+2,f
  8044  1120  0DCC               	rlf	___lldiv@quotient+3,f
  8045  1121  0BC8               	decfsz	??___lldiv,f
  8046  1122  291C               	goto	u4805
  8047  1123  0843               	movf	___lldiv@divisor+3,w
  8048  1124  0247               	subwf	___lldiv@dividend+3,w
  8049  1125  1D03               	skipz
  8050  1126  2931               	goto	u4815
  8051  1127  0842               	movf	___lldiv@divisor+2,w
  8052  1128  0246               	subwf	___lldiv@dividend+2,w
  8053  1129  1D03               	skipz
  8054  112A  2931               	goto	u4815
  8055  112B  0841               	movf	___lldiv@divisor+1,w
  8056  112C  0245               	subwf	___lldiv@dividend+1,w
  8057  112D  1D03               	skipz
  8058  112E  2931               	goto	u4815
  8059  112F  0840               	movf	___lldiv@divisor,w
  8060  1130  0244               	subwf	___lldiv@dividend,w
  8061  1131                     u4815:
  8062  1131  1C03               	skipc
  8063  1132  2942               	goto	l3314
  8064  1133  0840               	movf	___lldiv@divisor,w
  8065  1134  02C4               	subwf	___lldiv@dividend,f
  8066  1135  0841               	movf	___lldiv@divisor+1,w
  8067  1136  1C03               	skipc
  8068  1137  0F41               	incfsz	___lldiv@divisor+1,w
  8069  1138  02C5               	subwf	___lldiv@dividend+1,f
  8070  1139  0842               	movf	___lldiv@divisor+2,w
  8071  113A  1C03               	skipc
  8072  113B  0F42               	incfsz	___lldiv@divisor+2,w
  8073  113C  02C6               	subwf	___lldiv@dividend+2,f
  8074  113D  0843               	movf	___lldiv@divisor+3,w
  8075  113E  1C03               	skipc
  8076  113F  0F43               	incfsz	___lldiv@divisor+3,w
  8077  1140  02C7               	subwf	___lldiv@dividend+3,f
  8078  1141  1449               	bsf	___lldiv@quotient,0
  8079  1142                     l3314:
  8080  1142  3001               	movlw	1
  8081  1143                     u4825:
  8082  1143  1003               	clrc
  8083  1144  0CC3               	rrf	___lldiv@divisor+3,f
  8084  1145  0CC2               	rrf	___lldiv@divisor+2,f
  8085  1146  0CC1               	rrf	___lldiv@divisor+1,f
  8086  1147  0CC0               	rrf	___lldiv@divisor,f
  8087  1148  3EFF               	addlw	-1
  8088  1149  1D03               	skipz
  8089  114A  2943               	goto	u4825
  8090  114B  3001               	movlw	1
  8091  114C  02CD               	subwf	___lldiv@counter,f
  8092  114D  1D03               	btfss	3,2
  8093  114E  291A               	goto	l3306
  8094  114F                     l3318:
  8095  114F  084C               	movf	___lldiv@quotient+3,w
  8096  1150  00C3               	movwf	?___lldiv+3
  8097  1151  084B               	movf	___lldiv@quotient+2,w
  8098  1152  00C2               	movwf	?___lldiv+2
  8099  1153  084A               	movf	___lldiv@quotient+1,w
  8100  1154  00C1               	movwf	?___lldiv+1
  8101  1155  0849               	movf	___lldiv@quotient,w
  8102  1156  00C0               	movwf	?___lldiv
  8103  1157  0008               	return
  8104  1158                     __end_of___lldiv:
  8105                           
  8106                           	psect	text25
  8107  11C3                     __ptext25:	
  8108 ;; *************** function _countPlus *****************
  8109 ;; Defined at:
  8110 ;;		line 705 in file "newmain.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;		None
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;  value           4    0[BANK1 ] long 
  8115 ;; Return value:  Size  Location     Type
  8116 ;;                  4   32[BANK0 ] long 
  8117 ;; Registers used:
  8118 ;;		wreg, status,2, status,0, pclath, cstack
  8119 ;; Tracked objects:
  8120 ;;		On entry : 300/100
  8121 ;;		On exit  : 300/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8124 ;;      Params:         0       4       0       0       0
  8125 ;;      Locals:         0       0       4       0       0
  8126 ;;      Temps:          0       8       0       0       0
  8127 ;;      Totals:         0      12       4       0       0
  8128 ;;Total ram usage:       16 bytes
  8129 ;; Hardware stack levels used: 1
  8130 ;; Hardware stack levels required when called: 3
  8131 ;; This function calls:
  8132 ;;		___aldiv
  8133 ;;		___almod
  8134 ;; This function is called by:
  8135 ;;		_main
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139                           
  8140                           ;psect for function _countPlus
  8141  11C3                     _countPlus:
  8142                           
  8143                           ;newmain.c: 706:     int32_t value = countingPulse + currentClothLengthBalancePlus;
  8144                           
  8145                           ;incstack = 0
  8146                           ; Regs used in _countPlus: [wreg+status,2+status,0+pclath+cstack]
  8147  11C3  0820               	movf	_countingPulse^(0+128),w	;volatile
  8148  11C4  1283               	bcf	3,5	;RP0=0, select bank0
  8149  11C5  00C4               	movwf	??_countPlus
  8150  11C6  1683               	bsf	3,5	;RP0=1, select bank1
  8151  11C7  0821               	movf	(_countingPulse+1)^(0+128),w	;volatile
  8152  11C8  1283               	bcf	3,5	;RP0=0, select bank0
  8153  11C9  00C5               	movwf	??_countPlus+1
  8154  11CA  1683               	bsf	3,5	;RP0=1, select bank1
  8155  11CB  0822               	movf	(_countingPulse+2)^(0+128),w	;volatile
  8156  11CC  1283               	bcf	3,5	;RP0=0, select bank0
  8157  11CD  00C6               	movwf	??_countPlus+2
  8158  11CE  1683               	bsf	3,5	;RP0=1, select bank1
  8159  11CF  0823               	movf	(_countingPulse+3)^(0+128),w	;volatile
  8160  11D0  1283               	bcf	3,5	;RP0=0, select bank0
  8161  11D1  00C7               	movwf	??_countPlus+3
  8162  11D2  1683               	bsf	3,5	;RP0=1, select bank1
  8163  11D3  085E               	movf	_currentClothLengthBalancePlus^(0+128),w	;volatile
  8164  11D4  1283               	bcf	3,5	;RP0=0, select bank0
  8165  11D5  00C8               	movwf	??_countPlus+4
  8166  11D6  1683               	bsf	3,5	;RP0=1, select bank1
  8167  11D7  085F               	movf	(_currentClothLengthBalancePlus+1)^(0+128),w	;volatile
  8168  11D8  1283               	bcf	3,5	;RP0=0, select bank0
  8169  11D9  00C9               	movwf	??_countPlus+5
  8170  11DA  3000               	movlw	0
  8171  11DB  1BC9               	btfsc	??_countPlus+5,7
  8172  11DC  30FF               	movlw	255
  8173  11DD  00CA               	movwf	??_countPlus+6
  8174  11DE  00CB               	movwf	??_countPlus+7
  8175  11DF  0848               	movf	??_countPlus+4,w
  8176  11E0  07C4               	addwf	??_countPlus,f
  8177  11E1  0849               	movf	??_countPlus+5,w
  8178  11E2  1803               	skipnc
  8179  11E3  0F49               	incfsz	??_countPlus+5,w
  8180  11E4  29E6               	goto	u5970
  8181  11E5  29E7               	goto	u5971
  8182  11E6                     u5970:
  8183  11E6  07C5               	addwf	??_countPlus+1,f
  8184  11E7                     u5971:
  8185  11E7  084A               	movf	??_countPlus+6,w
  8186  11E8  1803               	skipnc
  8187  11E9  0F4A               	incfsz	??_countPlus+6,w
  8188  11EA  29EC               	goto	u5972
  8189  11EB  29ED               	goto	u5973
  8190  11EC                     u5972:
  8191  11EC  07C6               	addwf	??_countPlus+2,f
  8192  11ED                     u5973:
  8193  11ED  084B               	movf	??_countPlus+7,w
  8194  11EE  1803               	skipnc
  8195  11EF  0A4B               	incf	??_countPlus+7,w
  8196  11F0  07C7               	addwf	??_countPlus+3,f
  8197  11F1  0847               	movf	??_countPlus+3,w
  8198  11F2  1683               	bsf	3,5	;RP0=1, select bank1
  8199  11F3  00E3               	movwf	(countPlus@value+3)^(0+128)
  8200  11F4  1283               	bcf	3,5	;RP0=0, select bank0
  8201  11F5  0846               	movf	??_countPlus+2,w
  8202  11F6  1683               	bsf	3,5	;RP0=1, select bank1
  8203  11F7  00E2               	movwf	(countPlus@value+2)^(0+128)
  8204  11F8  1283               	bcf	3,5	;RP0=0, select bank0
  8205  11F9  0845               	movf	??_countPlus+1,w
  8206  11FA  1683               	bsf	3,5	;RP0=1, select bank1
  8207  11FB  00E1               	movwf	(countPlus@value+1)^(0+128)
  8208  11FC  1283               	bcf	3,5	;RP0=0, select bank0
  8209  11FD  0844               	movf	??_countPlus,w
  8210  11FE  1683               	bsf	3,5	;RP0=1, select bank1
  8211  11FF  00E0               	movwf	countPlus@value^(0+128)
  8212                           
  8213                           ;newmain.c: 707:     currentClothLengthBalancePlus = value % 100;
  8214  1200  3000               	movlw	0
  8215  1201  1283               	bcf	3,5	;RP0=0, select bank0
  8216  1202  00B4               	movwf	___almod@divisor+3
  8217  1203  3000               	movlw	0
  8218  1204  00B3               	movwf	___almod@divisor+2
  8219  1205  3000               	movlw	0
  8220  1206  00B2               	movwf	___almod@divisor+1
  8221  1207  3064               	movlw	100
  8222  1208  00B1               	movwf	___almod@divisor
  8223  1209  1683               	bsf	3,5	;RP0=1, select bank1
  8224  120A  0863               	movf	(countPlus@value+3)^(0+128),w
  8225  120B  1283               	bcf	3,5	;RP0=0, select bank0
  8226  120C  00B8               	movwf	___almod@dividend+3
  8227  120D  1683               	bsf	3,5	;RP0=1, select bank1
  8228  120E  0862               	movf	(countPlus@value+2)^(0+128),w
  8229  120F  1283               	bcf	3,5	;RP0=0, select bank0
  8230  1210  00B7               	movwf	___almod@dividend+2
  8231  1211  1683               	bsf	3,5	;RP0=1, select bank1
  8232  1212  0861               	movf	(countPlus@value+1)^(0+128),w
  8233  1213  1283               	bcf	3,5	;RP0=0, select bank0
  8234  1214  00B6               	movwf	___almod@dividend+1
  8235  1215  1683               	bsf	3,5	;RP0=1, select bank1
  8236  1216  0860               	movf	countPlus@value^(0+128),w
  8237  1217  1283               	bcf	3,5	;RP0=0, select bank0
  8238  1218  00B5               	movwf	___almod@dividend
  8239  1219  120A  158A  2008  160A  118A  	fcall	___almod
  8240  121E  0832               	movf	?___almod+1,w
  8241  121F  1683               	bsf	3,5	;RP0=1, select bank1
  8242  1220  00DF               	movwf	(_currentClothLengthBalancePlus+1)^(0+128)	;volatile
  8243  1221  1283               	bcf	3,5	;RP0=0, select bank0
  8244  1222  0831               	movf	?___almod,w
  8245  1223  1683               	bsf	3,5	;RP0=1, select bank1
  8246  1224  00DE               	movwf	_currentClothLengthBalancePlus^(0+128)	;volatile
  8247                           
  8248                           ;newmain.c: 708:     return value/100;
  8249  1225  3000               	movlw	0
  8250  1226  1283               	bcf	3,5	;RP0=0, select bank0
  8251  1227  00B4               	movwf	___aldiv@divisor+3
  8252  1228  3000               	movlw	0
  8253  1229  00B3               	movwf	___aldiv@divisor+2
  8254  122A  3000               	movlw	0
  8255  122B  00B2               	movwf	___aldiv@divisor+1
  8256  122C  3064               	movlw	100
  8257  122D  00B1               	movwf	___aldiv@divisor
  8258  122E  1683               	bsf	3,5	;RP0=1, select bank1
  8259  122F  0863               	movf	(countPlus@value+3)^(0+128),w
  8260  1230  1283               	bcf	3,5	;RP0=0, select bank0
  8261  1231  00B8               	movwf	___aldiv@dividend+3
  8262  1232  1683               	bsf	3,5	;RP0=1, select bank1
  8263  1233  0862               	movf	(countPlus@value+2)^(0+128),w
  8264  1234  1283               	bcf	3,5	;RP0=0, select bank0
  8265  1235  00B7               	movwf	___aldiv@dividend+2
  8266  1236  1683               	bsf	3,5	;RP0=1, select bank1
  8267  1237  0861               	movf	(countPlus@value+1)^(0+128),w
  8268  1238  1283               	bcf	3,5	;RP0=0, select bank0
  8269  1239  00B6               	movwf	___aldiv@dividend+1
  8270  123A  1683               	bsf	3,5	;RP0=1, select bank1
  8271  123B  0860               	movf	countPlus@value^(0+128),w
  8272  123C  1283               	bcf	3,5	;RP0=0, select bank0
  8273  123D  00B5               	movwf	___aldiv@dividend
  8274  123E  160A  118A  22D2   	fcall	___aldiv
  8275  1241  0834               	movf	?___aldiv+3,w
  8276  1242  00C3               	movwf	?_countPlus+3
  8277  1243  0833               	movf	?___aldiv+2,w
  8278  1244  00C2               	movwf	?_countPlus+2
  8279  1245  0832               	movf	?___aldiv+1,w
  8280  1246  00C1               	movwf	?_countPlus+1
  8281  1247  0831               	movf	?___aldiv,w
  8282  1248  00C0               	movwf	?_countPlus
  8283  1249  0008               	return
  8284  124A                     __end_of_countPlus:
  8285                           
  8286                           	psect	text26
  8287  1158                     __ptext26:	
  8288 ;; *************** function _countMinus *****************
  8289 ;; Defined at:
  8290 ;;		line 711 in file "newmain.c"
  8291 ;; Parameters:    Size  Location     Type
  8292 ;;		None
  8293 ;; Auto vars:     Size  Location     Type
  8294 ;;  value           4   40[BANK0 ] long 
  8295 ;; Return value:  Size  Location     Type
  8296 ;;                  4   32[BANK0 ] long 
  8297 ;; Registers used:
  8298 ;;		wreg, status,2, status,0, pclath, cstack
  8299 ;; Tracked objects:
  8300 ;;		On entry : 300/100
  8301 ;;		On exit  : 300/0
  8302 ;;		Unchanged: 0/0
  8303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8304 ;;      Params:         0       4       0       0       0
  8305 ;;      Locals:         0       4       0       0       0
  8306 ;;      Temps:          0       4       0       0       0
  8307 ;;      Totals:         0      12       0       0       0
  8308 ;;Total ram usage:       12 bytes
  8309 ;; Hardware stack levels used: 1
  8310 ;; Hardware stack levels required when called: 3
  8311 ;; This function calls:
  8312 ;;		___aldiv
  8313 ;;		___almod
  8314 ;; This function is called by:
  8315 ;;		_main
  8316 ;; This function uses a non-reentrant model
  8317 ;;
  8318                           
  8319                           
  8320                           ;psect for function _countMinus
  8321  1158                     _countMinus:
  8322                           
  8323                           ;newmain.c: 712:     int32_t value = currentClothLengthBalanceMinus - countingPulse;
  8324                           
  8325                           ;incstack = 0
  8326                           ; Regs used in _countMinus: [wreg+status,2+status,0+pclath+cstack]
  8327  1158  085C               	movf	_currentClothLengthBalanceMinus^(0+128),w	;volatile
  8328  1159  1283               	bcf	3,5	;RP0=0, select bank0
  8329  115A  00C4               	movwf	??_countMinus
  8330  115B  1683               	bsf	3,5	;RP0=1, select bank1
  8331  115C  085D               	movf	(_currentClothLengthBalanceMinus+1)^(0+128),w	;volatile
  8332  115D  1283               	bcf	3,5	;RP0=0, select bank0
  8333  115E  00C5               	movwf	??_countMinus+1
  8334  115F  3000               	movlw	0
  8335  1160  1BC5               	btfsc	??_countMinus+1,7
  8336  1161  30FF               	movlw	255
  8337  1162  00C6               	movwf	??_countMinus+2
  8338  1163  00C7               	movwf	??_countMinus+3
  8339  1164  1683               	bsf	3,5	;RP0=1, select bank1
  8340  1165  0820               	movf	_countingPulse^(0+128),w	;volatile
  8341  1166  1283               	bcf	3,5	;RP0=0, select bank0
  8342  1167  02C4               	subwf	??_countMinus,f
  8343  1168  1683               	bsf	3,5	;RP0=1, select bank1
  8344  1169  0821               	movf	(_countingPulse+1)^(0+128),w	;volatile
  8345  116A  1C03               	skipc
  8346  116B  0F21               	incfsz	(_countingPulse+1)^(0+128),w	;volatile
  8347  116C  296E               	goto	u5981
  8348  116D  2970               	goto	u5982
  8349  116E                     u5981:
  8350  116E  1283               	bcf	3,5	;RP0=0, select bank0
  8351  116F  02C5               	subwf	??_countMinus+1,f
  8352  1170                     u5982:
  8353  1170  1683               	bsf	3,5	;RP0=1, select bank1
  8354  1171  0822               	movf	(_countingPulse+2)^(0+128),w	;volatile
  8355  1172  1C03               	skipc
  8356  1173  0F22               	incfsz	(_countingPulse+2)^(0+128),w	;volatile
  8357  1174  2976               	goto	u5983
  8358  1175  2978               	goto	u5984
  8359  1176                     u5983:
  8360  1176  1283               	bcf	3,5	;RP0=0, select bank0
  8361  1177  02C6               	subwf	??_countMinus+2,f
  8362  1178                     u5984:
  8363  1178  1683               	bsf	3,5	;RP0=1, select bank1
  8364  1179  0823               	movf	(_countingPulse+3)^(0+128),w	;volatile
  8365  117A  1C03               	skipc
  8366  117B  0F23               	incfsz	(_countingPulse+3)^(0+128),w	;volatile
  8367  117C  297E               	goto	u5985
  8368  117D  2980               	goto	u5986
  8369  117E                     u5985:
  8370  117E  1283               	bcf	3,5	;RP0=0, select bank0
  8371  117F  02C7               	subwf	??_countMinus+3,f
  8372  1180                     u5986:
  8373  1180  1683               	bsf	3,5	;RP0=1, select bank1
  8374  1181  1283               	bcf	3,5	;RP0=0, select bank0
  8375  1182  0847               	movf	??_countMinus+3,w
  8376  1183  00CB               	movwf	countMinus@value+3
  8377  1184  0846               	movf	??_countMinus+2,w
  8378  1185  00CA               	movwf	countMinus@value+2
  8379  1186  0845               	movf	??_countMinus+1,w
  8380  1187  00C9               	movwf	countMinus@value+1
  8381  1188  0844               	movf	??_countMinus,w
  8382  1189  00C8               	movwf	countMinus@value
  8383                           
  8384                           ;newmain.c: 713:     currentClothLengthBalanceMinus = value % 100;
  8385  118A  3000               	movlw	0
  8386  118B  00B4               	movwf	___almod@divisor+3
  8387  118C  3000               	movlw	0
  8388  118D  00B3               	movwf	___almod@divisor+2
  8389  118E  3000               	movlw	0
  8390  118F  00B2               	movwf	___almod@divisor+1
  8391  1190  3064               	movlw	100
  8392  1191  00B1               	movwf	___almod@divisor
  8393  1192  084B               	movf	countMinus@value+3,w
  8394  1193  00B8               	movwf	___almod@dividend+3
  8395  1194  084A               	movf	countMinus@value+2,w
  8396  1195  00B7               	movwf	___almod@dividend+2
  8397  1196  0849               	movf	countMinus@value+1,w
  8398  1197  00B6               	movwf	___almod@dividend+1
  8399  1198  0848               	movf	countMinus@value,w
  8400  1199  00B5               	movwf	___almod@dividend
  8401  119A  120A  158A  2008  160A  118A  	fcall	___almod
  8402  119F  0832               	movf	?___almod+1,w
  8403  11A0  1683               	bsf	3,5	;RP0=1, select bank1
  8404  11A1  00DD               	movwf	(_currentClothLengthBalanceMinus+1)^(0+128)	;volatile
  8405  11A2  1283               	bcf	3,5	;RP0=0, select bank0
  8406  11A3  0831               	movf	?___almod,w
  8407  11A4  1683               	bsf	3,5	;RP0=1, select bank1
  8408  11A5  00DC               	movwf	_currentClothLengthBalanceMinus^(0+128)	;volatile
  8409                           
  8410                           ;newmain.c: 714:     return value/100;
  8411  11A6  3000               	movlw	0
  8412  11A7  1283               	bcf	3,5	;RP0=0, select bank0
  8413  11A8  00B4               	movwf	___aldiv@divisor+3
  8414  11A9  3000               	movlw	0
  8415  11AA  00B3               	movwf	___aldiv@divisor+2
  8416  11AB  3000               	movlw	0
  8417  11AC  00B2               	movwf	___aldiv@divisor+1
  8418  11AD  3064               	movlw	100
  8419  11AE  00B1               	movwf	___aldiv@divisor
  8420  11AF  084B               	movf	countMinus@value+3,w
  8421  11B0  00B8               	movwf	___aldiv@dividend+3
  8422  11B1  084A               	movf	countMinus@value+2,w
  8423  11B2  00B7               	movwf	___aldiv@dividend+2
  8424  11B3  0849               	movf	countMinus@value+1,w
  8425  11B4  00B6               	movwf	___aldiv@dividend+1
  8426  11B5  0848               	movf	countMinus@value,w
  8427  11B6  00B5               	movwf	___aldiv@dividend
  8428  11B7  160A  118A  22D2   	fcall	___aldiv
  8429  11BA  0834               	movf	?___aldiv+3,w
  8430  11BB  00C3               	movwf	?_countMinus+3
  8431  11BC  0833               	movf	?___aldiv+2,w
  8432  11BD  00C2               	movwf	?_countMinus+2
  8433  11BE  0832               	movf	?___aldiv+1,w
  8434  11BF  00C1               	movwf	?_countMinus+1
  8435  11C0  0831               	movf	?___aldiv,w
  8436  11C1  00C0               	movwf	?_countMinus
  8437  11C2  0008               	return
  8438  11C3                     __end_of_countMinus:
  8439                           
  8440                           	psect	text27
  8441  0808                     __ptext27:	
  8442 ;; *************** function ___almod *****************
  8443 ;; Defined at:
  8444 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/common/almod.c"
  8445 ;; Parameters:    Size  Location     Type
  8446 ;;  divisor         4   17[BANK0 ] long 
  8447 ;;  dividend        4   21[BANK0 ] long 
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;  sign            1   27[BANK0 ] unsigned char 
  8450 ;;  counter         1   26[BANK0 ] unsigned char 
  8451 ;; Return value:  Size  Location     Type
  8452 ;;                  4   17[BANK0 ] long 
  8453 ;; Registers used:
  8454 ;;		wreg, status,2, status,0
  8455 ;; Tracked objects:
  8456 ;;		On entry : 300/0
  8457 ;;		On exit  : 300/0
  8458 ;;		Unchanged: 0/0
  8459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8460 ;;      Params:         0       8       0       0       0
  8461 ;;      Locals:         0       2       0       0       0
  8462 ;;      Temps:          0       1       0       0       0
  8463 ;;      Totals:         0      11       0       0       0
  8464 ;;Total ram usage:       11 bytes
  8465 ;; Hardware stack levels used: 1
  8466 ;; Hardware stack levels required when called: 2
  8467 ;; This function calls:
  8468 ;;		Nothing
  8469 ;; This function is called by:
  8470 ;;		_countPlus
  8471 ;;		_countMinus
  8472 ;; This function uses a non-reentrant model
  8473 ;;
  8474                           
  8475                           
  8476                           ;psect for function ___almod
  8477  0808                     ___almod:
  8478                           
  8479                           ;incstack = 0
  8480                           ; Regs used in ___almod: [wreg+status,2+status,0]
  8481  0808  01BB               	clrf	___almod@sign
  8482  0809  1FB8               	btfss	___almod@dividend+3,7
  8483  080A  2818               	goto	l612
  8484  080B  09B5               	comf	___almod@dividend,f
  8485  080C  09B6               	comf	___almod@dividend+1,f
  8486  080D  09B7               	comf	___almod@dividend+2,f
  8487  080E  09B8               	comf	___almod@dividend+3,f
  8488  080F  0AB5               	incf	___almod@dividend,f
  8489  0810  1903               	skipnz
  8490  0811  0AB6               	incf	___almod@dividend+1,f
  8491  0812  1903               	skipnz
  8492  0813  0AB7               	incf	___almod@dividend+2,f
  8493  0814  1903               	skipnz
  8494  0815  0AB8               	incf	___almod@dividend+3,f
  8495  0816  01BB               	clrf	___almod@sign
  8496  0817  0ABB               	incf	___almod@sign,f
  8497  0818                     l612:
  8498  0818  1FB4               	btfss	___almod@divisor+3,7
  8499  0819  2825               	goto	l3662
  8500  081A  09B1               	comf	___almod@divisor,f
  8501  081B  09B2               	comf	___almod@divisor+1,f
  8502  081C  09B3               	comf	___almod@divisor+2,f
  8503  081D  09B4               	comf	___almod@divisor+3,f
  8504  081E  0AB1               	incf	___almod@divisor,f
  8505  081F  1903               	skipnz
  8506  0820  0AB2               	incf	___almod@divisor+1,f
  8507  0821  1903               	skipnz
  8508  0822  0AB3               	incf	___almod@divisor+2,f
  8509  0823  1903               	skipnz
  8510  0824  0AB4               	incf	___almod@divisor+3,f
  8511  0825                     l3662:
  8512  0825  0834               	movf	___almod@divisor+3,w
  8513  0826  0433               	iorwf	___almod@divisor+2,w
  8514  0827  0432               	iorwf	___almod@divisor+1,w
  8515  0828  0431               	iorwf	___almod@divisor,w
  8516  0829  1903               	skipnz
  8517  082A  2868               	goto	l3678
  8518  082B  01BA               	clrf	___almod@counter
  8519  082C  0ABA               	incf	___almod@counter,f
  8520  082D                     l3668:
  8521  082D  1BB4               	btfsc	___almod@divisor+3,7
  8522  082E  283D               	goto	l3670
  8523  082F  3001               	movlw	1
  8524  0830  00B9               	movwf	??___almod
  8525  0831                     u5315:
  8526  0831  1003               	clrc
  8527  0832  0DB1               	rlf	___almod@divisor,f
  8528  0833  0DB2               	rlf	___almod@divisor+1,f
  8529  0834  0DB3               	rlf	___almod@divisor+2,f
  8530  0835  0DB4               	rlf	___almod@divisor+3,f
  8531  0836  0BB9               	decfsz	??___almod,f
  8532  0837  2831               	goto	u5315
  8533  0838  3001               	movlw	1
  8534  0839  00B9               	movwf	??___almod
  8535  083A  0839               	movf	??___almod,w
  8536  083B  07BA               	addwf	___almod@counter,f
  8537  083C  282D               	goto	l3668
  8538  083D                     l3670:
  8539  083D  0834               	movf	___almod@divisor+3,w
  8540  083E  0238               	subwf	___almod@dividend+3,w
  8541  083F  1D03               	skipz
  8542  0840  284B               	goto	u5335
  8543  0841  0833               	movf	___almod@divisor+2,w
  8544  0842  0237               	subwf	___almod@dividend+2,w
  8545  0843  1D03               	skipz
  8546  0844  284B               	goto	u5335
  8547  0845  0832               	movf	___almod@divisor+1,w
  8548  0846  0236               	subwf	___almod@dividend+1,w
  8549  0847  1D03               	skipz
  8550  0848  284B               	goto	u5335
  8551  0849  0831               	movf	___almod@divisor,w
  8552  084A  0235               	subwf	___almod@dividend,w
  8553  084B                     u5335:
  8554  084B  1C03               	skipc
  8555  084C  285B               	goto	l3674
  8556  084D  0831               	movf	___almod@divisor,w
  8557  084E  02B5               	subwf	___almod@dividend,f
  8558  084F  0832               	movf	___almod@divisor+1,w
  8559  0850  1C03               	skipc
  8560  0851  0F32               	incfsz	___almod@divisor+1,w
  8561  0852  02B6               	subwf	___almod@dividend+1,f
  8562  0853  0833               	movf	___almod@divisor+2,w
  8563  0854  1C03               	skipc
  8564  0855  0F33               	incfsz	___almod@divisor+2,w
  8565  0856  02B7               	subwf	___almod@dividend+2,f
  8566  0857  0834               	movf	___almod@divisor+3,w
  8567  0858  1C03               	skipc
  8568  0859  0F34               	incfsz	___almod@divisor+3,w
  8569  085A  02B8               	subwf	___almod@dividend+3,f
  8570  085B                     l3674:
  8571  085B  3001               	movlw	1
  8572  085C                     u5345:
  8573  085C  1003               	clrc
  8574  085D  0CB4               	rrf	___almod@divisor+3,f
  8575  085E  0CB3               	rrf	___almod@divisor+2,f
  8576  085F  0CB2               	rrf	___almod@divisor+1,f
  8577  0860  0CB1               	rrf	___almod@divisor,f
  8578  0861  3EFF               	addlw	-1
  8579  0862  1D03               	skipz
  8580  0863  285C               	goto	u5345
  8581  0864  3001               	movlw	1
  8582  0865  02BA               	subwf	___almod@counter,f
  8583  0866  1D03               	btfss	3,2
  8584  0867  283D               	goto	l3670
  8585  0868                     l3678:
  8586  0868  083B               	movf	___almod@sign,w
  8587  0869  1903               	btfsc	3,2
  8588  086A  2876               	goto	l3682
  8589  086B  09B5               	comf	___almod@dividend,f
  8590  086C  09B6               	comf	___almod@dividend+1,f
  8591  086D  09B7               	comf	___almod@dividend+2,f
  8592  086E  09B8               	comf	___almod@dividend+3,f
  8593  086F  0AB5               	incf	___almod@dividend,f
  8594  0870  1903               	skipnz
  8595  0871  0AB6               	incf	___almod@dividend+1,f
  8596  0872  1903               	skipnz
  8597  0873  0AB7               	incf	___almod@dividend+2,f
  8598  0874  1903               	skipnz
  8599  0875  0AB8               	incf	___almod@dividend+3,f
  8600  0876                     l3682:
  8601  0876  0838               	movf	___almod@dividend+3,w
  8602  0877  00B4               	movwf	?___almod+3
  8603  0878  0837               	movf	___almod@dividend+2,w
  8604  0879  00B3               	movwf	?___almod+2
  8605  087A  0836               	movf	___almod@dividend+1,w
  8606  087B  00B2               	movwf	?___almod+1
  8607  087C  0835               	movf	___almod@dividend,w
  8608  087D  00B1               	movwf	?___almod
  8609  087E  0008               	return
  8610  087F                     __end_of___almod:
  8611                           
  8612                           	psect	text28
  8613  12D2                     __ptext28:	
  8614 ;; *************** function ___aldiv *****************
  8615 ;; Defined at:
  8616 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/common/aldiv.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;  divisor         4   17[BANK0 ] long 
  8619 ;;  dividend        4   21[BANK0 ] long 
  8620 ;; Auto vars:     Size  Location     Type
  8621 ;;  quotient        4   28[BANK0 ] long 
  8622 ;;  sign            1   27[BANK0 ] unsigned char 
  8623 ;;  counter         1   26[BANK0 ] unsigned char 
  8624 ;; Return value:  Size  Location     Type
  8625 ;;                  4   17[BANK0 ] long 
  8626 ;; Registers used:
  8627 ;;		wreg, status,2, status,0
  8628 ;; Tracked objects:
  8629 ;;		On entry : 300/0
  8630 ;;		On exit  : 300/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8633 ;;      Params:         0       8       0       0       0
  8634 ;;      Locals:         0       6       0       0       0
  8635 ;;      Temps:          0       1       0       0       0
  8636 ;;      Totals:         0      15       0       0       0
  8637 ;;Total ram usage:       15 bytes
  8638 ;; Hardware stack levels used: 1
  8639 ;; Hardware stack levels required when called: 2
  8640 ;; This function calls:
  8641 ;;		Nothing
  8642 ;; This function is called by:
  8643 ;;		_countPlus
  8644 ;;		_countMinus
  8645 ;; This function uses a non-reentrant model
  8646 ;;
  8647                           
  8648                           
  8649                           ;psect for function ___aldiv
  8650  12D2                     ___aldiv:
  8651                           
  8652                           ;incstack = 0
  8653                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8654  12D2  01BB               	clrf	___aldiv@sign
  8655  12D3  1FB4               	btfss	___aldiv@divisor+3,7
  8656  12D4  2AE2               	goto	l599
  8657  12D5  09B1               	comf	___aldiv@divisor,f
  8658  12D6  09B2               	comf	___aldiv@divisor+1,f
  8659  12D7  09B3               	comf	___aldiv@divisor+2,f
  8660  12D8  09B4               	comf	___aldiv@divisor+3,f
  8661  12D9  0AB1               	incf	___aldiv@divisor,f
  8662  12DA  1903               	skipnz
  8663  12DB  0AB2               	incf	___aldiv@divisor+1,f
  8664  12DC  1903               	skipnz
  8665  12DD  0AB3               	incf	___aldiv@divisor+2,f
  8666  12DE  1903               	skipnz
  8667  12DF  0AB4               	incf	___aldiv@divisor+3,f
  8668  12E0  01BB               	clrf	___aldiv@sign
  8669  12E1  0ABB               	incf	___aldiv@sign,f
  8670  12E2                     l599:
  8671  12E2  1FB8               	btfss	___aldiv@dividend+3,7
  8672  12E3  2AF3               	goto	l3624
  8673  12E4  09B5               	comf	___aldiv@dividend,f
  8674  12E5  09B6               	comf	___aldiv@dividend+1,f
  8675  12E6  09B7               	comf	___aldiv@dividend+2,f
  8676  12E7  09B8               	comf	___aldiv@dividend+3,f
  8677  12E8  0AB5               	incf	___aldiv@dividend,f
  8678  12E9  1903               	skipnz
  8679  12EA  0AB6               	incf	___aldiv@dividend+1,f
  8680  12EB  1903               	skipnz
  8681  12EC  0AB7               	incf	___aldiv@dividend+2,f
  8682  12ED  1903               	skipnz
  8683  12EE  0AB8               	incf	___aldiv@dividend+3,f
  8684  12EF  3001               	movlw	1
  8685  12F0  00B9               	movwf	??___aldiv
  8686  12F1  0839               	movf	??___aldiv,w
  8687  12F2  06BB               	xorwf	___aldiv@sign,f
  8688  12F3                     l3624:
  8689  12F3  3000               	movlw	0
  8690  12F4  00BF               	movwf	___aldiv@quotient+3
  8691  12F5  3000               	movlw	0
  8692  12F6  00BE               	movwf	___aldiv@quotient+2
  8693  12F7  3000               	movlw	0
  8694  12F8  00BD               	movwf	___aldiv@quotient+1
  8695  12F9  3000               	movlw	0
  8696  12FA  00BC               	movwf	___aldiv@quotient
  8697  12FB  0834               	movf	___aldiv@divisor+3,w
  8698  12FC  0433               	iorwf	___aldiv@divisor+2,w
  8699  12FD  0432               	iorwf	___aldiv@divisor+1,w
  8700  12FE  0431               	iorwf	___aldiv@divisor,w
  8701  12FF  1903               	skipnz
  8702  1300  2B48               	goto	l3646
  8703  1301  01BA               	clrf	___aldiv@counter
  8704  1302  0ABA               	incf	___aldiv@counter,f
  8705  1303                     l3632:
  8706  1303  1BB4               	btfsc	___aldiv@divisor+3,7
  8707  1304  2B13               	goto	l3634
  8708  1305  3001               	movlw	1
  8709  1306  00B9               	movwf	??___aldiv
  8710  1307                     u5215:
  8711  1307  1003               	clrc
  8712  1308  0DB1               	rlf	___aldiv@divisor,f
  8713  1309  0DB2               	rlf	___aldiv@divisor+1,f
  8714  130A  0DB3               	rlf	___aldiv@divisor+2,f
  8715  130B  0DB4               	rlf	___aldiv@divisor+3,f
  8716  130C  0BB9               	decfsz	??___aldiv,f
  8717  130D  2B07               	goto	u5215
  8718  130E  3001               	movlw	1
  8719  130F  00B9               	movwf	??___aldiv
  8720  1310  0839               	movf	??___aldiv,w
  8721  1311  07BA               	addwf	___aldiv@counter,f
  8722  1312  2B03               	goto	l3632
  8723  1313                     l3634:
  8724  1313  3001               	movlw	1
  8725  1314  00B9               	movwf	??___aldiv
  8726  1315                     u5235:
  8727  1315  1003               	clrc
  8728  1316  0DBC               	rlf	___aldiv@quotient,f
  8729  1317  0DBD               	rlf	___aldiv@quotient+1,f
  8730  1318  0DBE               	rlf	___aldiv@quotient+2,f
  8731  1319  0DBF               	rlf	___aldiv@quotient+3,f
  8732  131A  0BB9               	decfsz	??___aldiv,f
  8733  131B  2B15               	goto	u5235
  8734  131C  0834               	movf	___aldiv@divisor+3,w
  8735  131D  0238               	subwf	___aldiv@dividend+3,w
  8736  131E  1D03               	skipz
  8737  131F  2B2A               	goto	u5245
  8738  1320  0833               	movf	___aldiv@divisor+2,w
  8739  1321  0237               	subwf	___aldiv@dividend+2,w
  8740  1322  1D03               	skipz
  8741  1323  2B2A               	goto	u5245
  8742  1324  0832               	movf	___aldiv@divisor+1,w
  8743  1325  0236               	subwf	___aldiv@dividend+1,w
  8744  1326  1D03               	skipz
  8745  1327  2B2A               	goto	u5245
  8746  1328  0831               	movf	___aldiv@divisor,w
  8747  1329  0235               	subwf	___aldiv@dividend,w
  8748  132A                     u5245:
  8749  132A  1C03               	skipc
  8750  132B  2B3B               	goto	l3642
  8751  132C  0831               	movf	___aldiv@divisor,w
  8752  132D  02B5               	subwf	___aldiv@dividend,f
  8753  132E  0832               	movf	___aldiv@divisor+1,w
  8754  132F  1C03               	skipc
  8755  1330  0F32               	incfsz	___aldiv@divisor+1,w
  8756  1331  02B6               	subwf	___aldiv@dividend+1,f
  8757  1332  0833               	movf	___aldiv@divisor+2,w
  8758  1333  1C03               	skipc
  8759  1334  0F33               	incfsz	___aldiv@divisor+2,w
  8760  1335  02B7               	subwf	___aldiv@dividend+2,f
  8761  1336  0834               	movf	___aldiv@divisor+3,w
  8762  1337  1C03               	skipc
  8763  1338  0F34               	incfsz	___aldiv@divisor+3,w
  8764  1339  02B8               	subwf	___aldiv@dividend+3,f
  8765  133A  143C               	bsf	___aldiv@quotient,0
  8766  133B                     l3642:
  8767  133B  3001               	movlw	1
  8768  133C                     u5255:
  8769  133C  1003               	clrc
  8770  133D  0CB4               	rrf	___aldiv@divisor+3,f
  8771  133E  0CB3               	rrf	___aldiv@divisor+2,f
  8772  133F  0CB2               	rrf	___aldiv@divisor+1,f
  8773  1340  0CB1               	rrf	___aldiv@divisor,f
  8774  1341  3EFF               	addlw	-1
  8775  1342  1D03               	skipz
  8776  1343  2B3C               	goto	u5255
  8777  1344  3001               	movlw	1
  8778  1345  02BA               	subwf	___aldiv@counter,f
  8779  1346  1D03               	btfss	3,2
  8780  1347  2B13               	goto	l3634
  8781  1348                     l3646:
  8782  1348  083B               	movf	___aldiv@sign,w
  8783  1349  1903               	btfsc	3,2
  8784  134A  2B56               	goto	l3650
  8785  134B  09BC               	comf	___aldiv@quotient,f
  8786  134C  09BD               	comf	___aldiv@quotient+1,f
  8787  134D  09BE               	comf	___aldiv@quotient+2,f
  8788  134E  09BF               	comf	___aldiv@quotient+3,f
  8789  134F  0ABC               	incf	___aldiv@quotient,f
  8790  1350  1903               	skipnz
  8791  1351  0ABD               	incf	___aldiv@quotient+1,f
  8792  1352  1903               	skipnz
  8793  1353  0ABE               	incf	___aldiv@quotient+2,f
  8794  1354  1903               	skipnz
  8795  1355  0ABF               	incf	___aldiv@quotient+3,f
  8796  1356                     l3650:
  8797  1356  083F               	movf	___aldiv@quotient+3,w
  8798  1357  00B4               	movwf	?___aldiv+3
  8799  1358  083E               	movf	___aldiv@quotient+2,w
  8800  1359  00B3               	movwf	?___aldiv+2
  8801  135A  083D               	movf	___aldiv@quotient+1,w
  8802  135B  00B2               	movwf	?___aldiv+1
  8803  135C  083C               	movf	___aldiv@quotient,w
  8804  135D  00B1               	movwf	?___aldiv
  8805  135E  0008               	return
  8806  135F                     __end_of___aldiv:
  8807                           
  8808                           	psect	text29
  8809  087F                     __ptext29:	
  8810 ;; *************** function _highISR *****************
  8811 ;; Defined at:
  8812 ;;		line 198 in file "newmain.c"
  8813 ;; Parameters:    Size  Location     Type
  8814 ;;		None
  8815 ;; Auto vars:     Size  Location     Type
  8816 ;;		None
  8817 ;; Return value:  Size  Location     Type
  8818 ;;                  1    wreg      void 
  8819 ;; Registers used:
  8820 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8821 ;; Tracked objects:
  8822 ;;		On entry : 0/0
  8823 ;;		On exit  : 300/0
  8824 ;;		Unchanged: 0/0
  8825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8826 ;;      Params:         0       0       0       0       0
  8827 ;;      Locals:         0       0       0       0       0
  8828 ;;      Temps:          0       4       0       0       0
  8829 ;;      Totals:         0       4       0       0       0
  8830 ;;Total ram usage:        4 bytes
  8831 ;; Hardware stack levels used: 1
  8832 ;; Hardware stack levels required when called: 1
  8833 ;; This function calls:
  8834 ;;		___awmod
  8835 ;;		i1___lldiv
  8836 ;;		i1___llmod
  8837 ;;		i1_eeprom_write
  8838 ;; This function is called by:
  8839 ;;		Interrupt level 1
  8840 ;; This function uses a non-reentrant model
  8841 ;;
  8842                           
  8843                           
  8844                           ;psect for function _highISR
  8845  087F                     _highISR:
  8846                           
  8847                           ;newmain.c: 201:     if(RBIF == 1){
  8848  087F  1C0B               	btfss	11,0	;volatile
  8849  0880  28A1               	goto	i1l246
  8850                           
  8851                           ;newmain.c: 202:         if(!RB7 && !RB6){
  8852  0881  1F86               	btfss	6,7	;volatile
  8853  0882  1B06               	btfsc	6,6	;volatile
  8854  0883  2885               	goto	i1l247
  8855                           
  8856                           ;newmain.c: 203:             encoderFlag = 1;
  8857  0884  155A               	bsf	_encoderFlag/(0+8),_encoderFlag& (0+7)	;volatile
  8858  0885                     i1l247:	
  8859                           ;newmain.c: 204:         }
  8860                           
  8861                           
  8862                           ;newmain.c: 205:         if(encoderFlag && !RB7 && RB6){count=1;changed = 1;}
  8863  0885  195A               	btfsc	_encoderFlag/(0+8),_encoderFlag& (0+7)	;volatile
  8864  0886  1B86               	btfsc	6,7	;volatile
  8865  0887  2891               	goto	i1l3192
  8866  0888  1F06               	btfss	6,6	;volatile
  8867  0889  2891               	goto	i1l3192
  8868  088A  3001               	movlw	1
  8869  088B  00AD               	movwf	??_highISR
  8870  088C  082D               	movf	??_highISR,w
  8871  088D  1683               	bsf	3,5	;RP0=1, select bank1
  8872  088E  00B9               	movwf	_count^(0+128)	;volatile
  8873  088F  1283               	bcf	3,5	;RP0=0, select bank0
  8874  0890  145A               	bsf	_changed/(0+8),_changed& (0+7)	;volatile
  8875  0891                     i1l3192:
  8876                           
  8877                           ;newmain.c: 206:         if(encoderFlag && RB7 && !RB6){count=2;changed = 1;}
  8878  0891  195A               	btfsc	_encoderFlag/(0+8),_encoderFlag& (0+7)	;volatile
  8879  0892  1F86               	btfss	6,7	;volatile
  8880  0893  289D               	goto	i1l3202
  8881  0894  1B06               	btfsc	6,6	;volatile
  8882  0895  289D               	goto	i1l3202
  8883  0896  3002               	movlw	2
  8884  0897  00AD               	movwf	??_highISR
  8885  0898  082D               	movf	??_highISR,w
  8886  0899  1683               	bsf	3,5	;RP0=1, select bank1
  8887  089A  00B9               	movwf	_count^(0+128)	;volatile
  8888  089B  1283               	bcf	3,5	;RP0=0, select bank0
  8889  089C  145A               	bsf	_changed/(0+8),_changed& (0+7)	;volatile
  8890  089D                     i1l3202:
  8891                           
  8892                           ;newmain.c: 207:         if(RB7 && RB6)encoderFlag = 0;
  8893  089D  1B86               	btfsc	6,7	;volatile
  8894  089E  1F06               	btfss	6,6	;volatile
  8895  089F  28A1               	goto	i1l246
  8896  08A0  115A               	bcf	_encoderFlag/(0+8),_encoderFlag& (0+7)	;volatile
  8897  08A1                     i1l246:	
  8898                           ;newmain.c: 208:     }
  8899                           
  8900                           
  8901                           ;newmain.c: 209:     if(TMR1IF==1){
  8902  08A1  1C0C               	btfss	12,0	;volatile
  8903  08A2  28D0               	goto	i1l3220
  8904                           
  8905                           ;newmain.c: 210:         timerCount += 1;
  8906  08A3  3001               	movlw	1
  8907  08A4  00AD               	movwf	??_highISR
  8908  08A5  082D               	movf	??_highISR,w
  8909  08A6  1683               	bsf	3,5	;RP0=1, select bank1
  8910  08A7  07B8               	addwf	_timerCount^(0+128),f	;volatile
  8911                           
  8912                           ;newmain.c: 211:         skipCount += 1;
  8913  08A8  3001               	movlw	1
  8914  08A9  1283               	bcf	3,5	;RP0=0, select bank0
  8915  08AA  00AD               	movwf	??_highISR
  8916  08AB  082D               	movf	??_highISR,w
  8917  08AC  1683               	bsf	3,5	;RP0=1, select bank1
  8918  08AD  07B7               	addwf	_skipCount^(0+128),f	;volatile
  8919                           
  8920                           ;newmain.c: 212:         TMR1H=0x0B;
  8921  08AE  300B               	movlw	11
  8922  08AF  1283               	bcf	3,5	;RP0=0, select bank0
  8923  08B0  008F               	movwf	15	;volatile
  8924                           
  8925                           ;newmain.c: 213:         TMR1L=0xE5;
  8926  08B1  30E5               	movlw	229
  8927  08B2  008E               	movwf	14	;volatile
  8928                           
  8929                           ;newmain.c: 214:         TMR1IF=0;
  8930  08B3  100C               	bcf	12,0	;volatile
  8931                           
  8932                           ;newmain.c: 215:         if(encoderSkipCount < 200){
  8933  08B4  1683               	bsf	3,5	;RP0=1, select bank1
  8934  08B5  0833               	movf	(_encoderSkipCount+1)^(0+128),w	;volatile
  8935  08B6  3A80               	xorlw	128
  8936  08B7  00FF               	movwf	127
  8937  08B8  3080               	movlw	128
  8938  08B9  027F               	subwf	127,w
  8939  08BA  1D03               	skipz
  8940  08BB  28BE               	goto	u453_25
  8941  08BC  30C8               	movlw	200
  8942  08BD  0232               	subwf	_encoderSkipCount^(0+128),w	;volatile
  8943  08BE                     u453_25:
  8944  08BE  1803               	skipnc
  8945  08BF  28C8               	goto	i1l252
  8946                           
  8947                           ;newmain.c: 216:             hourMeterCounter += 1;
  8948  08C0  3001               	movlw	1
  8949  08C1  1683               	bsf	3,5	;RP0=1, select bank1
  8950  08C2  1303               	bcf	3,6	;RP1=0, select bank1
  8951  08C3  07B0               	addwf	_hourMeterCounter^(0+128),f	;volatile
  8952  08C4  1803               	skipnc
  8953  08C5  0AB1               	incf	(_hourMeterCounter+1)^(0+128),f	;volatile
  8954  08C6  3000               	movlw	0
  8955  08C7  07B1               	addwf	(_hourMeterCounter+1)^(0+128),f	;volatile
  8956  08C8                     i1l252:	
  8957                           ;newmain.c: 217:         }
  8958                           
  8959                           
  8960                           ;newmain.c: 218:         encoderSkipCount += 1;
  8961  08C8  3001               	movlw	1
  8962  08C9  1683               	bsf	3,5	;RP0=1, select bank1
  8963  08CA  1303               	bcf	3,6	;RP1=0, select bank1
  8964  08CB  07B2               	addwf	_encoderSkipCount^(0+128),f	;volatile
  8965  08CC  1803               	skipnc
  8966  08CD  0AB3               	incf	(_encoderSkipCount+1)^(0+128),f	;volatile
  8967  08CE  3000               	movlw	0
  8968  08CF  07B3               	addwf	(_encoderSkipCount+1)^(0+128),f	;volatile
  8969  08D0                     i1l3220:
  8970                           
  8971                           ;newmain.c: 220:     if (INTF == 1) {
  8972  08D0  1C8B               	btfss	11,1	;volatile
  8973  08D1  2A82               	goto	L17
  8974                           
  8975                           ;newmain.c: 222:             eeprom_write(0x0C,currentClothLength/(10000UL));
  8976  08D2  3000               	movlw	0
  8977  08D3  00F3               	movwf	i1___lldiv@divisor+3
  8978  08D4  3000               	movlw	0
  8979  08D5  00F2               	movwf	i1___lldiv@divisor+2
  8980  08D6  3027               	movlw	39
  8981  08D7  00F1               	movwf	i1___lldiv@divisor+1
  8982  08D8  3010               	movlw	16
  8983  08D9  00F0               	movwf	i1___lldiv@divisor
  8984  08DA  1283               	bcf	3,5	;RP0=0, select bank0
  8985  08DB  0855               	movf	_currentClothLength+3,w	;volatile
  8986  08DC  00F7               	movwf	i1___lldiv@dividend+3
  8987  08DD  0854               	movf	_currentClothLength+2,w	;volatile
  8988  08DE  00F6               	movwf	i1___lldiv@dividend+2
  8989  08DF  0853               	movf	_currentClothLength+1,w	;volatile
  8990  08E0  00F5               	movwf	i1___lldiv@dividend+1
  8991  08E1  0852               	movf	_currentClothLength,w	;volatile
  8992  08E2  00F4               	movwf	i1___lldiv@dividend
  8993  08E3  160A  118A  209C  120A  158A  	fcall	i1___lldiv
  8994  08E8  0870               	movf	?i1___lldiv,w
  8995  08E9  1283               	bcf	3,5	;RP0=0, select bank0
  8996  08EA  00AD               	movwf	??_highISR
  8997  08EB  082D               	movf	??_highISR,w
  8998  08EC  00AA               	movwf	i1eeprom_write@value
  8999  08ED  300C               	movlw	12
  9000  08EE  160A  158A  25C4  120A  158A  	fcall	i1_eeprom_write
  9001                           
  9002                           ;newmain.c: 223:             eeprom_write(0x0D,(currentClothLength/100)%100);
  9003  08F3  3000               	movlw	0
  9004  08F4  1283               	bcf	3,5	;RP0=0, select bank0
  9005  08F5  1303               	bcf	3,6	;RP1=0, select bank0
  9006  08F6  00A3               	movwf	i1___llmod@divisor+3
  9007  08F7  3000               	movlw	0
  9008  08F8  00A2               	movwf	i1___llmod@divisor+2
  9009  08F9  3000               	movlw	0
  9010  08FA  00A1               	movwf	i1___llmod@divisor+1
  9011  08FB  3064               	movlw	100
  9012  08FC  00A0               	movwf	i1___llmod@divisor
  9013  08FD  3000               	movlw	0
  9014  08FE  00F3               	movwf	i1___lldiv@divisor+3
  9015  08FF  3000               	movlw	0
  9016  0900  00F2               	movwf	i1___lldiv@divisor+2
  9017  0901  3000               	movlw	0
  9018  0902  00F1               	movwf	i1___lldiv@divisor+1
  9019  0903  3064               	movlw	100
  9020  0904  00F0               	movwf	i1___lldiv@divisor
  9021  0905  0855               	movf	_currentClothLength+3,w	;volatile
  9022  0906  00F7               	movwf	i1___lldiv@dividend+3
  9023  0907  0854               	movf	_currentClothLength+2,w	;volatile
  9024  0908  00F6               	movwf	i1___lldiv@dividend+2
  9025  0909  0853               	movf	_currentClothLength+1,w	;volatile
  9026  090A  00F5               	movwf	i1___lldiv@dividend+1
  9027  090B  0852               	movf	_currentClothLength,w	;volatile
  9028  090C  00F4               	movwf	i1___lldiv@dividend
  9029  090D  160A  118A  209C  120A  158A  	fcall	i1___lldiv
  9030  0912  0873               	movf	?i1___lldiv+3,w
  9031  0913  1283               	bcf	3,5	;RP0=0, select bank0
  9032  0914  00A7               	movwf	i1___llmod@dividend+3
  9033  0915  0872               	movf	?i1___lldiv+2,w
  9034  0916  00A6               	movwf	i1___llmod@dividend+2
  9035  0917  0871               	movf	?i1___lldiv+1,w
  9036  0918  00A5               	movwf	i1___llmod@dividend+1
  9037  0919  0870               	movf	?i1___lldiv,w
  9038  091A  00A4               	movwf	i1___llmod@dividend
  9039  091B  160A  158A  2768  120A  158A  	fcall	i1___llmod
  9040  0920  0820               	movf	?i1___llmod,w
  9041  0921  00AD               	movwf	??_highISR
  9042  0922  082D               	movf	??_highISR,w
  9043  0923  00AA               	movwf	i1eeprom_write@value
  9044  0924  300D               	movlw	13
  9045  0925  160A  158A  25C4  120A  158A  	fcall	i1_eeprom_write
  9046                           
  9047                           ;newmain.c: 224:             eeprom_write(0x0E,currentClothLength%100);
  9048  092A  3000               	movlw	0
  9049  092B  1283               	bcf	3,5	;RP0=0, select bank0
  9050  092C  1303               	bcf	3,6	;RP1=0, select bank0
  9051  092D  00A3               	movwf	i1___llmod@divisor+3
  9052  092E  3000               	movlw	0
  9053  092F  00A2               	movwf	i1___llmod@divisor+2
  9054  0930  3000               	movlw	0
  9055  0931  00A1               	movwf	i1___llmod@divisor+1
  9056  0932  3064               	movlw	100
  9057  0933  00A0               	movwf	i1___llmod@divisor
  9058  0934  0855               	movf	_currentClothLength+3,w	;volatile
  9059  0935  00A7               	movwf	i1___llmod@dividend+3
  9060  0936  0854               	movf	_currentClothLength+2,w	;volatile
  9061  0937  00A6               	movwf	i1___llmod@dividend+2
  9062  0938  0853               	movf	_currentClothLength+1,w	;volatile
  9063  0939  00A5               	movwf	i1___llmod@dividend+1
  9064  093A  0852               	movf	_currentClothLength,w	;volatile
  9065  093B  00A4               	movwf	i1___llmod@dividend
  9066  093C  160A  158A  2768  120A  158A  	fcall	i1___llmod
  9067  0941  0820               	movf	?i1___llmod,w
  9068  0942  00AD               	movwf	??_highISR
  9069  0943  082D               	movf	??_highISR,w
  9070  0944  00AA               	movwf	i1eeprom_write@value
  9071  0945  300E               	movlw	14
  9072  0946  160A  158A  25C4  120A  158A  	fcall	i1_eeprom_write
  9073                           
  9074                           ;newmain.c: 225:             eeprom_write(0x11,previousCurrentClothLength/(10000UL));
  9075  094B  3000               	movlw	0
  9076  094C  00F3               	movwf	i1___lldiv@divisor+3
  9077  094D  3000               	movlw	0
  9078  094E  00F2               	movwf	i1___lldiv@divisor+2
  9079  094F  3027               	movlw	39
  9080  0950  00F1               	movwf	i1___lldiv@divisor+1
  9081  0951  3010               	movlw	16
  9082  0952  00F0               	movwf	i1___lldiv@divisor
  9083  0953  1303               	bcf	3,6	;RP1=0, select bank1
  9084  0954  085B               	movf	(_previousCurrentClothLength+3)^(0+128),w	;volatile
  9085  0955  00F7               	movwf	i1___lldiv@dividend+3
  9086  0956  085A               	movf	(_previousCurrentClothLength+2)^(0+128),w	;volatile
  9087  0957  00F6               	movwf	i1___lldiv@dividend+2
  9088  0958  0859               	movf	(_previousCurrentClothLength+1)^(0+128),w	;volatile
  9089  0959  00F5               	movwf	i1___lldiv@dividend+1
  9090  095A  0858               	movf	_previousCurrentClothLength^(0+128),w	;volatile
  9091  095B  00F4               	movwf	i1___lldiv@dividend
  9092  095C  160A  118A  209C  120A  158A  	fcall	i1___lldiv
  9093  0961  0870               	movf	?i1___lldiv,w
  9094  0962  1283               	bcf	3,5	;RP0=0, select bank0
  9095  0963  00AD               	movwf	??_highISR
  9096  0964  082D               	movf	??_highISR,w
  9097  0965  00AA               	movwf	i1eeprom_write@value
  9098  0966  3011               	movlw	17
  9099  0967  160A  158A  25C4  120A  158A  	fcall	i1_eeprom_write
  9100                           
  9101                           ;newmain.c: 226:             eeprom_write(0x12,(previousCurrentClothLength/100)%100);
  9102  096C  3000               	movlw	0
  9103  096D  1283               	bcf	3,5	;RP0=0, select bank0
  9104  096E  1303               	bcf	3,6	;RP1=0, select bank0
  9105  096F  00A3               	movwf	i1___llmod@divisor+3
  9106  0970  3000               	movlw	0
  9107  0971  00A2               	movwf	i1___llmod@divisor+2
  9108  0972  3000               	movlw	0
  9109  0973  00A1               	movwf	i1___llmod@divisor+1
  9110  0974  3064               	movlw	100
  9111  0975  00A0               	movwf	i1___llmod@divisor
  9112  0976  3000               	movlw	0
  9113  0977  00F3               	movwf	i1___lldiv@divisor+3
  9114  0978  3000               	movlw	0
  9115  0979  00F2               	movwf	i1___lldiv@divisor+2
  9116  097A  3000               	movlw	0
  9117  097B  00F1               	movwf	i1___lldiv@divisor+1
  9118  097C  3064               	movlw	100
  9119  097D  00F0               	movwf	i1___lldiv@divisor
  9120  097E  1683               	bsf	3,5	;RP0=1, select bank1
  9121  097F  085B               	movf	(_previousCurrentClothLength+3)^(0+128),w	;volatile
  9122  0980  00F7               	movwf	i1___lldiv@dividend+3
  9123  0981  085A               	movf	(_previousCurrentClothLength+2)^(0+128),w	;volatile
  9124  0982  00F6               	movwf	i1___lldiv@dividend+2
  9125  0983  0859               	movf	(_previousCurrentClothLength+1)^(0+128),w	;volatile
  9126  0984  00F5               	movwf	i1___lldiv@dividend+1
  9127  0985  0858               	movf	_previousCurrentClothLength^(0+128),w	;volatile
  9128  0986  00F4               	movwf	i1___lldiv@dividend
  9129  0987  160A  118A  209C  120A  158A  	fcall	i1___lldiv
  9130  098C  0873               	movf	?i1___lldiv+3,w
  9131  098D  1283               	bcf	3,5	;RP0=0, select bank0
  9132  098E  00A7               	movwf	i1___llmod@dividend+3
  9133  098F  0872               	movf	?i1___lldiv+2,w
  9134  0990  00A6               	movwf	i1___llmod@dividend+2
  9135  0991  0871               	movf	?i1___lldiv+1,w
  9136  0992  00A5               	movwf	i1___llmod@dividend+1
  9137  0993  0870               	movf	?i1___lldiv,w
  9138  0994  00A4               	movwf	i1___llmod@dividend
  9139  0995  160A  158A  2768  120A  158A  	fcall	i1___llmod
  9140  099A  0820               	movf	?i1___llmod,w
  9141  099B  00AD               	movwf	??_highISR
  9142  099C  082D               	movf	??_highISR,w
  9143  099D  00AA               	movwf	i1eeprom_write@value
  9144  099E  3012               	movlw	18
  9145  099F  160A  158A  25C4  120A  158A  	fcall	i1_eeprom_write
  9146                           
  9147                           ;newmain.c: 227:             eeprom_write(0x13,previousCurrentClothLength%100);
  9148  09A4  3000               	movlw	0
  9149  09A5  1283               	bcf	3,5	;RP0=0, select bank0
  9150  09A6  1303               	bcf	3,6	;RP1=0, select bank0
  9151  09A7  00A3               	movwf	i1___llmod@divisor+3
  9152  09A8  3000               	movlw	0
  9153  09A9  00A2               	movwf	i1___llmod@divisor+2
  9154  09AA  3000               	movlw	0
  9155  09AB  00A1               	movwf	i1___llmod@divisor+1
  9156  09AC  3064               	movlw	100
  9157  09AD  00A0               	movwf	i1___llmod@divisor
  9158  09AE  1683               	bsf	3,5	;RP0=1, select bank1
  9159  09AF  085B               	movf	(_previousCurrentClothLength+3)^(0+128),w	;volatile
  9160  09B0  1283               	bcf	3,5	;RP0=0, select bank0
  9161  09B1  00A7               	movwf	i1___llmod@dividend+3
  9162  09B2  1683               	bsf	3,5	;RP0=1, select bank1
  9163  09B3  085A               	movf	(_previousCurrentClothLength+2)^(0+128),w	;volatile
  9164  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  9165  09B5  00A6               	movwf	i1___llmod@dividend+2
  9166  09B6  1683               	bsf	3,5	;RP0=1, select bank1
  9167  09B7  0859               	movf	(_previousCurrentClothLength+1)^(0+128),w	;volatile
  9168  09B8  1283               	bcf	3,5	;RP0=0, select bank0
  9169  09B9  00A5               	movwf	i1___llmod@dividend+1
  9170  09BA  1683               	bsf	3,5	;RP0=1, select bank1
  9171  09BB  0858               	movf	_previousCurrentClothLength^(0+128),w	;volatile
  9172  09BC  1283               	bcf	3,5	;RP0=0, select bank0
  9173  09BD  00A4               	movwf	i1___llmod@dividend
  9174  09BE  160A  158A  2768  120A  158A  	fcall	i1___llmod
  9175  09C3  0820               	movf	?i1___llmod,w
  9176  09C4  00AD               	movwf	??_highISR
  9177  09C5  082D               	movf	??_highISR,w
  9178  09C6  00AA               	movwf	i1eeprom_write@value
  9179  09C7  3013               	movlw	19
  9180  09C8  160A  158A  25C4  120A  158A  	fcall	i1_eeprom_write
  9181                           
  9182                           ;newmain.c: 228:             eeprom_write(0x10,currentClothLengthBalancePlus%100);
  9183  09CD  3064               	movlw	100
  9184  09CE  00F0               	movwf	___awmod@divisor
  9185  09CF  3000               	movlw	0
  9186  09D0  00F1               	movwf	___awmod@divisor+1
  9187  09D1  1303               	bcf	3,6	;RP1=0, select bank1
  9188  09D2  085F               	movf	(_currentClothLengthBalancePlus+1)^(0+128),w	;volatile
  9189  09D3  00F3               	movwf	___awmod@dividend+1
  9190  09D4  085E               	movf	_currentClothLengthBalancePlus^(0+128),w	;volatile
  9191  09D5  00F2               	movwf	___awmod@dividend
  9192  09D6  160A  158A  271D  120A  158A  	fcall	___awmod
  9193  09DB  0870               	movf	?___awmod,w
  9194  09DC  1283               	bcf	3,5	;RP0=0, select bank0
  9195  09DD  00AD               	movwf	??_highISR
  9196  09DE  082D               	movf	??_highISR,w
  9197  09DF  00AA               	movwf	i1eeprom_write@value
  9198  09E0  3010               	movlw	16
  9199  09E1  160A  158A  25C4  120A  158A  	fcall	i1_eeprom_write
  9200                           
  9201                           ;newmain.c: 229:             eeprom_write(0x0F,currentClothLengthBalanceMinus%100);
  9202  09E6  3064               	movlw	100
  9203  09E7  00F0               	movwf	___awmod@divisor
  9204  09E8  3000               	movlw	0
  9205  09E9  00F1               	movwf	___awmod@divisor+1
  9206  09EA  1303               	bcf	3,6	;RP1=0, select bank1
  9207  09EB  085D               	movf	(_currentClothLengthBalanceMinus+1)^(0+128),w	;volatile
  9208  09EC  00F3               	movwf	___awmod@dividend+1
  9209  09ED  085C               	movf	_currentClothLengthBalanceMinus^(0+128),w	;volatile
  9210  09EE  00F2               	movwf	___awmod@dividend
  9211  09EF  160A  158A  271D  120A  158A  	fcall	___awmod
  9212  09F4  0870               	movf	?___awmod,w
  9213  09F5  1283               	bcf	3,5	;RP0=0, select bank0
  9214  09F6  00AD               	movwf	??_highISR
  9215  09F7  082D               	movf	??_highISR,w
  9216  09F8  00AA               	movwf	i1eeprom_write@value
  9217  09F9  300F               	movlw	15
  9218  09FA  160A  158A  25C4  120A  158A  	fcall	i1_eeprom_write
  9219                           
  9220                           ;newmain.c: 230:             eeprom_write(0x17,hourMeter/(10000UL));
  9221  09FF  3000               	movlw	0
  9222  0A00  00F3               	movwf	i1___lldiv@divisor+3
  9223  0A01  3000               	movlw	0
  9224  0A02  00F2               	movwf	i1___lldiv@divisor+2
  9225  0A03  3027               	movlw	39
  9226  0A04  00F1               	movwf	i1___lldiv@divisor+1
  9227  0A05  3010               	movlw	16
  9228  0A06  00F0               	movwf	i1___lldiv@divisor
  9229  0A07  1303               	bcf	3,6	;RP1=0, select bank1
  9230  0A08  0853               	movf	(_hourMeter+3)^(0+128),w	;volatile
  9231  0A09  00F7               	movwf	i1___lldiv@dividend+3
  9232  0A0A  0852               	movf	(_hourMeter+2)^(0+128),w	;volatile
  9233  0A0B  00F6               	movwf	i1___lldiv@dividend+2
  9234  0A0C  0851               	movf	(_hourMeter+1)^(0+128),w	;volatile
  9235  0A0D  00F5               	movwf	i1___lldiv@dividend+1
  9236  0A0E  0850               	movf	_hourMeter^(0+128),w	;volatile
  9237  0A0F  00F4               	movwf	i1___lldiv@dividend
  9238  0A10  160A  118A  209C  120A  158A  	fcall	i1___lldiv
  9239  0A15  0870               	movf	?i1___lldiv,w
  9240  0A16  1283               	bcf	3,5	;RP0=0, select bank0
  9241  0A17  00AD               	movwf	??_highISR
  9242  0A18  082D               	movf	??_highISR,w
  9243  0A19  00AA               	movwf	i1eeprom_write@value
  9244  0A1A  3017               	movlw	23
  9245  0A1B  160A  158A  25C4  120A  158A  	fcall	i1_eeprom_write
  9246                           
  9247                           ;newmain.c: 231:             eeprom_write(0x18,(hourMeter/100)%100);
  9248  0A20  3000               	movlw	0
  9249  0A21  1283               	bcf	3,5	;RP0=0, select bank0
  9250  0A22  1303               	bcf	3,6	;RP1=0, select bank0
  9251  0A23  00A3               	movwf	i1___llmod@divisor+3
  9252  0A24  3000               	movlw	0
  9253  0A25  00A2               	movwf	i1___llmod@divisor+2
  9254  0A26  3000               	movlw	0
  9255  0A27  00A1               	movwf	i1___llmod@divisor+1
  9256  0A28  3064               	movlw	100
  9257  0A29  00A0               	movwf	i1___llmod@divisor
  9258  0A2A  3000               	movlw	0
  9259  0A2B  00F3               	movwf	i1___lldiv@divisor+3
  9260  0A2C  3000               	movlw	0
  9261  0A2D  00F2               	movwf	i1___lldiv@divisor+2
  9262  0A2E  3000               	movlw	0
  9263  0A2F  00F1               	movwf	i1___lldiv@divisor+1
  9264  0A30  3064               	movlw	100
  9265  0A31  00F0               	movwf	i1___lldiv@divisor
  9266  0A32  1683               	bsf	3,5	;RP0=1, select bank1
  9267  0A33  0853               	movf	(_hourMeter+3)^(0+128),w	;volatile
  9268  0A34  00F7               	movwf	i1___lldiv@dividend+3
  9269  0A35  0852               	movf	(_hourMeter+2)^(0+128),w	;volatile
  9270  0A36  00F6               	movwf	i1___lldiv@dividend+2
  9271  0A37  0851               	movf	(_hourMeter+1)^(0+128),w	;volatile
  9272  0A38  00F5               	movwf	i1___lldiv@dividend+1
  9273  0A39  0850               	movf	_hourMeter^(0+128),w	;volatile
  9274  0A3A  00F4               	movwf	i1___lldiv@dividend
  9275  0A3B  160A  118A  209C  120A  158A  	fcall	i1___lldiv
  9276  0A40  0873               	movf	?i1___lldiv+3,w
  9277  0A41  1283               	bcf	3,5	;RP0=0, select bank0
  9278  0A42  00A7               	movwf	i1___llmod@dividend+3
  9279  0A43  0872               	movf	?i1___lldiv+2,w
  9280  0A44  00A6               	movwf	i1___llmod@dividend+2
  9281  0A45  0871               	movf	?i1___lldiv+1,w
  9282  0A46  00A5               	movwf	i1___llmod@dividend+1
  9283  0A47  0870               	movf	?i1___lldiv,w
  9284  0A48  00A4               	movwf	i1___llmod@dividend
  9285  0A49  160A  158A  2768  120A  158A  	fcall	i1___llmod
  9286  0A4E  0820               	movf	?i1___llmod,w
  9287  0A4F  00AD               	movwf	??_highISR
  9288  0A50  082D               	movf	??_highISR,w
  9289  0A51  00AA               	movwf	i1eeprom_write@value
  9290  0A52  3018               	movlw	24
  9291  0A53  160A  158A  25C4  120A  158A  	fcall	i1_eeprom_write
  9292                           
  9293                           ;newmain.c: 232:             eeprom_write(0x19,hourMeter%100);
  9294  0A58  3000               	movlw	0
  9295  0A59  1283               	bcf	3,5	;RP0=0, select bank0
  9296  0A5A  1303               	bcf	3,6	;RP1=0, select bank0
  9297  0A5B  00A3               	movwf	i1___llmod@divisor+3
  9298  0A5C  3000               	movlw	0
  9299  0A5D  00A2               	movwf	i1___llmod@divisor+2
  9300  0A5E  3000               	movlw	0
  9301  0A5F  00A1               	movwf	i1___llmod@divisor+1
  9302  0A60  3064               	movlw	100
  9303  0A61  00A0               	movwf	i1___llmod@divisor
  9304  0A62  1683               	bsf	3,5	;RP0=1, select bank1
  9305  0A63  0853               	movf	(_hourMeter+3)^(0+128),w	;volatile
  9306  0A64  1283               	bcf	3,5	;RP0=0, select bank0
  9307  0A65  00A7               	movwf	i1___llmod@dividend+3
  9308  0A66  1683               	bsf	3,5	;RP0=1, select bank1
  9309  0A67  0852               	movf	(_hourMeter+2)^(0+128),w	;volatile
  9310  0A68  1283               	bcf	3,5	;RP0=0, select bank0
  9311  0A69  00A6               	movwf	i1___llmod@dividend+2
  9312  0A6A  1683               	bsf	3,5	;RP0=1, select bank1
  9313  0A6B  0851               	movf	(_hourMeter+1)^(0+128),w	;volatile
  9314  0A6C  1283               	bcf	3,5	;RP0=0, select bank0
  9315  0A6D  00A5               	movwf	i1___llmod@dividend+1
  9316  0A6E  1683               	bsf	3,5	;RP0=1, select bank1
  9317  0A6F  0850               	movf	_hourMeter^(0+128),w	;volatile
  9318  0A70  1283               	bcf	3,5	;RP0=0, select bank0
  9319  0A71  00A4               	movwf	i1___llmod@dividend
  9320  0A72  160A  158A  2768  120A  158A  	fcall	i1___llmod
  9321  0A77  0820               	movf	?i1___llmod,w
  9322  0A78  00AD               	movwf	??_highISR
  9323  0A79  082D               	movf	??_highISR,w
  9324  0A7A  00AA               	movwf	i1eeprom_write@value
  9325  0A7B  3019               	movlw	25
  9326  0A7C  160A  158A  25C4  120A  158A  	fcall	i1_eeprom_write
  9327                           
  9328                           ;newmain.c: 236:     INTF = 0;
  9329  0A81  108B               	bcf	11,1	;volatile
  9330  0A82                     L17:
  9331                           
  9332                           ;newmain.c: 237:     RBIF = 0;
  9333  0A82  100B               	bcf	11,0	;volatile
  9334  0A83  1283               	bcf	3,5	;RP0=0, select bank0
  9335  0A84  1303               	bcf	3,6	;RP1=0, select bank0
  9336  0A85  0830               	movf	??_highISR+3,w
  9337  0A86  00FF               	movwf	127
  9338  0A87  082F               	movf	??_highISR+2,w
  9339  0A88  008A               	movwf	10
  9340  0A89  0E2E               	swapf	??_highISR+1,w
  9341  0A8A  0083               	movwf	3
  9342  0A8B  0EFE               	swapf	126,f
  9343  0A8C  0E7E               	swapf	126,w
  9344  0A8D  0009               	retfie
  9345  0A8E                     __end_of_highISR:
  9346                           
  9347                           	psect	intentry
  9348  0004                     __pintentry:	
  9349                           ;incstack = 0
  9350                           ; Regs used in _highISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9351                           
  9352  0004                     interrupt_function:
  9353  007E                     saved_w	set	btemp
  9354  0004  00FE               	movwf	btemp
  9355  0005  0E03               	swapf	3,w
  9356  0006  1283               	bcf	3,5	;RP0=0, select bank0
  9357  0007  1303               	bcf	3,6	;RP1=0, select bank0
  9358  0008  00AE               	movwf	??_highISR+1
  9359  0009  080A               	movf	10,w
  9360  000A  00AF               	movwf	??_highISR+2
  9361  000B  087F               	movf	btemp+1,w
  9362  000C  00B0               	movwf	??_highISR+3
  9363  000D  120A  158A  287F   	ljmp	_highISR
  9364                           
  9365                           	psect	text30
  9366  1DC4                     __ptext30:	
  9367 ;; *************** function i1_eeprom_write *****************
  9368 ;; Defined at:
  9369 ;;		line 6 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/pic/__eewrite.c"
  9370 ;; Parameters:    Size  Location     Type
  9371 ;;  addr            1    wreg     unsigned char 
  9372 ;;  value           1   10[BANK0 ] unsigned char 
  9373 ;; Auto vars:     Size  Location     Type
  9374 ;;  addr            1   12[BANK0 ] unsigned char 
  9375 ;; Return value:  Size  Location     Type
  9376 ;;                  1    wreg      void 
  9377 ;; Registers used:
  9378 ;;		wreg, status,2, status,0
  9379 ;; Tracked objects:
  9380 ;;		On entry : 300/0
  9381 ;;		On exit  : 300/300
  9382 ;;		Unchanged: 0/0
  9383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9384 ;;      Params:         0       1       0       0       0
  9385 ;;      Locals:         0       1       0       0       0
  9386 ;;      Temps:          0       1       0       0       0
  9387 ;;      Totals:         0       3       0       0       0
  9388 ;;Total ram usage:        3 bytes
  9389 ;; Hardware stack levels used: 1
  9390 ;; This function calls:
  9391 ;;		Nothing
  9392 ;; This function is called by:
  9393 ;;		_highISR
  9394 ;; This function uses a non-reentrant model
  9395 ;;
  9396                           
  9397                           
  9398                           ;psect for function i1_eeprom_write
  9399  1DC4                     i1_eeprom_write:
  9400                           
  9401                           ;incstack = 0
  9402                           ; Regs used in i1_eeprom_write: [wreg+status,2+status,0]
  9403                           ;i1eeprom_write@addr stored from wreg
  9404  1DC4  00AC               	movwf	i1eeprom_write@addr
  9405  1DC5                     i1l524:	
  9406                           ;/Applications/microchip/xc8/v2.32/pic/sources/c90/pic/__eewrite.c: 6: eeprom_write(unsi
      +                          gned char addr, unsigned char value);/Applications/microchip/xc8/v2.32/pic/sources/c90/p
      +                          ic/__eewrite.c: 7: {;/Applications/microchip/xc8/v2.32/pic/sources/c90/pic/__eewrite.c: 
      +                          8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); EECON1 &= 
      +                          0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCONbits.GIE
      +                           = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EECON1bits.W
      +                          REN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  9407                           
  9408  1DC5  1683               	bsf	3,5	;RP0=1, select bank3
  9409  1DC6  1703               	bsf	3,6	;RP1=1, select bank3
  9410  1DC7  188C               	btfsc	12,1	;volsfr
  9411  1DC8  2DC5               	goto	i1l524
  9412  1DC9  1283               	bcf	3,5	;RP0=0, select bank0
  9413  1DCA  1303               	bcf	3,6	;RP1=0, select bank0
  9414  1DCB  082C               	movf	i1eeprom_write@addr,w
  9415  1DCC  1703               	bsf	3,6	;RP1=1, select bank2
  9416  1DCD  008D               	movwf	13	;volatile
  9417  1DCE  1303               	bcf	3,6	;RP1=0, select bank0
  9418  1DCF  082A               	movf	i1eeprom_write@value,w
  9419  1DD0  1703               	bsf	3,6	;RP1=1, select bank2
  9420  1DD1  008C               	movwf	12	;volatile
  9421  1DD2  303F               	movlw	63
  9422  1DD3  1303               	bcf	3,6	;RP1=0, select bank0
  9423  1DD4  00AB               	movwf	??i1_eeprom_write
  9424  1DD5  082B               	movf	??i1_eeprom_write,w
  9425  1DD6  1683               	bsf	3,5	;RP0=1, select bank3
  9426  1DD7  1703               	bsf	3,6	;RP1=1, select bank3
  9427  1DD8  058C               	andwf	12,f	;volsfr
  9428  1DD9  1003               	bcf	3,0	;volatile
  9429  1DDA  1B8B               	btfsc	11,7	;volatile
  9430  1DDB  1403               	bsf	3,0	;volatile
  9431  1DDC  138B               	bcf	11,7	;volatile
  9432  1DDD  150C               	bsf	12,2	;volsfr
  9433  1DDE  3055               	movlw	85
  9434  1DDF  008D               	movwf	13	;volsfr
  9435  1DE0  30AA               	movlw	170
  9436  1DE1  008D               	movwf	13	;volsfr
  9437  1DE2  148C               	bsf	12,1	;volsfr
  9438  1DE3  110C               	bcf	12,2	;volsfr
  9439  1DE4  1C03               	btfss	3,0	;volatile
  9440  1DE5  0008               	return
  9441  1DE6  178B               	bsf	11,7	;volatile
  9442  1DE7  0008               	return
  9443  1DE8                     __end_ofi1_eeprom_write:
  9444                           
  9445                           	psect	text31
  9446  1F68                     __ptext31:	
  9447 ;; *************** function i1___llmod *****************
  9448 ;; Defined at:
  9449 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/common/llmod.c"
  9450 ;; Parameters:    Size  Location     Type
  9451 ;;  divisor         4    0[BANK0 ] unsigned long 
  9452 ;;  dividend        4    4[BANK0 ] unsigned long 
  9453 ;; Auto vars:     Size  Location     Type
  9454 ;;  counter         1    9[BANK0 ] unsigned char 
  9455 ;; Return value:  Size  Location     Type
  9456 ;;                  4    0[BANK0 ] unsigned long 
  9457 ;; Registers used:
  9458 ;;		wreg, status,2, status,0
  9459 ;; Tracked objects:
  9460 ;;		On entry : 300/0
  9461 ;;		On exit  : 300/0
  9462 ;;		Unchanged: 0/0
  9463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9464 ;;      Params:         0       8       0       0       0
  9465 ;;      Locals:         0       1       0       0       0
  9466 ;;      Temps:          0       1       0       0       0
  9467 ;;      Totals:         0      10       0       0       0
  9468 ;;Total ram usage:       10 bytes
  9469 ;; Hardware stack levels used: 1
  9470 ;; This function calls:
  9471 ;;		Nothing
  9472 ;; This function is called by:
  9473 ;;		_highISR
  9474 ;; This function uses a non-reentrant model
  9475 ;;
  9476                           
  9477                           
  9478                           ;psect for function i1___llmod
  9479  1F68                     i1___llmod:
  9480                           
  9481                           ;incstack = 0
  9482                           ; Regs used in i1___llmod: [wreg+status,2+status,0]
  9483  1F68  0823               	movf	i1___llmod@divisor+3,w
  9484  1F69  0422               	iorwf	i1___llmod@divisor+2,w
  9485  1F6A  0421               	iorwf	i1___llmod@divisor+1,w
  9486  1F6B  0420               	iorwf	i1___llmod@divisor,w
  9487  1F6C  1903               	skipnz
  9488  1F6D  2FAB               	goto	i1l3082
  9489  1F6E  01A9               	clrf	i1___llmod@counter
  9490  1F6F  0AA9               	incf	i1___llmod@counter,f
  9491  1F70                     i1l3072:
  9492  1F70  1BA3               	btfsc	i1___llmod@divisor+3,7
  9493  1F71  2F80               	goto	i1l3074
  9494  1F72  3001               	movlw	1
  9495  1F73  00A8               	movwf	??i1___llmod
  9496  1F74                     u419_25:
  9497  1F74  1003               	clrc
  9498  1F75  0DA0               	rlf	i1___llmod@divisor,f
  9499  1F76  0DA1               	rlf	i1___llmod@divisor+1,f
  9500  1F77  0DA2               	rlf	i1___llmod@divisor+2,f
  9501  1F78  0DA3               	rlf	i1___llmod@divisor+3,f
  9502  1F79  0BA8               	decfsz	??i1___llmod,f
  9503  1F7A  2F74               	goto	u419_25
  9504  1F7B  3001               	movlw	1
  9505  1F7C  00A8               	movwf	??i1___llmod
  9506  1F7D  0828               	movf	??i1___llmod,w
  9507  1F7E  07A9               	addwf	i1___llmod@counter,f
  9508  1F7F  2F70               	goto	i1l3072
  9509  1F80                     i1l3074:
  9510  1F80  0823               	movf	i1___llmod@divisor+3,w
  9511  1F81  0227               	subwf	i1___llmod@dividend+3,w
  9512  1F82  1D03               	skipz
  9513  1F83  2F8E               	goto	u421_25
  9514  1F84  0822               	movf	i1___llmod@divisor+2,w
  9515  1F85  0226               	subwf	i1___llmod@dividend+2,w
  9516  1F86  1D03               	skipz
  9517  1F87  2F8E               	goto	u421_25
  9518  1F88  0821               	movf	i1___llmod@divisor+1,w
  9519  1F89  0225               	subwf	i1___llmod@dividend+1,w
  9520  1F8A  1D03               	skipz
  9521  1F8B  2F8E               	goto	u421_25
  9522  1F8C  0820               	movf	i1___llmod@divisor,w
  9523  1F8D  0224               	subwf	i1___llmod@dividend,w
  9524  1F8E                     u421_25:
  9525  1F8E  1C03               	skipc
  9526  1F8F  2F9E               	goto	i1l3078
  9527  1F90  0820               	movf	i1___llmod@divisor,w
  9528  1F91  02A4               	subwf	i1___llmod@dividend,f
  9529  1F92  0821               	movf	i1___llmod@divisor+1,w
  9530  1F93  1C03               	skipc
  9531  1F94  0F21               	incfsz	i1___llmod@divisor+1,w
  9532  1F95  02A5               	subwf	i1___llmod@dividend+1,f
  9533  1F96  0822               	movf	i1___llmod@divisor+2,w
  9534  1F97  1C03               	skipc
  9535  1F98  0F22               	incfsz	i1___llmod@divisor+2,w
  9536  1F99  02A6               	subwf	i1___llmod@dividend+2,f
  9537  1F9A  0823               	movf	i1___llmod@divisor+3,w
  9538  1F9B  1C03               	skipc
  9539  1F9C  0F23               	incfsz	i1___llmod@divisor+3,w
  9540  1F9D  02A7               	subwf	i1___llmod@dividend+3,f
  9541  1F9E                     i1l3078:
  9542  1F9E  3001               	movlw	1
  9543  1F9F                     u422_25:
  9544  1F9F  1003               	clrc
  9545  1FA0  0CA3               	rrf	i1___llmod@divisor+3,f
  9546  1FA1  0CA2               	rrf	i1___llmod@divisor+2,f
  9547  1FA2  0CA1               	rrf	i1___llmod@divisor+1,f
  9548  1FA3  0CA0               	rrf	i1___llmod@divisor,f
  9549  1FA4  3EFF               	addlw	-1
  9550  1FA5  1D03               	skipz
  9551  1FA6  2F9F               	goto	u422_25
  9552  1FA7  3001               	movlw	1
  9553  1FA8  02A9               	subwf	i1___llmod@counter,f
  9554  1FA9  1D03               	btfss	3,2
  9555  1FAA  2F80               	goto	i1l3074
  9556  1FAB                     i1l3082:
  9557  1FAB  0827               	movf	i1___llmod@dividend+3,w
  9558  1FAC  00A3               	movwf	?i1___llmod+3
  9559  1FAD  0826               	movf	i1___llmod@dividend+2,w
  9560  1FAE  00A2               	movwf	?i1___llmod+2
  9561  1FAF  0825               	movf	i1___llmod@dividend+1,w
  9562  1FB0  00A1               	movwf	?i1___llmod+1
  9563  1FB1  0824               	movf	i1___llmod@dividend,w
  9564  1FB2  00A0               	movwf	?i1___llmod
  9565  1FB3  0008               	return
  9566  1FB4                     __end_ofi1___llmod:
  9567                           
  9568                           	psect	text32
  9569  109C                     __ptext32:	
  9570 ;; *************** function i1___lldiv *****************
  9571 ;; Defined at:
  9572 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/common/__lldiv.c"
  9573 ;; Parameters:    Size  Location     Type
  9574 ;;  divisor         4    0[COMMON] unsigned long 
  9575 ;;  dividend        4    4[COMMON] unsigned long 
  9576 ;; Auto vars:     Size  Location     Type
  9577 ;;  quotient        4    9[COMMON] unsigned long 
  9578 ;;  counter         1   13[COMMON] unsigned char 
  9579 ;; Return value:  Size  Location     Type
  9580 ;;                  4    0[COMMON] unsigned long 
  9581 ;; Registers used:
  9582 ;;		wreg, status,2, status,0
  9583 ;; Tracked objects:
  9584 ;;		On entry : 200/0
  9585 ;;		On exit  : 200/0
  9586 ;;		Unchanged: 200/0
  9587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9588 ;;      Params:         8       0       0       0       0
  9589 ;;      Locals:         5       0       0       0       0
  9590 ;;      Temps:          1       0       0       0       0
  9591 ;;      Totals:        14       0       0       0       0
  9592 ;;Total ram usage:       14 bytes
  9593 ;; Hardware stack levels used: 1
  9594 ;; This function calls:
  9595 ;;		Nothing
  9596 ;; This function is called by:
  9597 ;;		_highISR
  9598 ;; This function uses a non-reentrant model
  9599 ;;
  9600                           
  9601                           
  9602                           ;psect for function i1___lldiv
  9603  109C                     i1___lldiv:
  9604                           
  9605                           ;incstack = 0
  9606                           ; Regs used in i1___lldiv: [wreg+status,2+status,0]
  9607  109C  3000               	movlw	0
  9608  109D  00FC               	movwf	i1___lldiv@quotient+3
  9609  109E  3000               	movlw	0
  9610  109F  00FB               	movwf	i1___lldiv@quotient+2
  9611  10A0  3000               	movlw	0
  9612  10A1  00FA               	movwf	i1___lldiv@quotient+1
  9613  10A2  3000               	movlw	0
  9614  10A3  00F9               	movwf	i1___lldiv@quotient
  9615  10A4  0873               	movf	i1___lldiv@divisor+3,w
  9616  10A5  0472               	iorwf	i1___lldiv@divisor+2,w
  9617  10A6  0471               	iorwf	i1___lldiv@divisor+1,w
  9618  10A7  0470               	iorwf	i1___lldiv@divisor,w
  9619  10A8  1903               	skipnz
  9620  10A9  28F1               	goto	i1l3062
  9621  10AA  01FD               	clrf	i1___lldiv@counter
  9622  10AB  0AFD               	incf	i1___lldiv@counter,f
  9623  10AC                     i1l3048:
  9624  10AC  1BF3               	btfsc	i1___lldiv@divisor+3,7
  9625  10AD  28BC               	goto	i1l3050
  9626  10AE  3001               	movlw	1
  9627  10AF  00F8               	movwf	??i1___lldiv
  9628  10B0                     u412_25:
  9629  10B0  1003               	clrc
  9630  10B1  0DF0               	rlf	i1___lldiv@divisor,f
  9631  10B2  0DF1               	rlf	i1___lldiv@divisor+1,f
  9632  10B3  0DF2               	rlf	i1___lldiv@divisor+2,f
  9633  10B4  0DF3               	rlf	i1___lldiv@divisor+3,f
  9634  10B5  0BF8               	decfsz	??i1___lldiv,f
  9635  10B6  28B0               	goto	u412_25
  9636  10B7  3001               	movlw	1
  9637  10B8  00F8               	movwf	??i1___lldiv
  9638  10B9  0878               	movf	??i1___lldiv,w
  9639  10BA  07FD               	addwf	i1___lldiv@counter,f
  9640  10BB  28AC               	goto	i1l3048
  9641  10BC                     i1l3050:
  9642  10BC  3001               	movlw	1
  9643  10BD  00F8               	movwf	??i1___lldiv
  9644  10BE                     u414_25:
  9645  10BE  1003               	clrc
  9646  10BF  0DF9               	rlf	i1___lldiv@quotient,f
  9647  10C0  0DFA               	rlf	i1___lldiv@quotient+1,f
  9648  10C1  0DFB               	rlf	i1___lldiv@quotient+2,f
  9649  10C2  0DFC               	rlf	i1___lldiv@quotient+3,f
  9650  10C3  0BF8               	decfsz	??i1___lldiv,f
  9651  10C4  28BE               	goto	u414_25
  9652  10C5  0873               	movf	i1___lldiv@divisor+3,w
  9653  10C6  0277               	subwf	i1___lldiv@dividend+3,w
  9654  10C7  1D03               	skipz
  9655  10C8  28D3               	goto	u415_25
  9656  10C9  0872               	movf	i1___lldiv@divisor+2,w
  9657  10CA  0276               	subwf	i1___lldiv@dividend+2,w
  9658  10CB  1D03               	skipz
  9659  10CC  28D3               	goto	u415_25
  9660  10CD  0871               	movf	i1___lldiv@divisor+1,w
  9661  10CE  0275               	subwf	i1___lldiv@dividend+1,w
  9662  10CF  1D03               	skipz
  9663  10D0  28D3               	goto	u415_25
  9664  10D1  0870               	movf	i1___lldiv@divisor,w
  9665  10D2  0274               	subwf	i1___lldiv@dividend,w
  9666  10D3                     u415_25:
  9667  10D3  1C03               	skipc
  9668  10D4  28E4               	goto	i1l3058
  9669  10D5  0870               	movf	i1___lldiv@divisor,w
  9670  10D6  02F4               	subwf	i1___lldiv@dividend,f
  9671  10D7  0871               	movf	i1___lldiv@divisor+1,w
  9672  10D8  1C03               	skipc
  9673  10D9  0F71               	incfsz	i1___lldiv@divisor+1,w
  9674  10DA  02F5               	subwf	i1___lldiv@dividend+1,f
  9675  10DB  0872               	movf	i1___lldiv@divisor+2,w
  9676  10DC  1C03               	skipc
  9677  10DD  0F72               	incfsz	i1___lldiv@divisor+2,w
  9678  10DE  02F6               	subwf	i1___lldiv@dividend+2,f
  9679  10DF  0873               	movf	i1___lldiv@divisor+3,w
  9680  10E0  1C03               	skipc
  9681  10E1  0F73               	incfsz	i1___lldiv@divisor+3,w
  9682  10E2  02F7               	subwf	i1___lldiv@dividend+3,f
  9683  10E3  1479               	bsf	i1___lldiv@quotient,0
  9684  10E4                     i1l3058:
  9685  10E4  3001               	movlw	1
  9686  10E5                     u416_25:
  9687  10E5  1003               	clrc
  9688  10E6  0CF3               	rrf	i1___lldiv@divisor+3,f
  9689  10E7  0CF2               	rrf	i1___lldiv@divisor+2,f
  9690  10E8  0CF1               	rrf	i1___lldiv@divisor+1,f
  9691  10E9  0CF0               	rrf	i1___lldiv@divisor,f
  9692  10EA  3EFF               	addlw	-1
  9693  10EB  1D03               	skipz
  9694  10EC  28E5               	goto	u416_25
  9695  10ED  3001               	movlw	1
  9696  10EE  02FD               	subwf	i1___lldiv@counter,f
  9697  10EF  1D03               	btfss	3,2
  9698  10F0  28BC               	goto	i1l3050
  9699  10F1                     i1l3062:
  9700  10F1  087C               	movf	i1___lldiv@quotient+3,w
  9701  10F2  00F3               	movwf	?i1___lldiv+3
  9702  10F3  087B               	movf	i1___lldiv@quotient+2,w
  9703  10F4  00F2               	movwf	?i1___lldiv+2
  9704  10F5  087A               	movf	i1___lldiv@quotient+1,w
  9705  10F6  00F1               	movwf	?i1___lldiv+1
  9706  10F7  0879               	movf	i1___lldiv@quotient,w
  9707  10F8  00F0               	movwf	?i1___lldiv
  9708  10F9  0008               	return
  9709  10FA                     __end_ofi1___lldiv:
  9710                           
  9711                           	psect	text33
  9712  1F1D                     __ptext33:	
  9713 ;; *************** function ___awmod *****************
  9714 ;; Defined at:
  9715 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/common/awmod.c"
  9716 ;; Parameters:    Size  Location     Type
  9717 ;;  divisor         2    0[COMMON] int 
  9718 ;;  dividend        2    2[COMMON] int 
  9719 ;; Auto vars:     Size  Location     Type
  9720 ;;  sign            1    6[COMMON] unsigned char 
  9721 ;;  counter         1    5[COMMON] unsigned char 
  9722 ;; Return value:  Size  Location     Type
  9723 ;;                  2    0[COMMON] int 
  9724 ;; Registers used:
  9725 ;;		wreg, status,2, status,0
  9726 ;; Tracked objects:
  9727 ;;		On entry : 300/100
  9728 ;;		On exit  : 300/100
  9729 ;;		Unchanged: 300/0
  9730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9731 ;;      Params:         4       0       0       0       0
  9732 ;;      Locals:         2       0       0       0       0
  9733 ;;      Temps:          1       0       0       0       0
  9734 ;;      Totals:         7       0       0       0       0
  9735 ;;Total ram usage:        7 bytes
  9736 ;; Hardware stack levels used: 1
  9737 ;; This function calls:
  9738 ;;		Nothing
  9739 ;; This function is called by:
  9740 ;;		_highISR
  9741 ;; This function uses a non-reentrant model
  9742 ;;
  9743                           
  9744                           
  9745                           ;psect for function ___awmod
  9746  1F1D                     ___awmod:
  9747                           
  9748                           ;incstack = 0
  9749                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9750  1F1D  01F6               	clrf	___awmod@sign
  9751  1F1E  1FF3               	btfss	___awmod@dividend+1,7
  9752  1F1F  2F27               	goto	i1l2992
  9753  1F20  09F2               	comf	___awmod@dividend,f
  9754  1F21  09F3               	comf	___awmod@dividend+1,f
  9755  1F22  0AF2               	incf	___awmod@dividend,f
  9756  1F23  1903               	skipnz
  9757  1F24  0AF3               	incf	___awmod@dividend+1,f
  9758  1F25  01F6               	clrf	___awmod@sign
  9759  1F26  0AF6               	incf	___awmod@sign,f
  9760  1F27                     i1l2992:
  9761  1F27  1FF1               	btfss	___awmod@divisor+1,7
  9762  1F28  2F2E               	goto	i1l2996
  9763  1F29  09F0               	comf	___awmod@divisor,f
  9764  1F2A  09F1               	comf	___awmod@divisor+1,f
  9765  1F2B  0AF0               	incf	___awmod@divisor,f
  9766  1F2C  1903               	skipnz
  9767  1F2D  0AF1               	incf	___awmod@divisor+1,f
  9768  1F2E                     i1l2996:
  9769  1F2E  0870               	movf	___awmod@divisor,w
  9770  1F2F  0471               	iorwf	___awmod@divisor+1,w
  9771  1F30  1903               	btfsc	3,2
  9772  1F31  2F5B               	goto	i1l3014
  9773  1F32  01F5               	clrf	___awmod@counter
  9774  1F33  0AF5               	incf	___awmod@counter,f
  9775  1F34                     i1l3004:
  9776  1F34  1BF1               	btfsc	___awmod@divisor+1,7
  9777  1F35  2F42               	goto	i1l3006
  9778  1F36  3001               	movlw	1
  9779  1F37                     u402_25:
  9780  1F37  1003               	clrc
  9781  1F38  0DF0               	rlf	___awmod@divisor,f
  9782  1F39  0DF1               	rlf	___awmod@divisor+1,f
  9783  1F3A  3EFF               	addlw	-1
  9784  1F3B  1D03               	skipz
  9785  1F3C  2F37               	goto	u402_25
  9786  1F3D  3001               	movlw	1
  9787  1F3E  00F4               	movwf	??___awmod
  9788  1F3F  0874               	movf	??___awmod,w
  9789  1F40  07F5               	addwf	___awmod@counter,f
  9790  1F41  2F34               	goto	i1l3004
  9791  1F42                     i1l3006:
  9792  1F42  0871               	movf	___awmod@divisor+1,w
  9793  1F43  0273               	subwf	___awmod@dividend+1,w
  9794  1F44  1D03               	skipz
  9795  1F45  2F48               	goto	u404_25
  9796  1F46  0870               	movf	___awmod@divisor,w
  9797  1F47  0272               	subwf	___awmod@dividend,w
  9798  1F48                     u404_25:
  9799  1F48  1C03               	skipc
  9800  1F49  2F50               	goto	i1l3010
  9801  1F4A  0870               	movf	___awmod@divisor,w
  9802  1F4B  02F2               	subwf	___awmod@dividend,f
  9803  1F4C  0871               	movf	___awmod@divisor+1,w
  9804  1F4D  1C03               	skipc
  9805  1F4E  03F3               	decf	___awmod@dividend+1,f
  9806  1F4F  02F3               	subwf	___awmod@dividend+1,f
  9807  1F50                     i1l3010:
  9808  1F50  3001               	movlw	1
  9809  1F51                     u405_25:
  9810  1F51  1003               	clrc
  9811  1F52  0CF1               	rrf	___awmod@divisor+1,f
  9812  1F53  0CF0               	rrf	___awmod@divisor,f
  9813  1F54  3EFF               	addlw	-1
  9814  1F55  1D03               	skipz
  9815  1F56  2F51               	goto	u405_25
  9816  1F57  3001               	movlw	1
  9817  1F58  02F5               	subwf	___awmod@counter,f
  9818  1F59  1D03               	btfss	3,2
  9819  1F5A  2F42               	goto	i1l3006
  9820  1F5B                     i1l3014:
  9821  1F5B  0876               	movf	___awmod@sign,w
  9822  1F5C  1903               	btfsc	3,2
  9823  1F5D  2F63               	goto	i1l3018
  9824  1F5E  09F2               	comf	___awmod@dividend,f
  9825  1F5F  09F3               	comf	___awmod@dividend+1,f
  9826  1F60  0AF2               	incf	___awmod@dividend,f
  9827  1F61  1903               	skipnz
  9828  1F62  0AF3               	incf	___awmod@dividend+1,f
  9829  1F63                     i1l3018:
  9830  1F63  0873               	movf	___awmod@dividend+1,w
  9831  1F64  00F1               	movwf	?___awmod+1
  9832  1F65  0872               	movf	___awmod@dividend,w
  9833  1F66  00F0               	movwf	?___awmod
  9834  1F67  0008               	return
  9835  1F68                     __end_of___awmod:
  9836  007E                     btemp	set	126	;btemp
  9837  007E                     wtemp0	set	126
  9838                           
  9839                           	psect	config
  9840                           
  9841                           ;Config register CONFIG1 @ 0x2007
  9842                           ;	Oscillator Selection bits
  9843                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  9844                           ;	Watchdog Timer Enable bit
  9845                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9846                           ;	Power-up Timer Enable bit
  9847                           ;	PWRTE = OFF, PWRT disabled
  9848                           ;	RE3/MCLR pin function select bit
  9849                           ;	MCLRE = 0x1, unprogrammed default
  9850                           ;	Code Protection bit
  9851                           ;	CP = OFF, Program memory code protection is disabled
  9852                           ;	Data Code Protection bit
  9853                           ;	CPD = OFF, Data memory code protection is disabled
  9854                           ;	Brown Out Reset Selection bits
  9855                           ;	BOREN = ON, BOR enabled
  9856                           ;	Internal External Switchover bit
  9857                           ;	IESO = 0x1, unprogrammed default
  9858                           ;	Fail-Safe Clock Monitor Enabled bit
  9859                           ;	FCMEN = 0x1, unprogrammed default
  9860                           ;	Low Voltage Programming Enable bit
  9861                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9862                           ;	In-Circuit Debugger Mode bit
  9863                           ;	DEBUG = 0x1, unprogrammed default
  9864  2007                     	org	8199
  9865  2007  2FF2               	dw	12274
  9866                           
  9867                           ;Config register CONFIG2 @ 0x2008
  9868                           ;	Brown-out Reset Selection bit
  9869                           ;	BOR4V = 0x1, unprogrammed default
  9870                           ;	Flash Program Memory Self Write Enable bits
  9871                           ;	WRT = OFF, Write protection off
  9872  2008                     	org	8200
  9873  2008  3FFF               	dw	16383

Data Sizes:
    Strings     30
    Constant    95
    Data        34
    BSS         34
    Persistent  16
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     46      63
    BANK1            80     16      80
    BANK3            96     13      17
    BANK2            96      0       0

Pointer List with Targets:

    displayString@string	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[6]), 
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _highISR in COMMON

    _highISR->i1___lldiv
    i1_eeprom_write->i1___lldiv
    i1___llmod->i1___lldiv

Critical Paths under _main in BANK0

    _main->___lldiv
    _led->_dataPass
    _display2->___lldiv
    _eepromRead->___lldiv
    ___wmul->_eeprom_read
    ___lmul->_eeprom_read
    _editValues->___lldiv
    _eeprom_write->___lldiv
    _displayString->_dataPass
    _display1->___lldiv
    ___llmod->___lldiv
    ___lldiv->___lmul
    _countPlus->___aldiv
    _countMinus->___aldiv

Critical Paths under _highISR in BANK0

    _highISR->i1_eeprom_write
    i1_eeprom_write->i1___llmod

Critical Paths under _main in BANK1

    _viewMenu->_display1
    _viewMenu->_display2
    _display2->___llmod
    _editValues->_eeprom_write
    _eeprom_write->___llmod
    _editMenu->_display1
    _displayChange->_increment
    _increment->___llmod
    _display1->___llmod

Critical Paths under _highISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_editMenu
    _viewMenu->_display1
    _editMenu->_displayChange
    _displayChange->_increment

Critical Paths under _highISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _highISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   70237
                                              9 BANK3      4     4      0
                            ___lldiv
                            ___llmod
                             ___lmul
                         _countMinus
                          _countPlus
                           _editMenu
                         _editValues
                         _eepromRead
                       _eeprom_write
                            _encoder
                        _initializer
                        _resetSwitch
                           _viewMenu
 ---------------------------------------------------------------------------------
 (1) _viewMenu                                             1     1      0   19635
                                              1 BANK3      1     1      0
                           _display1
                           _display2
                                _led
                           _upSwitch
 ---------------------------------------------------------------------------------
 (2) _led                                                  3     3      0     173
                                             20 BANK0      3     3      0
                           _dataPass
 ---------------------------------------------------------------------------------
 (2) _display2                                             6     2      4    9306
                                             10 BANK1      6     2      4
                            ___lldiv
                            ___llmod
                           _dataPass
 ---------------------------------------------------------------------------------
 (1) _resetSwitch                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initializer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _encoder                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eepromRead                                          14    14      0    7595
                                              0 BANK1     14    14      0
                            ___lldiv
                             ___lmul
                             ___wmul
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _eeprom_read                                          2     2      0      22
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1308
                                             19 BANK0      6     2      4
                        _eeprom_read (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8    1764
                                             19 BANK0     13     5      8
                        _eeprom_read (ARG)
 ---------------------------------------------------------------------------------
 (1) _editValues                                           1     1      0   11010
                                             13 BANK1      1     1      0
                            ___lldiv
                            ___llmod
                       _eeprom_write
                        _enterSwitch
 ---------------------------------------------------------------------------------
 (2) _enterSwitch                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eeprom_write                                         3     2      1    2017
                                             10 BANK1      3     2      1
                            ___lldiv (ARG)
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _editMenu                                             1     1      0   15897
                                              8 BANK3      1     1      0
                           _display1
                      _displayChange
                      _displayString
                         _menuSwitch
 ---------------------------------------------------------------------------------
 (2) _menuSwitch                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _displayString                                        3     3      0     465
                                             20 BANK0      3     3      0
                           _dataPass
 ---------------------------------------------------------------------------------
 (2) _displayChange                                        5     1      4    5276
                                             14 BANK1      1     1      0
                                              4 BANK3      4     0      4
                          _increment
                       _selectSwitch
                           _upSwitch
 ---------------------------------------------------------------------------------
 (2) _upSwitch                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _selectSwitch                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _increment                                            8     4      4    4761
                                             10 BANK1      4     0      4
                                              0 BANK3      4     4      0
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) _display1                                             7     3      4   10156
                                             10 BANK1      6     2      4
                                              0 BANK3      1     1      0
                            ___lldiv
                            ___llmod
                           _dataPass
 ---------------------------------------------------------------------------------
 (3) _dataPass                                             3     3      0     130
                                             17 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8    4492
                                              0 BANK1     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8    4501
                                             32 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _countPlus                                           16    12      4    1663
                                             32 BANK0     12     8      4
                                              0 BANK1      4     4      0
                            ___aldiv
                            ___almod
 ---------------------------------------------------------------------------------
 (1) _countMinus                                          12     8      4    1663
                                             32 BANK0     12     8      4
                            ___aldiv
                            ___almod
 ---------------------------------------------------------------------------------
 (2) ___almod                                             11     3      8     793
                                             17 BANK0     11     3      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     805
                                             17 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _highISR                                              4     4      0    1875
                                             13 BANK0      4     4      0
                            ___awmod
                          i1___lldiv
                          i1___llmod
                     i1_eeprom_write
 ---------------------------------------------------------------------------------
 (6) i1_eeprom_write                                       3     2      1     330
                                             10 BANK0      3     2      1
                            ___awmod (ARG)
                          i1___lldiv (ARG)
                          i1___llmod (ARG)
 ---------------------------------------------------------------------------------
 (6) i1___llmod                                           10     2      8     471
                                              0 BANK0     10     2      8
                          i1___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) i1___lldiv                                           14     6      8     474
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
     ___lmul (ARG)
       _eeprom_read (ARG)
   ___llmod
     ___lldiv (ARG)
   ___lmul
   _countMinus
     ___aldiv
     ___almod
   _countPlus
     ___aldiv
     ___almod
   _editMenu
     _display1
       ___lldiv
       ___llmod
       _dataPass
     _displayChange
       _increment
         ___llmod
       _selectSwitch
       _upSwitch
     _displayString
       _dataPass
     _menuSwitch
   _editValues
     ___lldiv
     ___llmod
     _eeprom_write
       ___lldiv (ARG)
       ___llmod (ARG)
     _enterSwitch
   _eepromRead
     ___lldiv
     ___lmul
     ___wmul
       _eeprom_read (ARG)
     _eeprom_read
   _eeprom_write
   _encoder
   _initializer
   _resetSwitch
   _viewMenu
     _display1
     _display2
       ___lldiv
       ___llmod
       _dataPass
     _led
       _dataPass
     _upSwitch

 _highISR (ROOT)
   ___awmod
   i1___lldiv
   i1___llmod
     i1___lldiv (ARG)
   i1_eeprom_write
     ___awmod (ARG)
     i1___lldiv (ARG)
     i1___llmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      D      11       9       17.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     10      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2E      3F       5       78.8%
BITBANK0            50      0       1       4        1.2%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AE      12        0.0%
ABS                  0      0      AE       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Sep  2 10:05:47 2021

                             _n 00B6                               pc 0002               _actualClothLength 00CC  
                            fsr 0004             ___wmul@multiplicand 0035                             l300 0D8C  
                           l213 0BC8                             l215 0BF8                             l208 0AC3  
                           l218 0C24                             l219 0CAD                             l260 12A3  
                           l261 12CB                             l504 1D6B                             l362 1D3F  
                           l612 0818                             l372 1D4E                             l524 1DE9  
                           l357 1D22                             l534 1D8A                             l367 1D30  
                           l377 07F9                             l298 0D6F                             l299 0D7D  
                           l599 12E2                             _GIE 005F                             _RA0 0028  
                           _RA1 0029                             _RA2 002A                             _RB1 0031  
                           _RA3 002B                             _RB2 0032                             _RA4 002C  
                           _RB3 0033                             _RB4 0034                             _RB5 0035  
                           _RB6 0036                             _RD2 0042                             _RE1 0049  
                           _RB7 0037                             _RD3 0043                             _RE2 004A  
                           _led 1E35                             _rpm 019D                             fsr0 0004  
                           indf 0000                    ___awmod@sign 0076                  ?_displayChange 0194  
               countMinus@value 0048                _hourMeterCounter 00B0                     display1@dot 0190  
                ?_displayString 0070                            l2200 1D44                            l3304 110A  
                          l3240 1FEA                            l2168 1D35                            l3314 1142  
                          l3306 111A                            l3234 1FBC                            l3236 1FCC  
                          l3244 1FF7                            l2612 1EA1                            l3318 114F  
                          l3254 1DA5                            l3406 0681                            l3350 0606  
                          l3270 1538                            l3256 1DB7                            l3424 06E1  
                          l2616 1EB7                            l3450 0753                            l3442 0741  
                          l3362 0617                            l3290 1627                            l3282 15C5  
                          l3274 1563                            l3266 1500                            l3530 1E44  
                          l3372 0625                            l3356 060E                            l3292 164F  
                          l3284 15ED                            l3276 158B                            l3268 1528  
                          l3700 051F                            l3390 0667                            l3286 15FD  
                          l3278 159B                            l2574 1D53                            l3710 056B  
                          l3702 0531                            l3534 1E4A                            l3526 1E3E  
                          ?_led 0070                            l3632 1303                            l3624 12F3  
                          l3448 0750                            l3384 0633                            l3368 0620  
                          l3552 1EF0                            l2592 1D27                            l3720 05AD  
                          l3712 0575                            l3704 053B                            l3650 1356  
                          l3642 133B                            l3634 1313                            l3810 0D5F  
                          l3714 0587                            l3706 054E                            l2922 07FE  
                          l3468 07B6                            l3388 0640                            l3732 169D  
                          l3820 0D9A                            l3716 0591                            l3708 0558  
                          l3646 1348                            l3670 083D                            l3662 0825  
                          l3742 16DC                            l3734 169F                            l2598 1D82  
                          l3718 05A3                            l3752 171B                            l3744 16DE  
                          l3682 0876                            l3674 085B                            l3762 176F  
                          l3754 171D                            l3690 04DD                            l3668 082D  
                          l3780 17DA                            l3772 17C3                            l3764 1771  
                          l3852 0FF1                            l3692 04E7                            l2980 1E7B  
                          l3908 0A98                            l3678 0868                            l3782 17E3  
                          l3774 17C9                            l3694 04F9                            l2982 1E8E  
                          l3862 1265                            l3950 0BF9                            l3934 0B7E  
                          l3942 0B99                            l3696 0503                            l3698 0515  
                          l2978 1E71                            l3874 128E                            l3954 0C07  
                          l3946 0BC9                            l3938 0B8C                            l3788 17F0  
                          l3868 1279                            l3972 0CC6                            l3966 0CA3  
                          l3992 0D29                            l3984 0CFB                            l3994 0D2B  
                          STR_1 1071                            STR_2 1077                            STR_3 1065  
                          STR_4 107D                            STR_5 106B                            _IOCB 0096  
                          u3105 1EB9                            u3115 1EC1                            u3055 1D8B  
                          u3065 1D92                            u2661 1D69                            u5215 1307  
                          u5400 014C                            u5401 014D                            u5410 01BF  
                          u5402 0152                            u5235 1315                            u5315 0831  
                          u5411 01C1                            u5403 0153                            _PEIE 005E  
                          u4620 1DB4                            u4700 1588                            u5500 0413  
                          u5420 01D6                            u5412 01C7                            u5245 132A  
                          u5501 0414                            u5421 01D7                            u5413 01C9  
                          u6045 0BC4                            _INTE 005C                            u4614 1DAB  
                          u5510 0486                            u5502 0419                            u5430 0250  
                          u5422 01DC                            _INTF 0059                            u5255 133C  
                          u5335 084B                            u4615 1DA9                            u6207 137E  
                          u5511 0488                            u5503 041A                            u5431 0252  
                          u5423 01DD                            u6055 0BF4                            _RBIE 005B  
                          u5520 049D                            u5512 048E                            u5440 0267  
                          u5432 0258                            _RBIF 0058                            u5345 085C  
                          u4705 1576                            u6217 13A3                            u5521 049E  
                          u5513 0490                            u5441 0268                            u5433 025A  
                          u4730 15EA                            u4706 1578                            u5522 04A3  
                          u5450 02E1                            u5442 026D                            u5370 00AB  
                          u4723 15C3                            u4707 157E                            u6227 13C8  
                          u5603 05A1                            u5523 04A4                            u5451 02E3  
                          u5443 026E                            u5371 00AD                            u6075 0C10  
                          u4708 1580                            u5460 02F8                            u5452 02E9  
                          u5380 00C2                            u5372 00B3                            u4805 111C  
                          u4565 1FC0                            u4709 1586                            u6237 13ED  
                          u5533 04DB                            u5461 02F9                            u5453 02EB  
                          u5381 00C3                            u5373 00B5                            u6093 0CA1  
                          u6085 0C3B                            u4670 1525                            u5470 0372  
                          u5462 02FE                            u5390 0135                            u5382 00C8  
                          u4815 1131                            u4735 15D8                            u4663 14FE  
                          u6247 1412                            u5543 04F7                            u5471 0374  
                          u5463 02FF                            u5391 0137                            u5383 00C9  
                          u6167 1E5A                            u4760 164C                            u4736 15DA  
                          u5480 0389                            u5472 037A                            u5392 013D  
                          u4825 1143                            u4585 1FDA                            u6257 0671  
                          u4753 1625                            u4737 15E0                            u5553 0513  
                          u5481 038A                            u5473 037C                            u5393 013F  
                          u6177 144A                            u4738 15E2                            u5490 03FC  
                          u5482 038F                            u4595 1FEB                            u6267 06D0  
                          u4739 15E8                            u4675 1513                            u5563 052F  
                          u5491 03FE                            u5483 0390                            u6187 14A0  
                          u4676 1515                            u5492 0404                            u6277 0730  
                          u4765 163A                            u4693 1561                            u4677 151B  
                          u5573 054C                            u5493 0406                            u3973 1E6F  
                          u6197 14D0                            u4766 163C                            u4678 151D  
                          u6287 07A5                            u4767 1642                            u4679 1523  
                          u5583 0569                            u3983 1E8C                            u4768 1644  
                          u4785 110E                            u6297 07E0                            u4769 164A  
                          u5593 0585                            u5970 11E6                            u5971 11E7  
                          u5972 11EC                            u5981 116E                            u5973 11ED  
                          u5982 1170                            u5983 1176                            u5984 1178  
                          u5985 117E                            u5986 1180                            _WPUB 0095  
                ??_eeprom_write 00EB                  countPlus@value 00E0                    ?_enterSwitch 0070  
             i1___lldiv@divisor 0070                            _main 0A8E                            _last 00BD  
                          btemp 007E               i1___lldiv@counter 007D                            start 0010  
                         ??_led 0034                 __end_of___aldiv 135F                 __end_of___almod 087F  
                         ?_main 0070                           _EEADR 010D                 __end_of___awmod 1F68  
                         _ANSEL 0188                 __end_of___lldiv 1158                           _T1CON 0010  
               __end_of___llmod 2000                           i1l252 08C8                           i1l246 08A1  
                         i1l247 0885                           i1l524 1DC5                           _TMR1H 000F  
                         _TMR1L 000E                           _TRISA 0085                           _TRISB 0086  
                         _TRISC 0087                           _TRISD 0088                           _TRISE 0089  
           ___lmul@multiplicand 0037                 __end_of_highISR 0A8E                    ?_initializer 0070  
                         _nRBPU 040F                 __end_of_encoder 1E99              i1___lldiv@dividend 0074  
                         _count 00B9                           _pulse 004E                           pclath 000A  
                         status 0003                           wtemp0 007E              __size_ofi1___lldiv 005E  
            __size_ofi1___llmod 004C                 __initialization 0013                    __end_of_main 0D31  
            i1___lldiv@quotient 0079                          ??_main 0199                 ??_displayChange 00EE  
                 display1@value 00EA                   display2@value 00EA                 ??_displayString 0034  
                 _countingPulse 00A0                ___llmod@dividend 00E4                          _EEDATA 010C  
                        _EECON1 018C                          _EECON2 018D                          _ANSELH 0189  
                        i1l3010 1F50                          i1l3004 1F34                          i1l3006 1F42  
                        i1l3014 1F5B                          i1l3018 1F63                          i1l3050 10BC  
                        i1l3202 089D                          i1l3220 08D0                          i1l3062 10F1  
             i1___llmod@divisor 0020                          i1l3048 10AC                          i1l3072 1F70  
                        i1l3058 10E4                          i1l3074 1F80                          i1l3082 1FAB  
                        i1l3078 1F9E                          i1l3192 0891                          i1l2992 1F27  
                        i1l2996 1F2E                          _INTEDG 040E                          u402_25 1F37  
                        u404_25 1F48                          u412_25 10B0                          u405_25 1F51  
                        u421_25 1F8E                          u414_25 10BE                          u422_25 1F9F  
                        u415_25 10D3                          u416_25 10E5               i1___llmod@counter 0029  
                        u419_25 1F74                          u453_25 08BE                          _TMR1IE 0460  
                        _TMR1IF 0060                          _TMR1ON 0080                __end_of_dataPass 1DC4  
              __end_of_editMenu 1800                    ?_resetSwitch 0070            __size_of_eeprom_read 001A  
              _encoderSkipCount 00B2                __end_of_display1 07F2                __end_of_display2 14D6  
                        ___lmul 1E99                       ??___aldiv 0039                       ??___almod 0039  
                        ___wmul 1D80                       ??___awmod 0074                       ??___lldiv 0048  
                     ??___llmod 00E8                          _upFlag 02D5                 ___awmod@divisor 0070  
          __end_of_eeprom_write 1E0D                       ??_highISR 002D                 ___awmod@counter 0075  
                     ??_encoder 0031               __end_ofi1___lldiv 10FA               __end_ofi1___llmod 1FB4  
                        saved_w 007E                 _currentStateCLK 00BC                __end_of_upSwitch 1D37  
              __end_of_viewMenu 12D2         __end_of__initialization 0047                 eeprom_read@addr 0032  
          __size_of_enterSwitch 000D            __end_of_FONT_DEFAULT 1065                  __pcstackCOMMON 0070  
                  __pidataBANK0 1D10                    __pidataBANK1 108A                    __pidataBANK3 1086  
            _warningClothLength 00C8               eeprom_write@value 00EA            __size_of_initializer 0028  
                    __pbssBANK0 005B                      __pbssBANK1 00A0              __size_of_countPlus 0087  
            __size_of_increment 018A         __size_ofi1_eeprom_write 0024                      _editValues 0D31  
                    __pmaintext 0A8E                         ?___lmul 0033                         ?___wmul 0033  
                    _blinkValue 005B                      __pintentry 0004                   ?_selectSwitch 0070  
                ___lmul@product 003C              i1___llmod@dividend 0024      _previousCurrentClothLength 00D8  
                    _eepromRead 004B                       ?_dataPass 0070                       ?_editMenu 0070  
                     ?_display1 00EA                       ?_display2 00EA                      __stringtab 1000  
                    _countMinus 1158            __size_of_resetSwitch 000E           __size_of_eeprom_write 0025  
                increment@value 00EA                       ?_upSwitch 0070                       ?_viewMenu 0070  
                       ___aldiv 12D2                         ___almod 0808                 __size_of___lmul 003F  
                ??_selectSwitch 0031                         ___awmod 1F1D                         ___lldiv 10FA  
               __size_of___wmul 0021                         ___llmod 1FB4                         _changed 02D0  
             __end_of_countPlus 124A                         _highISR 087F                      _menuSwitch 1D46  
                       __ptext1 124A                         __ptext2 1E35                         __ptext3 1418  
                       __ptext4 07F2                         __ptext5 1E0D                         __ptext6 1E60  
                       __ptext7 004B                         __ptext8 1D66                         __ptext9 1D80  
            displayChange@value 0194                         _encoder 1E60               __end_of_increment 1660  
                       _segCode 00BE                    __size_of_led 002B                      ??_dataPass 0031  
              ___awmod@dividend 0072                ___aldiv@dividend 0035                      ??_editMenu 0198  
                       clrloop0 0801                      ??_display1 00EE                      ??_display2 00EE  
          end_of_initialization 0047                    _encoderFlag1 02D1  _currentClothLengthBalanceMinus 00DC  
                    _selectFlag 02D4                    _eeprom_write 1DE8                 ___lldiv@divisor 0040  
               ___lldiv@counter 004D                     ?_editValues 0070                 _editMenuPointer 005C  
                    _rpmCounter 00B4                ___aldiv@quotient 003C                      ??_upSwitch 0031  
                    ??_viewMenu 0191                      _timerCount 00B8                     ?_eepromRead 0070  
         __end_of_displayChange 1F1D                    _FONT_DEFAULT 1006                       i1___lldiv 109C  
                     i1___llmod 1F68           __end_of_displayString 1418                   ??_eeprom_read 0031  
                   ?_countMinus 0040                  i1_eeprom_write 1DC4                  __end_of___lmul 1ED8  
                __end_of___wmul 1DA1                     ?_menuSwitch 0070                   __pbitbssBANK0 02D0  
           start_initialization 0013             __size_of_editValues 02CF                     __end_of_led 1E60  
                    ?i1___lldiv 0070                      ?i1___llmod 0020                 _viewMenuPointer 005D  
          __end_of_selectSwitch 1D46                   ??_enterSwitch 0031          __end_ofi1_eeprom_write 1DE8  
            _currentClothLength 0052                 ___llmod@divisor 00E0                 ___llmod@counter 00E9  
           __size_of_eepromRead 058F                  _currentDisplay 005E                        ??___lmul 003B  
                      ??___wmul 0037             __end_of_eeprom_read 1D80                      init_fetch0 1D55  
                  dataPass@data 0032                     __pdataBANK0 004E                     __pdataBANK1 00BE  
                   __pdataBANK3 019D             displayString@string 0036             __size_of_countMinus 006B  
                     ___latbits 0002                   ??_initializer 0031                   __pcstackBANK0 0020  
                 __pcstackBANK1 00E0                   __pcstackBANK3 0190               __size_of_dataPass 0023  
             __size_of_editMenu 01A0                eeprom_write@addr 00EC               __size_of_display1 0218  
             __size_of_display2 00BE                 ?i1_eeprom_write 002A             __size_of_menuSwitch 000F  
                     __pnvBANK1 00D0                       _editValue 00BA             i1eeprom_write@value 002A  
           __end_of_enterSwitch 1D29                        ?___aldiv 0031                        ?___almod 0031  
                      ?___awmod 0070                        ?___lldiv 0040                        ?___llmod 00E0  
             __size_of_upSwitch 000E               __size_of_viewMenu 0088                ___almod@dividend 0035  
                     __pstrings 1000                        ?_highISR 0070                        ?_encoder 0070  
                     _enterFlag 02D7                       _countPlus 11C3                       _lastPortB 00BB  
                     _increment 14D6                       dataPass@i 0033                     ??i1___lldiv 0078  
                   ??i1___llmod 0028                       _hourMeter 00D0                 ___aldiv@divisor 0031  
           __end_of_initializer 1E35               interrupt_function 0004                 ___aldiv@counter 003A  
                ___wmul@product 0037                     _encoderFlag 02D2   _currentClothLengthBalancePlus 00DE  
                     clear_ram0 0800                     _eeprom_read 1D66                   ??_resetSwitch 0031  
                     _resetFlag 02D3                    ??_editValues 00ED                       _skipCount 00B7  
                   __stringbase 1005               ___wmul@multiplier 0033                    ??_eepromRead 00E0  
                    ?_countPlus 0040           __size_of_selectSwitch 000F                      ?_increment 00EA  
            __end_of_editValues 1000               ___lmul@multiplier 0033                     _enterSwitch 1D1C  
                  ??_countMinus 0044                      _EECON1bits 018C              __end_of_eepromRead 05DA  
           __end_of_resetSwitch 0800                __size_of___aldiv 008D                __size_of___almod 0077  
              __size_of___awmod 004B                    _selectSwitch 1D37                __size_of___lldiv 005E  
              __size_of___llmod 004C                    ??_menuSwitch 0031              __end_of__stringtab 1006  
              __size_of_highISR 020F                __size_of_encoder 0039                        _dataPass 1DA1  
            i1eeprom_write@addr 002C              __end_of_countMinus 11C3                        _editMenu 1660  
                   _initializer 1E0D                   _circumference 0056                        __ptext10 1E99  
                      __ptext11 0D31                        __ptext20 14D6                        __ptext12 1D1C  
                      __ptext21 05DA                        __ptext13 1DE8                        __ptext30 1DC4  
                      __ptext22 1DA1                        __ptext14 1660                        __ptext31 1F68  
                      __ptext23 1FB4                        __ptext15 1D46                        __ptext32 109C  
                      __ptext24 10FA                        __ptext16 135F                        __ptext33 1F1D  
                      __ptext25 11C3                        __ptext17 1ED8                        __ptext26 1158  
                      __ptext18 1D29                        __ptext27 0808                        __ptext19 1D37  
                      __ptext28 12D2                        __ptext29 087F                    _resetCounter 00D4  
                      _display1 05DA                        _display2 1418                 ___almod@divisor 0031  
               ___almod@counter 003A                     _metrePerMin 00A8                        _menuFlag 02D6  
                 __size_of_main 02A3              __end_of_menuSwitch 1D55                        _password 00AC  
        __size_of_displayChange 0045                        led@value 0036                        _upSwitch 1D29  
                      _viewMenu 124A          __size_of_displayString 00B9                      _INTCONbits 000B  
                   ??_countPlus 0044                     ??_increment 0190                        init_ram0 1D59  
              ??i1_eeprom_write 002B                        intlevel1 0000                ___lldiv@dividend 0044  
                   _resetSwitch 07F2                       stringcode 1000              _metrePerMinCounter 00A4  
              ___lldiv@quotient 0049                        stringdir 1000                        stringtab 1000  
                 _displayChange 1ED8                    ___aldiv@sign 003B                   _displayString 135F  
                  ___almod@sign 003B                   ?_eeprom_write 00EA                      _STATUSbits 0003  
                  ?_eeprom_read 0070  
