

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Oct  1 21:57:40 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	maintext,global,class=CODE,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	dabs	1,0x7E,2
    53  0000                     
    54                           ; Version 2.20
    55                           ; Generated 12/02/2020 GMT
    56                           ; 
    57                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F887 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  0007                     	;# 
    96  0008                     	;# 
    97  0009                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000D                     	;# 
   102  000E                     	;# 
   103  000E                     	;# 
   104  000F                     	;# 
   105  0010                     	;# 
   106  0011                     	;# 
   107  0012                     	;# 
   108  0013                     	;# 
   109  0014                     	;# 
   110  0015                     	;# 
   111  0015                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001B                     	;# 
   118  001B                     	;# 
   119  001C                     	;# 
   120  001D                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  0081                     	;# 
   124  0085                     	;# 
   125  0086                     	;# 
   126  0087                     	;# 
   127  0088                     	;# 
   128  0089                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  008E                     	;# 
   132  008F                     	;# 
   133  0090                     	;# 
   134  0091                     	;# 
   135  0092                     	;# 
   136  0093                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0094                     	;# 
   140  0095                     	;# 
   141  0096                     	;# 
   142  0097                     	;# 
   143  0098                     	;# 
   144  0099                     	;# 
   145  009A                     	;# 
   146  009B                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  009F                     	;# 
   151  0105                     	;# 
   152  0107                     	;# 
   153  0108                     	;# 
   154  0109                     	;# 
   155  010C                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  010F                     	;# 
   160  0185                     	;# 
   161  0187                     	;# 
   162  0188                     	;# 
   163  0189                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000D                     	;# 
   180  000E                     	;# 
   181  000E                     	;# 
   182  000F                     	;# 
   183  0010                     	;# 
   184  0011                     	;# 
   185  0012                     	;# 
   186  0013                     	;# 
   187  0014                     	;# 
   188  0015                     	;# 
   189  0015                     	;# 
   190  0016                     	;# 
   191  0017                     	;# 
   192  0018                     	;# 
   193  0019                     	;# 
   194  001A                     	;# 
   195  001B                     	;# 
   196  001B                     	;# 
   197  001C                     	;# 
   198  001D                     	;# 
   199  001E                     	;# 
   200  001F                     	;# 
   201  0081                     	;# 
   202  0085                     	;# 
   203  0086                     	;# 
   204  0087                     	;# 
   205  0088                     	;# 
   206  0089                     	;# 
   207  008C                     	;# 
   208  008D                     	;# 
   209  008E                     	;# 
   210  008F                     	;# 
   211  0090                     	;# 
   212  0091                     	;# 
   213  0092                     	;# 
   214  0093                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0094                     	;# 
   218  0095                     	;# 
   219  0096                     	;# 
   220  0097                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009A                     	;# 
   224  009B                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  009F                     	;# 
   229  0105                     	;# 
   230  0107                     	;# 
   231  0108                     	;# 
   232  0109                     	;# 
   233  010C                     	;# 
   234  010C                     	;# 
   235  010D                     	;# 
   236  010E                     	;# 
   237  010F                     	;# 
   238  0185                     	;# 
   239  0187                     	;# 
   240  0188                     	;# 
   241  0189                     	;# 
   242  018C                     	;# 
   243  018D                     	;# 
   244  0000                     	;# 
   245  0001                     	;# 
   246  0002                     	;# 
   247  0003                     	;# 
   248  0004                     	;# 
   249  0005                     	;# 
   250  0006                     	;# 
   251  0007                     	;# 
   252  0008                     	;# 
   253  0009                     	;# 
   254  000A                     	;# 
   255  000B                     	;# 
   256  000C                     	;# 
   257  000D                     	;# 
   258  000E                     	;# 
   259  000E                     	;# 
   260  000F                     	;# 
   261  0010                     	;# 
   262  0011                     	;# 
   263  0012                     	;# 
   264  0013                     	;# 
   265  0014                     	;# 
   266  0015                     	;# 
   267  0015                     	;# 
   268  0016                     	;# 
   269  0017                     	;# 
   270  0018                     	;# 
   271  0019                     	;# 
   272  001A                     	;# 
   273  001B                     	;# 
   274  001B                     	;# 
   275  001C                     	;# 
   276  001D                     	;# 
   277  001E                     	;# 
   278  001F                     	;# 
   279  0081                     	;# 
   280  0085                     	;# 
   281  0086                     	;# 
   282  0087                     	;# 
   283  0088                     	;# 
   284  0089                     	;# 
   285  008C                     	;# 
   286  008D                     	;# 
   287  008E                     	;# 
   288  008F                     	;# 
   289  0090                     	;# 
   290  0091                     	;# 
   291  0092                     	;# 
   292  0093                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0094                     	;# 
   296  0095                     	;# 
   297  0096                     	;# 
   298  0097                     	;# 
   299  0098                     	;# 
   300  0099                     	;# 
   301  009A                     	;# 
   302  009B                     	;# 
   303  009C                     	;# 
   304  009D                     	;# 
   305  009E                     	;# 
   306  009F                     	;# 
   307  0105                     	;# 
   308  0107                     	;# 
   309  0108                     	;# 
   310  0109                     	;# 
   311  010C                     	;# 
   312  010C                     	;# 
   313  010D                     	;# 
   314  010E                     	;# 
   315  010F                     	;# 
   316  0185                     	;# 
   317  0187                     	;# 
   318  0188                     	;# 
   319  0189                     	;# 
   320  018C                     	;# 
   321  018D                     	;# 
   322  0000                     	;# 
   323  0001                     	;# 
   324  0002                     	;# 
   325  0003                     	;# 
   326  0004                     	;# 
   327  0005                     	;# 
   328  0006                     	;# 
   329  0007                     	;# 
   330  0008                     	;# 
   331  0009                     	;# 
   332  000A                     	;# 
   333  000B                     	;# 
   334  000C                     	;# 
   335  000D                     	;# 
   336  000E                     	;# 
   337  000E                     	;# 
   338  000F                     	;# 
   339  0010                     	;# 
   340  0011                     	;# 
   341  0012                     	;# 
   342  0013                     	;# 
   343  0014                     	;# 
   344  0015                     	;# 
   345  0015                     	;# 
   346  0016                     	;# 
   347  0017                     	;# 
   348  0018                     	;# 
   349  0019                     	;# 
   350  001A                     	;# 
   351  001B                     	;# 
   352  001B                     	;# 
   353  001C                     	;# 
   354  001D                     	;# 
   355  001E                     	;# 
   356  001F                     	;# 
   357  0081                     	;# 
   358  0085                     	;# 
   359  0086                     	;# 
   360  0087                     	;# 
   361  0088                     	;# 
   362  0089                     	;# 
   363  008C                     	;# 
   364  008D                     	;# 
   365  008E                     	;# 
   366  008F                     	;# 
   367  0090                     	;# 
   368  0091                     	;# 
   369  0092                     	;# 
   370  0093                     	;# 
   371  0093                     	;# 
   372  0093                     	;# 
   373  0094                     	;# 
   374  0095                     	;# 
   375  0096                     	;# 
   376  0097                     	;# 
   377  0098                     	;# 
   378  0099                     	;# 
   379  009A                     	;# 
   380  009B                     	;# 
   381  009C                     	;# 
   382  009D                     	;# 
   383  009E                     	;# 
   384  009F                     	;# 
   385  0105                     	;# 
   386  0107                     	;# 
   387  0108                     	;# 
   388  0109                     	;# 
   389  010C                     	;# 
   390  010C                     	;# 
   391  010D                     	;# 
   392  010E                     	;# 
   393  010F                     	;# 
   394  0185                     	;# 
   395  0187                     	;# 
   396  0188                     	;# 
   397  0189                     	;# 
   398  018C                     	;# 
   399  018D                     	;# 
   400                           
   401                           	psect	idataBANK1
   402  1EA4                     __pidataBANK1:
   403                           
   404                           ;initializer for _segCode
   405  1EA4  34D7               	retlw	215
   406  1EA5  3414               	retlw	20
   407  1EA6  34CE               	retlw	206
   408  1EA7  345E               	retlw	94
   409  1EA8  341D               	retlw	29
   410  1EA9  345B               	retlw	91
   411  1EAA  34DB               	retlw	219
   412  1EAB  3416               	retlw	22
   413  1EAC  34DF               	retlw	223
   414  1EAD  341F               	retlw	31
   415                           
   416                           ;initializer for _warningClothLength
   417  1EAE  3476               	retlw	118
   418  1EAF  347D               	retlw	125
   419  1EB0  3401               	retlw	1
   420  1EB1  3400               	retlw	0
   421                           
   422                           ;initializer for _pulse
   423  1EB2  3404               	retlw	4
   424  1EB3  3400               	retlw	0
   425  1EB4  3400               	retlw	0
   426  1EB5  3400               	retlw	0
   427                           
   428                           ;initializer for _actualClothLength
   429  1EB6  34D5               	retlw	213
   430  1EB7  34DD               	retlw	221
   431  1EB8  3400               	retlw	0
   432  1EB9  3400               	retlw	0
   433                           
   434                           ;initializer for _currentClothLength
   435  1EBA  34D2               	retlw	210
   436  1EBB  3404               	retlw	4
   437  1EBC  3400               	retlw	0
   438  1EBD  3400               	retlw	0
   439                           
   440                           ;initializer for _circumference
   441  1EBE  34F4               	retlw	244
   442  1EBF  3401               	retlw	1
   443  1EC0  3400               	retlw	0
   444  1EC1  3400               	retlw	0
   445                           
   446                           	psect	idataBANK3
   447  1083                     __pidataBANK3:
   448                           
   449                           ;initializer for _rpm
   450  1083  347B               	retlw	123
   451  1084  3400               	retlw	0
   452  1085  3400               	retlw	0
   453  1086  3400               	retlw	0
   454                           
   455                           	psect	strings
   456  1000                     __pstrings:
   457  1000                     stringtab:
   458  1000                     __stringtab:
   459  1000                     stringcode:	
   460                           ;	String table - string pointers are 1 byte each
   461                           
   462  1000                     stringdir:
   463  1000  3010               	movlw	high stringdir
   464  1001  008A               	movwf	10
   465  1002  0804               	movf	4,w
   466  1003  0A84               	incf	4,f
   467  1004  0782               	addwf	2,f
   468  1005                     __stringbase:
   469  1005  3400               	retlw	0
   470  1006                     __end_of__stringtab:
   471  1006                     _FONT_DEFAULT:
   472  1006  3400               	retlw	0
   473  1007  3486               	retlw	134
   474  1008  3422               	retlw	34
   475  1009  347E               	retlw	126
   476  100A  346D               	retlw	109
   477  100B  3400               	retlw	0
   478  100C  3400               	retlw	0
   479  100D  3402               	retlw	2
   480  100E  3430               	retlw	48
   481  100F  3406               	retlw	6
   482  1010  3463               	retlw	99
   483  1011  3400               	retlw	0
   484  1012  3404               	retlw	4
   485  1013  3440               	retlw	64
   486  1014  3480               	retlw	128
   487  1015  3452               	retlw	82
   488  1016  343F               	retlw	63
   489  1017  3406               	retlw	6
   490  1018  345B               	retlw	91
   491  1019  344F               	retlw	79
   492  101A  3466               	retlw	102
   493  101B  346D               	retlw	109
   494  101C  347D               	retlw	125
   495  101D  3427               	retlw	39
   496  101E  347F               	retlw	127
   497  101F  346F               	retlw	111
   498  1020  3400               	retlw	0
   499  1021  3400               	retlw	0
   500  1022  3400               	retlw	0
   501  1023  3448               	retlw	72
   502  1024  3400               	retlw	0
   503  1025  3453               	retlw	83
   504  1026  345F               	retlw	95
   505  1027  349F               	retlw	159
   506  1028  347F               	retlw	127
   507  1029  34C3               	retlw	195
   508  102A  343F               	retlw	63
   509  102B  3479               	retlw	121
   510  102C  348B               	retlw	139
   511  102D  343D               	retlw	61
   512  102E  349D               	retlw	157
   513  102F  3406               	retlw	6
   514  1030  341F               	retlw	31
   515  1031  3469               	retlw	105
   516  1032  34C1               	retlw	193
   517  1033  3415               	retlw	21
   518  1034  3437               	retlw	55
   519  1035  343F               	retlw	63
   520  1036  348F               	retlw	143
   521  1037  3467               	retlw	103
   522  1038  3431               	retlw	49
   523  1039  345B               	retlw	91
   524  103A  3478               	retlw	120
   525  103B  343E               	retlw	62
   526  103C  342A               	retlw	42
   527  103D  341D               	retlw	29
   528  103E  3476               	retlw	118
   529  103F  346E               	retlw	110
   530  1040  345B               	retlw	91
   531  1041  3439               	retlw	57
   532  1042  3464               	retlw	100
   533  1043  340F               	retlw	15
   534  1044  3400               	retlw	0
   535  1045  3408               	retlw	8
   536  1046  3420               	retlw	32
   537  1047  345F               	retlw	95
   538  1048  347C               	retlw	124
   539  1049  34C8               	retlw	200
   540  104A  34DC               	retlw	220
   541  104B  34CF               	retlw	207
   542  104C  3431               	retlw	49
   543  104D  346F               	retlw	111
   544  104E  3474               	retlw	116
   545  104F  3410               	retlw	16
   546  1050  340E               	retlw	14
   547  1051  3475               	retlw	117
   548  1052  3430               	retlw	48
   549  1053  3455               	retlw	85
   550  1054  3454               	retlw	84
   551  1055  34D8               	retlw	216
   552  1056  3473               	retlw	115
   553  1057  3467               	retlw	103
   554  1058  3488               	retlw	136
   555  1059  346D               	retlw	109
   556  105A  34C9               	retlw	201
   557  105B  34D0               	retlw	208
   558  105C  342A               	retlw	42
   559  105D  341D               	retlw	29
   560  105E  3476               	retlw	118
   561  105F  346E               	retlw	110
   562  1060  3447               	retlw	71
   563  1061  3446               	retlw	70
   564  1062  3406               	retlw	6
   565  1063  3470               	retlw	112
   566  1064  3401               	retlw	1
   567  1065                     __end_of_FONT_DEFAULT:
   568  1065                     STR_3:
   569  1065  3450               	retlw	80	;'P'
   570  1066  3441               	retlw	65	;'A'
   571  1067  3453               	retlw	83	;'S'
   572  1068  3453               	retlw	83	;'S'
   573  1069  3420               	retlw	32	;' '
   574  106A  3400               	retlw	0
   575  106B                     STR_5:
   576  106B  3450               	retlw	80	;'P'
   577  106C  3475               	retlw	117	;'u'
   578  106D  344C               	retlw	76	;'L'
   579  106E  3453               	retlw	83	;'S'
   580  106F  3465               	retlw	101	;'e'
   581  1070  3400               	retlw	0
   582  1071                     STR_1:
   583  1071  3446               	retlw	70	;'F'
   584  1072  3420               	retlw	32	;' '
   585  1073  3453               	retlw	83	;'S'
   586  1074  3465               	retlw	101	;'e'
   587  1075  3474               	retlw	116	;'t'
   588  1076  3400               	retlw	0
   589  1077                     STR_2:
   590  1077  3450               	retlw	80	;'P'
   591  1078  3420               	retlw	32	;' '
   592  1079  3453               	retlw	83	;'S'
   593  107A  3465               	retlw	101	;'e'
   594  107B  3474               	retlw	116	;'t'
   595  107C  3400               	retlw	0
   596  107D                     STR_4:
   597  107D  3443               	retlw	67	;'C'
   598  107E  3469               	retlw	105	;'i'
   599  107F  3472               	retlw	114	;'r'
   600  1080  3463               	retlw	99	;'c'
   601  1081  3475               	retlw	117	;'u'
   602  1082  3400               	retlw	0
   603                           
   604                           	psect	nvBANK0
   605  005C                     __pnvBANK0:
   606  005C                     _hourMeter:
   607  005C                     	ds	4
   608                           
   609                           	psect	nvBANK1
   610  00E8                     __pnvBANK1:
   611  00E8                     _resetCounter:
   612  00E8                     	ds	4
   613  00EC                     _previousCurrentClothLength:
   614  00EC                     	ds	4
   615  000B                     _INTCONbits	set	11
   616  0003                     _STATUSbits	set	3
   617  000E                     _TMR1L	set	14
   618  000F                     _TMR1H	set	15
   619  0010                     _T1CON	set	16
   620  0042                     _RD2	set	66
   621  002C                     _RA4	set	44
   622  0035                     _RB5	set	53
   623  0034                     _RB4	set	52
   624  0043                     _RD3	set	67
   625  002B                     _RA3	set	43
   626  0029                     _RA1	set	41
   627  0028                     _RA0	set	40
   628  002A                     _RA2	set	42
   629  0032                     _RB2	set	50
   630  0033                     _RB3	set	51
   631  0031                     _RB1	set	49
   632  0060                     _TMR1IF	set	96
   633  0036                     _RB6	set	54
   634  0037                     _RB7	set	55
   635  0080                     _TMR1ON	set	128
   636  0058                     _RBIF	set	88
   637  005B                     _RBIE	set	91
   638  0059                     _INTF	set	89
   639  005C                     _INTE	set	92
   640  005E                     _PEIE	set	94
   641  005F                     _GIE	set	95
   642  004A                     _RE2	set	74
   643  0049                     _RE1	set	73
   644  0089                     _TRISE	set	137
   645  0088                     _TRISD	set	136
   646  0087                     _TRISC	set	135
   647  0086                     _TRISB	set	134
   648  0085                     _TRISA	set	133
   649  0096                     _IOCB	set	150
   650  0095                     _WPUB	set	149
   651  0460                     _TMR1IE	set	1120
   652  040E                     _INTEDG	set	1038
   653  040F                     _nRBPU	set	1039
   654  010C                     _EEDATA	set	268
   655  010D                     _EEADR	set	269
   656  018D                     _EECON2	set	397
   657  018C                     _EECON1	set	396
   658  018C                     _EECON1bits	set	396
   659  0189                     _ANSELH	set	393
   660  0188                     _ANSEL	set	392
   661                           
   662                           	psect	cinit
   663  0011                     start_initialization:	
   664                           ; #config settings
   665                           
   666  0011                     __initialization:
   667                           
   668                           ; Initialize objects allocated to BANK3
   669  0011  1783               	bsf	3,7	;select IRP bank2
   670  0012  30A6               	movlw	low (__pdataBANK3+4)
   671  0013  00FD               	movwf	btemp+-1
   672  0014  3010               	movlw	high __pidataBANK3
   673  0015  00FE               	movwf	btemp
   674  0016  3083               	movlw	low __pidataBANK3
   675  0017  00FF               	movwf	btemp+1
   676  0018  30A2               	movlw	low __pdataBANK3
   677  0019  0084               	movwf	4
   678  001A  160A  158A  267C  120A  118A  	fcall	init_ram0
   679                           
   680                           ; Initialize objects allocated to BANK1
   681  001F  1383               	bcf	3,7	;select IRP bank0
   682  0020  30DC               	movlw	low (__pdataBANK1+30)
   683  0021  00FD               	movwf	btemp+-1
   684  0022  301E               	movlw	high __pidataBANK1
   685  0023  00FE               	movwf	btemp
   686  0024  30A4               	movlw	low __pidataBANK1
   687  0025  00FF               	movwf	btemp+1
   688  0026  30BE               	movlw	low __pdataBANK1
   689  0027  0084               	movwf	4
   690  0028  160A  158A  267C  120A  118A  	fcall	init_ram0
   691                           
   692                           ; Clear objects allocated to BANK1
   693  002D  30A0               	movlw	low __pbssBANK1
   694  002E  0084               	movwf	4
   695  002F  30BE               	movlw	low (__pbssBANK1+30)
   696  0030  120A  158A  2003  120A  118A  	fcall	clear_ram0
   697                           
   698                           ; Clear objects allocated to BANK0
   699  0035  3054               	movlw	low __pbssBANK0
   700  0036  0084               	movwf	4
   701  0037  305C               	movlw	low (__pbssBANK0+8)
   702  0038  120A  158A  2003   	fcall	clear_ram0
   703                           
   704                           ; Clear objects allocated to BITBANK0
   705  003B  01D3               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   706  003C                     end_of_initialization:	
   707                           ;End of C runtime variable initialization code
   708                           
   709  003C                     __end_of__initialization:
   710  003C  0183               	clrf	3
   711  003D  120A  158A  2CCB   	ljmp	_main	;jump to C main() function
   712                           
   713                           	psect	bitbssBANK0
   714  0298                     __pbitbssBANK0:
   715  0298                     _changed:
   716  0298                     	ds	1
   717  0299                     _encoderFlag1:
   718  0299                     	ds	1
   719  029A                     _encoderFlag:
   720  029A                     	ds	1
   721  029B                     _resetFlag:
   722  029B                     	ds	1
   723  029C                     _selectFlag:
   724  029C                     	ds	1
   725  029D                     _upFlag:
   726  029D                     	ds	1
   727  029E                     _menuFlag:
   728  029E                     	ds	1
   729  029F                     _enterFlag:
   730  029F                     	ds	1
   731                           
   732                           	psect	bssBANK0
   733  0054                     __pbssBANK0:
   734  0054                     _rpmCounter:
   735  0054                     	ds	2
   736  0056                     _n:
   737  0056                     	ds	1
   738  0057                     _blinkValue:
   739  0057                     	ds	1
   740  0058                     _lastPortB:
   741  0058                     	ds	1
   742  0059                     _currentStateCLK:
   743  0059                     	ds	1
   744  005A                     _last:
   745  005A                     	ds	1
   746  005B                     _currentDisplay:
   747  005B                     	ds	1
   748                           
   749                           	psect	bssBANK1
   750  00A0                     __pbssBANK1:
   751  00A0                     _countingPulse:
   752  00A0                     	ds	4
   753  00A4                     _metrePerMinCounter:
   754  00A4                     	ds	4
   755  00A8                     _metrePerMin:
   756  00A8                     	ds	4
   757  00AC                     _password:
   758  00AC                     	ds	4
   759  00B0                     _hourMeterCounter:
   760  00B0                     	ds	2
   761  00B2                     _encoderSkipCount:
   762  00B2                     	ds	2
   763  00B4                     _currentClothLengthBalanceMinus:
   764  00B4                     	ds	2
   765  00B6                     _currentClothLengthBalancePlus:
   766  00B6                     	ds	2
   767  00B8                     _skipCount:
   768  00B8                     	ds	1
   769  00B9                     _timerCount:
   770  00B9                     	ds	1
   771  00BA                     _count:
   772  00BA                     	ds	1
   773  00BB                     _editValue:
   774  00BB                     	ds	1
   775  00BC                     _editMenuPointer:
   776  00BC                     	ds	1
   777  00BD                     _viewMenuPointer:
   778  00BD                     	ds	1
   779                           
   780                           	psect	dataBANK1
   781  00BE                     __pdataBANK1:
   782  00BE                     _segCode:
   783  00BE                     	ds	10
   784  00C8                     _warningClothLength:
   785  00C8                     	ds	4
   786  00CC                     _pulse:
   787  00CC                     	ds	4
   788  00D0                     _actualClothLength:
   789  00D0                     	ds	4
   790  00D4                     _currentClothLength:
   791  00D4                     	ds	4
   792  00D8                     _circumference:
   793  00D8                     	ds	4
   794                           
   795                           	psect	dataBANK3
   796  01A2                     __pdataBANK3:
   797  01A2                     _rpm:
   798  01A2                     	ds	4
   799                           
   800                           	psect	inittext
   801  1E78                     init_fetch0:	
   802                           ;	Called with low address in FSR and high address in W
   803                           
   804  1E78  087E               	movf	126,w
   805  1E79  008A               	movwf	10
   806  1E7A  087F               	movf	127,w
   807  1E7B  0082               	movwf	2
   808  1E7C                     init_ram0:	
   809                           ;Called with:
   810                           ;	high address of idata address in btemp 
   811                           ;	low address of idata address in btemp+1 
   812                           ;	low address of data in FSR
   813                           ;	high address + 1 of data in btemp-1
   814                           
   815  1E7C  2678  160A  158A   	fcall	init_fetch0
   816  1E7F  0080               	movwf	0
   817  1E80  0A84               	incf	4,f
   818  1E81  0804               	movf	4,w
   819  1E82  067D               	xorwf	125,w
   820  1E83  1903               	btfsc	3,2
   821  1E84  3400               	retlw	0
   822  1E85  0AFF               	incf	127,f
   823  1E86  1903               	btfsc	3,2
   824  1E87  0AFE               	incf	126,f
   825  1E88  2E7C               	goto	init_ram0
   826                           
   827                           	psect	clrtext
   828  0803                     clear_ram0:	
   829                           ;	Called with FSR containing the base address, and
   830                           ;	W with the last address+1
   831                           
   832  0803  0064               	clrwdt	;clear the watchdog before getting into this loop
   833  0804                     clrloop0:
   834  0804  0180               	clrf	0	;clear RAM location pointed to by FSR
   835  0805  0A84               	incf	4,f	;increment pointer
   836  0806  0604               	xorwf	4,w	;XOR with final address
   837  0807  1903               	btfsc	3,2	;have we reached the end yet?
   838  0808  3400               	retlw	0	;all done for this memory range, return
   839  0809  0604               	xorwf	4,w	;XOR again to restore value
   840  080A  2804               	goto	clrloop0	;do the next byte
   841                           
   842                           	psect	cstackBANK3
   843  0190                     __pcstackBANK3:
   844  0190                     ??_eepromRead:
   845  0190                     ??_viewMenu:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0190                     ?_displayChange:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0190                     displayChange@value:	
   852                           ; 4 bytes @ 0x0
   853                           
   854                           
   855                           ; 4 bytes @ 0x0
   856  0190                     	ds	1
   857  0191                     _viewMenu$920:
   858                           
   859                           ; 4 bytes @ 0x1
   860  0191                     	ds	3
   861  0194                     ??_displayChange:
   862                           
   863                           ; 1 bytes @ 0x4
   864  0194                     	ds	1
   865  0195                     ??_editMenu:
   866                           
   867                           ; 1 bytes @ 0x5
   868  0195                     	ds	9
   869  019E                     ??_main:
   870                           
   871                           ; 1 bytes @ 0xE
   872  019E                     	ds	4
   873                           
   874                           	psect	cstackBANK1
   875  00DC                     __pcstackBANK1:
   876  00DC                     ?___llmod:
   877  00DC                     ___llmod@divisor:	
   878                           ; 4 bytes @ 0x0
   879                           
   880                           
   881                           ; 4 bytes @ 0x0
   882  00DC                     	ds	4
   883  00E0                     ___llmod@dividend:
   884                           
   885                           ; 4 bytes @ 0x4
   886  00E0                     	ds	4
   887  00E4                     ??_display1:
   888  00E4                     ??_display2:	
   889                           ; 1 bytes @ 0x8
   890                           
   891  00E4                     ??_increment:	
   892                           ; 1 bytes @ 0x8
   893                           
   894                           
   895                           ; 1 bytes @ 0x8
   896  00E4                     	ds	2
   897  00E6                     display1@dot1:
   898                           
   899                           ; 1 bytes @ 0xA
   900  00E6                     	ds	1
   901  00E7                     display1@dot:
   902                           
   903                           ; 1 bytes @ 0xB
   904  00E7                     	ds	1
   905                           
   906                           	psect	cstackCOMMON
   907  0070                     __pcstackCOMMON:
   908  0070                     ?_initializer:
   909  0070                     ?_eepromRead:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  0070                     ?_editMenu:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  0070                     ?_editValues:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0070                     ?_resetSwitch:	
   919                           ; 1 bytes @ 0x0
   920                           
   921  0070                     ?_viewMenu:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  0070                     ?_encoder:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0070                     ?_eeprom_read:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0070                     ?_led:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0070                     ?_upSwitch:	
   934                           ; 1 bytes @ 0x0
   935                           
   936  0070                     ?_displayString:	
   937                           ; 1 bytes @ 0x0
   938                           
   939  0070                     ?_menuSwitch:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  0070                     ?_enterSwitch:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0070                     ?_main:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0070                     ?_highISR:	
   949                           ; 1 bytes @ 0x0
   950                           
   951  0070                     ?_dataPass:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0070                     ?_selectSwitch:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  0070                     ?i1___lldiv:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0070                     i1___lldiv@divisor:	
   961                           ; 4 bytes @ 0x0
   962                           
   963                           
   964                           ; 4 bytes @ 0x0
   965  0070                     	ds	4
   966  0074                     i1___lldiv@dividend:
   967                           
   968                           ; 4 bytes @ 0x4
   969  0074                     	ds	4
   970  0078                     ??i1___lldiv:
   971                           
   972                           ; 1 bytes @ 0x8
   973  0078                     	ds	1
   974  0079                     i1___lldiv@quotient:
   975                           
   976                           ; 4 bytes @ 0x9
   977  0079                     	ds	4
   978  007D                     i1___lldiv@counter:
   979                           
   980                           ; 1 bytes @ 0xD
   981  007D                     	ds	1
   982                           
   983                           	psect	cstackBANK0
   984  0020                     __pcstackBANK0:
   985  0020                     ?i1___llmod:
   986  0020                     i1___llmod@divisor:	
   987                           ; 4 bytes @ 0x0
   988                           
   989                           
   990                           ; 4 bytes @ 0x0
   991  0020                     	ds	4
   992  0024                     i1___llmod@dividend:
   993                           
   994                           ; 4 bytes @ 0x4
   995  0024                     	ds	4
   996  0028                     ??i1___llmod:
   997                           
   998                           ; 1 bytes @ 0x8
   999  0028                     	ds	1
  1000  0029                     i1___llmod@counter:
  1001                           
  1002                           ; 1 bytes @ 0x9
  1003  0029                     	ds	1
  1004  002A                     ?i1_eeprom_write:
  1005  002A                     i1eeprom_write@value:	
  1006                           ; 1 bytes @ 0xA
  1007                           
  1008                           
  1009                           ; 1 bytes @ 0xA
  1010  002A                     	ds	1
  1011  002B                     ??i1_eeprom_write:
  1012                           
  1013                           ; 1 bytes @ 0xB
  1014  002B                     	ds	1
  1015  002C                     i1eeprom_write@addr:
  1016                           
  1017                           ; 1 bytes @ 0xC
  1018  002C                     	ds	1
  1019  002D                     ??_highISR:
  1020                           
  1021                           ; 1 bytes @ 0xD
  1022  002D                     	ds	3
  1023  0030                     ??_initializer:
  1024  0030                     ??_resetSwitch:	
  1025                           ; 1 bytes @ 0x10
  1026                           
  1027  0030                     ??_encoder:	
  1028                           ; 1 bytes @ 0x10
  1029                           
  1030  0030                     ??_eeprom_read:	
  1031                           ; 1 bytes @ 0x10
  1032                           
  1033  0030                     ??_upSwitch:	
  1034                           ; 1 bytes @ 0x10
  1035                           
  1036  0030                     ??_menuSwitch:	
  1037                           ; 1 bytes @ 0x10
  1038                           
  1039  0030                     ??_enterSwitch:	
  1040                           ; 1 bytes @ 0x10
  1041                           
  1042  0030                     ??_dataPass:	
  1043                           ; 1 bytes @ 0x10
  1044                           
  1045  0030                     ??_selectSwitch:	
  1046                           ; 1 bytes @ 0x10
  1047                           
  1048                           
  1049                           ; 1 bytes @ 0x10
  1050  0030                     	ds	1
  1051  0031                     dataPass@data:
  1052  0031                     eeprom_read@addr:	
  1053                           ; 1 bytes @ 0x11
  1054                           
  1055                           
  1056                           ; 1 bytes @ 0x11
  1057  0031                     	ds	1
  1058  0032                     ?___wmul:
  1059  0032                     ?___lmul:	
  1060                           ; 2 bytes @ 0x12
  1061                           
  1062  0032                     dataPass@i:	
  1063                           ; 4 bytes @ 0x12
  1064                           
  1065  0032                     ___wmul@multiplier:	
  1066                           ; 1 bytes @ 0x12
  1067                           
  1068  0032                     ___lmul@multiplier:	
  1069                           ; 2 bytes @ 0x12
  1070                           
  1071                           
  1072                           ; 4 bytes @ 0x12
  1073  0032                     	ds	1
  1074  0033                     ??_led:
  1075  0033                     ??_displayString:	
  1076                           ; 1 bytes @ 0x13
  1077                           
  1078                           
  1079                           ; 1 bytes @ 0x13
  1080  0033                     	ds	1
  1081  0034                     ___wmul@multiplicand:
  1082                           
  1083                           ; 2 bytes @ 0x14
  1084  0034                     	ds	1
  1085  0035                     led@value:
  1086  0035                     displayString@string:	
  1087                           ; 1 bytes @ 0x15
  1088                           
  1089                           
  1090                           ; 1 bytes @ 0x15
  1091  0035                     	ds	1
  1092  0036                     ??___wmul:
  1093  0036                     ___wmul@product:	
  1094                           ; 1 bytes @ 0x16
  1095                           
  1096  0036                     ___lmul@multiplicand:	
  1097                           ; 2 bytes @ 0x16
  1098                           
  1099                           
  1100                           ; 4 bytes @ 0x16
  1101  0036                     	ds	4
  1102  003A                     ??___lmul:
  1103                           
  1104                           ; 1 bytes @ 0x1A
  1105  003A                     	ds	1
  1106  003B                     ___lmul@product:
  1107                           
  1108                           ; 4 bytes @ 0x1B
  1109  003B                     	ds	4
  1110  003F                     ?___lldiv:
  1111  003F                     ___lldiv@divisor:	
  1112                           ; 4 bytes @ 0x1F
  1113                           
  1114                           
  1115                           ; 4 bytes @ 0x1F
  1116  003F                     	ds	4
  1117  0043                     ___lldiv@dividend:
  1118                           
  1119                           ; 4 bytes @ 0x23
  1120  0043                     	ds	4
  1121  0047                     ??___lldiv:
  1122                           
  1123                           ; 1 bytes @ 0x27
  1124  0047                     	ds	1
  1125  0048                     ___lldiv@quotient:
  1126                           
  1127                           ; 4 bytes @ 0x28
  1128  0048                     	ds	4
  1129  004C                     ___lldiv@counter:
  1130                           
  1131                           ; 1 bytes @ 0x2C
  1132  004C                     	ds	1
  1133  004D                     ??___llmod:
  1134                           
  1135                           ; 1 bytes @ 0x2D
  1136  004D                     	ds	1
  1137  004E                     ___llmod@counter:
  1138                           
  1139                           ; 1 bytes @ 0x2E
  1140  004E                     	ds	1
  1141  004F                     ?_eeprom_write:
  1142  004F                     ?_display1:	
  1143                           ; 1 bytes @ 0x2F
  1144                           
  1145  004F                     ?_display2:	
  1146                           ; 1 bytes @ 0x2F
  1147                           
  1148  004F                     ?_increment:	
  1149                           ; 1 bytes @ 0x2F
  1150                           
  1151  004F                     eeprom_write@value:	
  1152                           ; 4 bytes @ 0x2F
  1153                           
  1154  004F                     display1@value:	
  1155                           ; 1 bytes @ 0x2F
  1156                           
  1157  004F                     display2@value:	
  1158                           ; 4 bytes @ 0x2F
  1159                           
  1160  004F                     increment@value:	
  1161                           ; 4 bytes @ 0x2F
  1162                           
  1163                           
  1164                           ; 4 bytes @ 0x2F
  1165  004F                     	ds	1
  1166  0050                     ??_eeprom_write:
  1167                           
  1168                           ; 1 bytes @ 0x30
  1169  0050                     	ds	1
  1170  0051                     eeprom_write@addr:
  1171                           
  1172                           ; 1 bytes @ 0x31
  1173  0051                     	ds	1
  1174  0052                     ??_editValues:
  1175                           
  1176                           ; 1 bytes @ 0x32
  1177  0052                     	ds	1
  1178                           
  1179                           	psect	maintext
  1180  0CCB                     __pmaintext:	
  1181 ;;
  1182 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1183 ;;
  1184 ;; *************** function _main *****************
  1185 ;; Defined at:
  1186 ;;		line 40 in file "newmain.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;		None
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;		None
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      void 
  1193 ;; Registers used:
  1194 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : B00/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1200 ;;      Params:         0       0       0       0       0
  1201 ;;      Locals:         0       0       0       0       0
  1202 ;;      Temps:          0       0       0       4       0
  1203 ;;      Totals:         0       0       0       4       0
  1204 ;;Total ram usage:        4 bytes
  1205 ;; Hardware stack levels required when called: 6
  1206 ;; This function calls:
  1207 ;;		___lldiv
  1208 ;;		___llmod
  1209 ;;		___lmul
  1210 ;;		_editMenu
  1211 ;;		_editValues
  1212 ;;		_eepromRead
  1213 ;;		_eeprom_write
  1214 ;;		_encoder
  1215 ;;		_initializer
  1216 ;;		_resetSwitch
  1217 ;;		_viewMenu
  1218 ;; This function is called by:
  1219 ;;		Startup code after reset
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           
  1224                           ;psect for function _main
  1225  0CCB                     _main:
  1226                           
  1227                           ;newmain.c: 41:     initializer();
  1228                           
  1229                           ;incstack = 0
  1230                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1231  0CCB  160A  158A  274D  120A  158A  	fcall	_initializer
  1232                           
  1233                           ;newmain.c: 42:     eepromRead();
  1234  0CD0  120A  118A  2040  120A  158A  	fcall	_eepromRead
  1235  0CD5                     l3616:
  1236                           
  1237                           ;newmain.c: 44:         editMenu();
  1238  0CD5  160A  118A  246D  120A  158A  	fcall	_editMenu
  1239                           
  1240                           ;newmain.c: 45:         editValues();
  1241  0CDA  120A  158A  21DC  120A  158A  	fcall	_editValues
  1242                           
  1243                           ;newmain.c: 47:         if(resetSwitch()){
  1244  0CDF  160A  158A  264C  120A  158A  	fcall	_resetSwitch
  1245  0CE4  3A00               	xorlw	0
  1246  0CE5  1903               	skipnz
  1247  0CE6  2E66               	goto	l3652
  1248                           
  1249                           ;newmain.c: 48:             if(viewMenuPointer == 0){
  1250  0CE7  1683               	bsf	3,5	;RP0=1, select bank1
  1251  0CE8  083D               	movf	_viewMenuPointer^(0+128),w	;volatile
  1252  0CE9  1D03               	btfss	3,2
  1253  0CEA  2E4C               	goto	l3644
  1254                           
  1255                           ;newmain.c: 49:                 if(currentClothLength){
  1256  0CEB  0857               	movf	(_currentClothLength+3)^(0+128),w	;volatile
  1257  0CEC  0456               	iorwf	(_currentClothLength+2)^(0+128),w	;volatile
  1258  0CED  0455               	iorwf	(_currentClothLength+1)^(0+128),w	;volatile
  1259  0CEE  0454               	iorwf	_currentClothLength^(0+128),w	;volatile
  1260  0CEF  1903               	skipnz
  1261  0CF0  2D90               	goto	l3634
  1262                           
  1263                           ;newmain.c: 50:                     previousCurrentClothLength = currentClothLength;
  1264  0CF1  0857               	movf	(_currentClothLength+3)^(0+128),w	;volatile
  1265  0CF2  00EF               	movwf	(_previousCurrentClothLength+3)^(0+128)	;volatile
  1266  0CF3  0856               	movf	(_currentClothLength+2)^(0+128),w	;volatile
  1267  0CF4  00EE               	movwf	(_previousCurrentClothLength+2)^(0+128)	;volatile
  1268  0CF5  0855               	movf	(_currentClothLength+1)^(0+128),w	;volatile
  1269  0CF6  00ED               	movwf	(_previousCurrentClothLength+1)^(0+128)	;volatile
  1270  0CF7  0854               	movf	_currentClothLength^(0+128),w	;volatile
  1271  0CF8  00EC               	movwf	_previousCurrentClothLength^(0+128)	;volatile
  1272                           
  1273                           ;newmain.c: 51:                     eeprom_write(0x11,previousCurrentClothLength/(10000U
      +                          L));
  1274  0CF9  3000               	movlw	0
  1275  0CFA  1283               	bcf	3,5	;RP0=0, select bank0
  1276  0CFB  00C2               	movwf	___lldiv@divisor+3
  1277  0CFC  3000               	movlw	0
  1278  0CFD  00C1               	movwf	___lldiv@divisor+2
  1279  0CFE  3027               	movlw	39
  1280  0CFF  00C0               	movwf	___lldiv@divisor+1
  1281  0D00  3010               	movlw	16
  1282  0D01  00BF               	movwf	___lldiv@divisor
  1283  0D02  1683               	bsf	3,5	;RP0=1, select bank1
  1284  0D03  086F               	movf	(_previousCurrentClothLength+3)^(0+128),w	;volatile
  1285  0D04  1283               	bcf	3,5	;RP0=0, select bank0
  1286  0D05  00C6               	movwf	___lldiv@dividend+3
  1287  0D06  1683               	bsf	3,5	;RP0=1, select bank1
  1288  0D07  086E               	movf	(_previousCurrentClothLength+2)^(0+128),w	;volatile
  1289  0D08  1283               	bcf	3,5	;RP0=0, select bank0
  1290  0D09  00C5               	movwf	___lldiv@dividend+2
  1291  0D0A  1683               	bsf	3,5	;RP0=1, select bank1
  1292  0D0B  086D               	movf	(_previousCurrentClothLength+1)^(0+128),w	;volatile
  1293  0D0C  1283               	bcf	3,5	;RP0=0, select bank0
  1294  0D0D  00C4               	movwf	___lldiv@dividend+1
  1295  0D0E  1683               	bsf	3,5	;RP0=1, select bank1
  1296  0D0F  086C               	movf	_previousCurrentClothLength^(0+128),w	;volatile
  1297  0D10  1283               	bcf	3,5	;RP0=0, select bank0
  1298  0D11  00C3               	movwf	___lldiv@dividend
  1299  0D12  160A  118A  218F  120A  158A  	fcall	___lldiv
  1300  0D17  083F               	movf	?___lldiv,w
  1301  0D18  1683               	bsf	3,5	;RP0=1, select bank3
  1302  0D19  1703               	bsf	3,6	;RP1=1, select bank3
  1303  0D1A  009E               	movwf	??_main^(0+384)
  1304  0D1B  081E               	movf	??_main^(0+384),w
  1305  0D1C  1283               	bcf	3,5	;RP0=0, select bank0
  1306  0D1D  1303               	bcf	3,6	;RP1=0, select bank0
  1307  0D1E  00CF               	movwf	eeprom_write@value
  1308  0D1F  3011               	movlw	17
  1309  0D20  160A  158A  2729  120A  158A  	fcall	_eeprom_write
  1310                           
  1311                           ;newmain.c: 52:                     eeprom_write(0x12,(previousCurrentClothLength/100)%1
      +                          00);
  1312  0D25  3000               	movlw	0
  1313  0D26  1303               	bcf	3,6	;RP1=0, select bank1
  1314  0D27  00DF               	movwf	(___llmod@divisor+3)^(0+128)
  1315  0D28  3000               	movlw	0
  1316  0D29  00DE               	movwf	(___llmod@divisor+2)^(0+128)
  1317  0D2A  3000               	movlw	0
  1318  0D2B  00DD               	movwf	(___llmod@divisor+1)^(0+128)
  1319  0D2C  3064               	movlw	100
  1320  0D2D  00DC               	movwf	___llmod@divisor^(0+128)
  1321  0D2E  3000               	movlw	0
  1322  0D2F  1283               	bcf	3,5	;RP0=0, select bank0
  1323  0D30  00C2               	movwf	___lldiv@divisor+3
  1324  0D31  3000               	movlw	0
  1325  0D32  00C1               	movwf	___lldiv@divisor+2
  1326  0D33  3000               	movlw	0
  1327  0D34  00C0               	movwf	___lldiv@divisor+1
  1328  0D35  3064               	movlw	100
  1329  0D36  00BF               	movwf	___lldiv@divisor
  1330  0D37  1683               	bsf	3,5	;RP0=1, select bank1
  1331  0D38  086F               	movf	(_previousCurrentClothLength+3)^(0+128),w	;volatile
  1332  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  1333  0D3A  00C6               	movwf	___lldiv@dividend+3
  1334  0D3B  1683               	bsf	3,5	;RP0=1, select bank1
  1335  0D3C  086E               	movf	(_previousCurrentClothLength+2)^(0+128),w	;volatile
  1336  0D3D  1283               	bcf	3,5	;RP0=0, select bank0
  1337  0D3E  00C5               	movwf	___lldiv@dividend+2
  1338  0D3F  1683               	bsf	3,5	;RP0=1, select bank1
  1339  0D40  086D               	movf	(_previousCurrentClothLength+1)^(0+128),w	;volatile
  1340  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  1341  0D42  00C4               	movwf	___lldiv@dividend+1
  1342  0D43  1683               	bsf	3,5	;RP0=1, select bank1
  1343  0D44  086C               	movf	_previousCurrentClothLength^(0+128),w	;volatile
  1344  0D45  1283               	bcf	3,5	;RP0=0, select bank0
  1345  0D46  00C3               	movwf	___lldiv@dividend
  1346  0D47  160A  118A  218F  120A  158A  	fcall	___lldiv
  1347  0D4C  0842               	movf	?___lldiv+3,w
  1348  0D4D  1683               	bsf	3,5	;RP0=1, select bank1
  1349  0D4E  00E3               	movwf	(___llmod@dividend+3)^(0+128)
  1350  0D4F  1283               	bcf	3,5	;RP0=0, select bank0
  1351  0D50  0841               	movf	?___lldiv+2,w
  1352  0D51  1683               	bsf	3,5	;RP0=1, select bank1
  1353  0D52  00E2               	movwf	(___llmod@dividend+2)^(0+128)
  1354  0D53  1283               	bcf	3,5	;RP0=0, select bank0
  1355  0D54  0840               	movf	?___lldiv+1,w
  1356  0D55  1683               	bsf	3,5	;RP0=1, select bank1
  1357  0D56  00E1               	movwf	(___llmod@dividend+1)^(0+128)
  1358  0D57  1283               	bcf	3,5	;RP0=0, select bank0
  1359  0D58  083F               	movf	?___lldiv,w
  1360  0D59  1683               	bsf	3,5	;RP0=1, select bank1
  1361  0D5A  00E0               	movwf	___llmod@dividend^(0+128)
  1362  0D5B  160A  118A  2087  120A  158A  	fcall	___llmod
  1363  0D60  085C               	movf	?___llmod^(0+128),w
  1364  0D61  1703               	bsf	3,6	;RP1=1, select bank3
  1365  0D62  009E               	movwf	??_main^(0+384)
  1366  0D63  081E               	movf	??_main^(0+384),w
  1367  0D64  1283               	bcf	3,5	;RP0=0, select bank0
  1368  0D65  1303               	bcf	3,6	;RP1=0, select bank0
  1369  0D66  00CF               	movwf	eeprom_write@value
  1370  0D67  3012               	movlw	18
  1371  0D68  160A  158A  2729  120A  158A  	fcall	_eeprom_write
  1372                           
  1373                           ;newmain.c: 53:                     eeprom_write(0x13,previousCurrentClothLength%100);
  1374  0D6D  3000               	movlw	0
  1375  0D6E  1303               	bcf	3,6	;RP1=0, select bank1
  1376  0D6F  00DF               	movwf	(___llmod@divisor+3)^(0+128)
  1377  0D70  3000               	movlw	0
  1378  0D71  00DE               	movwf	(___llmod@divisor+2)^(0+128)
  1379  0D72  3000               	movlw	0
  1380  0D73  00DD               	movwf	(___llmod@divisor+1)^(0+128)
  1381  0D74  3064               	movlw	100
  1382  0D75  00DC               	movwf	___llmod@divisor^(0+128)
  1383  0D76  086F               	movf	(_previousCurrentClothLength+3)^(0+128),w	;volatile
  1384  0D77  00E3               	movwf	(___llmod@dividend+3)^(0+128)
  1385  0D78  086E               	movf	(_previousCurrentClothLength+2)^(0+128),w	;volatile
  1386  0D79  00E2               	movwf	(___llmod@dividend+2)^(0+128)
  1387  0D7A  086D               	movf	(_previousCurrentClothLength+1)^(0+128),w	;volatile
  1388  0D7B  00E1               	movwf	(___llmod@dividend+1)^(0+128)
  1389  0D7C  086C               	movf	_previousCurrentClothLength^(0+128),w	;volatile
  1390  0D7D  00E0               	movwf	___llmod@dividend^(0+128)
  1391  0D7E  160A  118A  2087  120A  158A  	fcall	___llmod
  1392  0D83  085C               	movf	?___llmod^(0+128),w
  1393  0D84  1703               	bsf	3,6	;RP1=1, select bank3
  1394  0D85  009E               	movwf	??_main^(0+384)
  1395  0D86  081E               	movf	??_main^(0+384),w
  1396  0D87  1283               	bcf	3,5	;RP0=0, select bank0
  1397  0D88  1303               	bcf	3,6	;RP1=0, select bank0
  1398  0D89  00CF               	movwf	eeprom_write@value
  1399  0D8A  3013               	movlw	19
  1400  0D8B  160A  158A  2729  120A  158A  	fcall	_eeprom_write
  1401  0D90                     l3634:
  1402                           
  1403                           ;newmain.c: 55:                 resetCounter += 1;
  1404  0D90  3001               	movlw	1
  1405  0D91  1303               	bcf	3,6	;RP1=0, select bank1
  1406  0D92  07E8               	addwf	_resetCounter^(0+128),f	;volatile
  1407  0D93  3000               	movlw	0
  1408  0D94  1803               	skipnc
  1409  0D95  3001               	movlw	1
  1410  0D96  07E9               	addwf	(_resetCounter+1)^(0+128),f	;volatile
  1411  0D97  3000               	movlw	0
  1412  0D98  1803               	skipnc
  1413  0D99  3001               	movlw	1
  1414  0D9A  07EA               	addwf	(_resetCounter+2)^(0+128),f	;volatile
  1415  0D9B  3000               	movlw	0
  1416  0D9C  1803               	skipnc
  1417  0D9D  3001               	movlw	1
  1418  0D9E  07EB               	addwf	(_resetCounter+3)^(0+128),f	;volatile
  1419                           
  1420                           ;newmain.c: 56:                 eeprom_write(0x14,resetCounter/(10000UL));
  1421  0D9F  3000               	movlw	0
  1422  0DA0  1283               	bcf	3,5	;RP0=0, select bank0
  1423  0DA1  00C2               	movwf	___lldiv@divisor+3
  1424  0DA2  3000               	movlw	0
  1425  0DA3  00C1               	movwf	___lldiv@divisor+2
  1426  0DA4  3027               	movlw	39
  1427  0DA5  00C0               	movwf	___lldiv@divisor+1
  1428  0DA6  3010               	movlw	16
  1429  0DA7  00BF               	movwf	___lldiv@divisor
  1430  0DA8  1683               	bsf	3,5	;RP0=1, select bank1
  1431  0DA9  086B               	movf	(_resetCounter+3)^(0+128),w	;volatile
  1432  0DAA  1283               	bcf	3,5	;RP0=0, select bank0
  1433  0DAB  00C6               	movwf	___lldiv@dividend+3
  1434  0DAC  1683               	bsf	3,5	;RP0=1, select bank1
  1435  0DAD  086A               	movf	(_resetCounter+2)^(0+128),w	;volatile
  1436  0DAE  1283               	bcf	3,5	;RP0=0, select bank0
  1437  0DAF  00C5               	movwf	___lldiv@dividend+2
  1438  0DB0  1683               	bsf	3,5	;RP0=1, select bank1
  1439  0DB1  0869               	movf	(_resetCounter+1)^(0+128),w	;volatile
  1440  0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  1441  0DB3  00C4               	movwf	___lldiv@dividend+1
  1442  0DB4  1683               	bsf	3,5	;RP0=1, select bank1
  1443  0DB5  0868               	movf	_resetCounter^(0+128),w	;volatile
  1444  0DB6  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0DB7  00C3               	movwf	___lldiv@dividend
  1446  0DB8  160A  118A  218F  120A  158A  	fcall	___lldiv
  1447  0DBD  083F               	movf	?___lldiv,w
  1448  0DBE  1683               	bsf	3,5	;RP0=1, select bank3
  1449  0DBF  1703               	bsf	3,6	;RP1=1, select bank3
  1450  0DC0  009E               	movwf	??_main^(0+384)
  1451  0DC1  081E               	movf	??_main^(0+384),w
  1452  0DC2  1283               	bcf	3,5	;RP0=0, select bank0
  1453  0DC3  1303               	bcf	3,6	;RP1=0, select bank0
  1454  0DC4  00CF               	movwf	eeprom_write@value
  1455  0DC5  3014               	movlw	20
  1456  0DC6  160A  158A  2729  120A  158A  	fcall	_eeprom_write
  1457                           
  1458                           ;newmain.c: 57:                 eeprom_write(0x15,(resetCounter/100)%100);
  1459  0DCB  3000               	movlw	0
  1460  0DCC  1303               	bcf	3,6	;RP1=0, select bank1
  1461  0DCD  00DF               	movwf	(___llmod@divisor+3)^(0+128)
  1462  0DCE  3000               	movlw	0
  1463  0DCF  00DE               	movwf	(___llmod@divisor+2)^(0+128)
  1464  0DD0  3000               	movlw	0
  1465  0DD1  00DD               	movwf	(___llmod@divisor+1)^(0+128)
  1466  0DD2  3064               	movlw	100
  1467  0DD3  00DC               	movwf	___llmod@divisor^(0+128)
  1468  0DD4  3000               	movlw	0
  1469  0DD5  1283               	bcf	3,5	;RP0=0, select bank0
  1470  0DD6  00C2               	movwf	___lldiv@divisor+3
  1471  0DD7  3000               	movlw	0
  1472  0DD8  00C1               	movwf	___lldiv@divisor+2
  1473  0DD9  3000               	movlw	0
  1474  0DDA  00C0               	movwf	___lldiv@divisor+1
  1475  0DDB  3064               	movlw	100
  1476  0DDC  00BF               	movwf	___lldiv@divisor
  1477  0DDD  1683               	bsf	3,5	;RP0=1, select bank1
  1478  0DDE  086B               	movf	(_resetCounter+3)^(0+128),w	;volatile
  1479  0DDF  1283               	bcf	3,5	;RP0=0, select bank0
  1480  0DE0  00C6               	movwf	___lldiv@dividend+3
  1481  0DE1  1683               	bsf	3,5	;RP0=1, select bank1
  1482  0DE2  086A               	movf	(_resetCounter+2)^(0+128),w	;volatile
  1483  0DE3  1283               	bcf	3,5	;RP0=0, select bank0
  1484  0DE4  00C5               	movwf	___lldiv@dividend+2
  1485  0DE5  1683               	bsf	3,5	;RP0=1, select bank1
  1486  0DE6  0869               	movf	(_resetCounter+1)^(0+128),w	;volatile
  1487  0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  1488  0DE8  00C4               	movwf	___lldiv@dividend+1
  1489  0DE9  1683               	bsf	3,5	;RP0=1, select bank1
  1490  0DEA  0868               	movf	_resetCounter^(0+128),w	;volatile
  1491  0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  1492  0DEC  00C3               	movwf	___lldiv@dividend
  1493  0DED  160A  118A  218F  120A  158A  	fcall	___lldiv
  1494  0DF2  0842               	movf	?___lldiv+3,w
  1495  0DF3  1683               	bsf	3,5	;RP0=1, select bank1
  1496  0DF4  00E3               	movwf	(___llmod@dividend+3)^(0+128)
  1497  0DF5  1283               	bcf	3,5	;RP0=0, select bank0
  1498  0DF6  0841               	movf	?___lldiv+2,w
  1499  0DF7  1683               	bsf	3,5	;RP0=1, select bank1
  1500  0DF8  00E2               	movwf	(___llmod@dividend+2)^(0+128)
  1501  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  1502  0DFA  0840               	movf	?___lldiv+1,w
  1503  0DFB  1683               	bsf	3,5	;RP0=1, select bank1
  1504  0DFC  00E1               	movwf	(___llmod@dividend+1)^(0+128)
  1505  0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  1506  0DFE  083F               	movf	?___lldiv,w
  1507  0DFF  1683               	bsf	3,5	;RP0=1, select bank1
  1508  0E00  00E0               	movwf	___llmod@dividend^(0+128)
  1509  0E01  160A  118A  2087  120A  158A  	fcall	___llmod
  1510  0E06  085C               	movf	?___llmod^(0+128),w
  1511  0E07  1703               	bsf	3,6	;RP1=1, select bank3
  1512  0E08  009E               	movwf	??_main^(0+384)
  1513  0E09  081E               	movf	??_main^(0+384),w
  1514  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  1515  0E0B  1303               	bcf	3,6	;RP1=0, select bank0
  1516  0E0C  00CF               	movwf	eeprom_write@value
  1517  0E0D  3015               	movlw	21
  1518  0E0E  160A  158A  2729  120A  158A  	fcall	_eeprom_write
  1519                           
  1520                           ;newmain.c: 58:                 eeprom_write(0x16,resetCounter%100);
  1521  0E13  3000               	movlw	0
  1522  0E14  1303               	bcf	3,6	;RP1=0, select bank1
  1523  0E15  00DF               	movwf	(___llmod@divisor+3)^(0+128)
  1524  0E16  3000               	movlw	0
  1525  0E17  00DE               	movwf	(___llmod@divisor+2)^(0+128)
  1526  0E18  3000               	movlw	0
  1527  0E19  00DD               	movwf	(___llmod@divisor+1)^(0+128)
  1528  0E1A  3064               	movlw	100
  1529  0E1B  00DC               	movwf	___llmod@divisor^(0+128)
  1530  0E1C  086B               	movf	(_resetCounter+3)^(0+128),w	;volatile
  1531  0E1D  00E3               	movwf	(___llmod@dividend+3)^(0+128)
  1532  0E1E  086A               	movf	(_resetCounter+2)^(0+128),w	;volatile
  1533  0E1F  00E2               	movwf	(___llmod@dividend+2)^(0+128)
  1534  0E20  0869               	movf	(_resetCounter+1)^(0+128),w	;volatile
  1535  0E21  00E1               	movwf	(___llmod@dividend+1)^(0+128)
  1536  0E22  0868               	movf	_resetCounter^(0+128),w	;volatile
  1537  0E23  00E0               	movwf	___llmod@dividend^(0+128)
  1538  0E24  160A  118A  2087  120A  158A  	fcall	___llmod
  1539  0E29  085C               	movf	?___llmod^(0+128),w
  1540  0E2A  1703               	bsf	3,6	;RP1=1, select bank3
  1541  0E2B  009E               	movwf	??_main^(0+384)
  1542  0E2C  081E               	movf	??_main^(0+384),w
  1543  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  1544  0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  1545  0E2F  00CF               	movwf	eeprom_write@value
  1546  0E30  3016               	movlw	22
  1547  0E31  160A  158A  2729  120A  158A  	fcall	_eeprom_write
  1548                           
  1549                           ;newmain.c: 59:                 currentClothLength = 0;
  1550  0E36  3000               	movlw	0
  1551  0E37  1303               	bcf	3,6	;RP1=0, select bank1
  1552  0E38  00D7               	movwf	(_currentClothLength+3)^(0+128)	;volatile
  1553  0E39  3000               	movlw	0
  1554  0E3A  00D6               	movwf	(_currentClothLength+2)^(0+128)	;volatile
  1555  0E3B  3000               	movlw	0
  1556  0E3C  00D5               	movwf	(_currentClothLength+1)^(0+128)	;volatile
  1557  0E3D  3000               	movlw	0
  1558  0E3E  00D4               	movwf	_currentClothLength^(0+128)	;volatile
  1559                           
  1560                           ;newmain.c: 60:                 metrePerMin = 0;
  1561  0E3F  3000               	movlw	0
  1562  0E40  00AB               	movwf	(_metrePerMin+3)^(0+128)	;volatile
  1563  0E41  3000               	movlw	0
  1564  0E42  00AA               	movwf	(_metrePerMin+2)^(0+128)	;volatile
  1565  0E43  3000               	movlw	0
  1566  0E44  00A9               	movwf	(_metrePerMin+1)^(0+128)	;volatile
  1567  0E45  3000               	movlw	0
  1568  0E46  00A8               	movwf	_metrePerMin^(0+128)	;volatile
  1569                           
  1570                           ;newmain.c: 61:                 currentClothLengthBalanceMinus = 0;
  1571  0E47  01B4               	clrf	_currentClothLengthBalanceMinus^(0+128)	;volatile
  1572  0E48  01B5               	clrf	(_currentClothLengthBalanceMinus+1)^(0+128)	;volatile
  1573                           
  1574                           ;newmain.c: 62:                 currentClothLengthBalancePlus = 0;
  1575  0E49  01B6               	clrf	_currentClothLengthBalancePlus^(0+128)	;volatile
  1576  0E4A  01B7               	clrf	(_currentClothLengthBalancePlus+1)^(0+128)	;volatile
  1577                           
  1578                           ;newmain.c: 63:             }
  1579  0E4B  2E66               	goto	l3652
  1580  0E4C                     l3644:
  1581  0E4C  3002               	movlw	2
  1582  0E4D  063D               	xorwf	_viewMenuPointer^(0+128),w	;volatile
  1583  0E4E  1D03               	btfss	3,2
  1584  0E4F  2E59               	goto	l3648
  1585                           
  1586                           ;newmain.c: 65:                 resetCounter = 0;
  1587  0E50  3000               	movlw	0
  1588  0E51  00EB               	movwf	(_resetCounter+3)^(0+128)	;volatile
  1589  0E52  3000               	movlw	0
  1590  0E53  00EA               	movwf	(_resetCounter+2)^(0+128)	;volatile
  1591  0E54  3000               	movlw	0
  1592  0E55  00E9               	movwf	(_resetCounter+1)^(0+128)	;volatile
  1593  0E56  3000               	movlw	0
  1594  0E57  00E8               	movwf	_resetCounter^(0+128)	;volatile
  1595                           
  1596                           ;newmain.c: 66:             }
  1597  0E58  2E66               	goto	l3652
  1598  0E59                     l3648:
  1599  0E59  3003               	movlw	3
  1600  0E5A  063D               	xorwf	_viewMenuPointer^(0+128),w	;volatile
  1601  0E5B  1D03               	btfss	3,2
  1602  0E5C  2E66               	goto	l3652
  1603                           
  1604                           ;newmain.c: 68:                 hourMeter = 0;
  1605  0E5D  3000               	movlw	0
  1606  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  1607  0E5F  00DF               	movwf	_hourMeter+3	;volatile
  1608  0E60  3000               	movlw	0
  1609  0E61  00DE               	movwf	_hourMeter+2	;volatile
  1610  0E62  3000               	movlw	0
  1611  0E63  00DD               	movwf	_hourMeter+1	;volatile
  1612  0E64  3000               	movlw	0
  1613  0E65  00DC               	movwf	_hourMeter	;volatile
  1614  0E66                     l3652:
  1615                           
  1616                           ;newmain.c: 72:         if(currentClothLength >= (actualClothLength * 100)){
  1617  0E66  1683               	bsf	3,5	;RP0=1, select bank1
  1618  0E67  0853               	movf	(_actualClothLength+3)^(0+128),w	;volatile
  1619  0E68  1283               	bcf	3,5	;RP0=0, select bank0
  1620  0E69  00B5               	movwf	___lmul@multiplier+3
  1621  0E6A  1683               	bsf	3,5	;RP0=1, select bank1
  1622  0E6B  0852               	movf	(_actualClothLength+2)^(0+128),w	;volatile
  1623  0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  1624  0E6D  00B4               	movwf	___lmul@multiplier+2
  1625  0E6E  1683               	bsf	3,5	;RP0=1, select bank1
  1626  0E6F  0851               	movf	(_actualClothLength+1)^(0+128),w	;volatile
  1627  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  1628  0E71  00B3               	movwf	___lmul@multiplier+1
  1629  0E72  1683               	bsf	3,5	;RP0=1, select bank1
  1630  0E73  0850               	movf	_actualClothLength^(0+128),w	;volatile
  1631  0E74  1283               	bcf	3,5	;RP0=0, select bank0
  1632  0E75  00B2               	movwf	___lmul@multiplier
  1633  0E76  3000               	movlw	0
  1634  0E77  00B9               	movwf	___lmul@multiplicand+3
  1635  0E78  3000               	movlw	0
  1636  0E79  00B8               	movwf	___lmul@multiplicand+2
  1637  0E7A  3000               	movlw	0
  1638  0E7B  00B7               	movwf	___lmul@multiplicand+1
  1639  0E7C  3064               	movlw	100
  1640  0E7D  00B6               	movwf	___lmul@multiplicand
  1641  0E7E  160A  158A  2775  120A  158A  	fcall	___lmul
  1642  0E83  0835               	movf	?___lmul+3,w
  1643  0E84  1683               	bsf	3,5	;RP0=1, select bank1
  1644  0E85  0257               	subwf	(_currentClothLength+3)^(0+128),w	;volatile
  1645  0E86  1D03               	skipz
  1646  0E87  2E98               	goto	u5335
  1647  0E88  1283               	bcf	3,5	;RP0=0, select bank0
  1648  0E89  0834               	movf	?___lmul+2,w
  1649  0E8A  1683               	bsf	3,5	;RP0=1, select bank1
  1650  0E8B  0256               	subwf	(_currentClothLength+2)^(0+128),w	;volatile
  1651  0E8C  1D03               	skipz
  1652  0E8D  2E98               	goto	u5335
  1653  0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  1654  0E8F  0833               	movf	?___lmul+1,w
  1655  0E90  1683               	bsf	3,5	;RP0=1, select bank1
  1656  0E91  0255               	subwf	(_currentClothLength+1)^(0+128),w	;volatile
  1657  0E92  1D03               	skipz
  1658  0E93  2E98               	goto	u5335
  1659  0E94  1283               	bcf	3,5	;RP0=0, select bank0
  1660  0E95  0832               	movf	?___lmul,w
  1661  0E96  1683               	bsf	3,5	;RP0=1, select bank1
  1662  0E97  0254               	subwf	_currentClothLength^(0+128),w	;volatile
  1663  0E98                     u5335:
  1664  0E98  1C03               	skipc
  1665  0E99  2E9D               	goto	l209
  1666                           
  1667                           ;newmain.c: 73:             RE1 = 1;
  1668  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  1669  0E9B  1489               	bsf	9,1	;volatile
  1670                           
  1671                           ;newmain.c: 74:         }
  1672  0E9C  2E9F               	goto	l3656
  1673  0E9D                     l209:	
  1674                           ;newmain.c: 75:         else{
  1675                           
  1676                           
  1677                           ;newmain.c: 76:             RE1 = 0;
  1678  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  1679  0E9E  1089               	bcf	9,1	;volatile
  1680  0E9F                     l3656:
  1681                           
  1682                           ;newmain.c: 78:         if(currentClothLength >= (warningClothLength * 100)){
  1683  0E9F  1683               	bsf	3,5	;RP0=1, select bank1
  1684  0EA0  084B               	movf	(_warningClothLength+3)^(0+128),w	;volatile
  1685  0EA1  1283               	bcf	3,5	;RP0=0, select bank0
  1686  0EA2  00B5               	movwf	___lmul@multiplier+3
  1687  0EA3  1683               	bsf	3,5	;RP0=1, select bank1
  1688  0EA4  084A               	movf	(_warningClothLength+2)^(0+128),w	;volatile
  1689  0EA5  1283               	bcf	3,5	;RP0=0, select bank0
  1690  0EA6  00B4               	movwf	___lmul@multiplier+2
  1691  0EA7  1683               	bsf	3,5	;RP0=1, select bank1
  1692  0EA8  0849               	movf	(_warningClothLength+1)^(0+128),w	;volatile
  1693  0EA9  1283               	bcf	3,5	;RP0=0, select bank0
  1694  0EAA  00B3               	movwf	___lmul@multiplier+1
  1695  0EAB  1683               	bsf	3,5	;RP0=1, select bank1
  1696  0EAC  0848               	movf	_warningClothLength^(0+128),w	;volatile
  1697  0EAD  1283               	bcf	3,5	;RP0=0, select bank0
  1698  0EAE  00B2               	movwf	___lmul@multiplier
  1699  0EAF  3000               	movlw	0
  1700  0EB0  00B9               	movwf	___lmul@multiplicand+3
  1701  0EB1  3000               	movlw	0
  1702  0EB2  00B8               	movwf	___lmul@multiplicand+2
  1703  0EB3  3000               	movlw	0
  1704  0EB4  00B7               	movwf	___lmul@multiplicand+1
  1705  0EB5  3064               	movlw	100
  1706  0EB6  00B6               	movwf	___lmul@multiplicand
  1707  0EB7  160A  158A  2775  120A  158A  	fcall	___lmul
  1708  0EBC  0835               	movf	?___lmul+3,w
  1709  0EBD  1683               	bsf	3,5	;RP0=1, select bank1
  1710  0EBE  0257               	subwf	(_currentClothLength+3)^(0+128),w	;volatile
  1711  0EBF  1D03               	skipz
  1712  0EC0  2ED1               	goto	u5345
  1713  0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  1714  0EC2  0834               	movf	?___lmul+2,w
  1715  0EC3  1683               	bsf	3,5	;RP0=1, select bank1
  1716  0EC4  0256               	subwf	(_currentClothLength+2)^(0+128),w	;volatile
  1717  0EC5  1D03               	skipz
  1718  0EC6  2ED1               	goto	u5345
  1719  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  1720  0EC8  0833               	movf	?___lmul+1,w
  1721  0EC9  1683               	bsf	3,5	;RP0=1, select bank1
  1722  0ECA  0255               	subwf	(_currentClothLength+1)^(0+128),w	;volatile
  1723  0ECB  1D03               	skipz
  1724  0ECC  2ED1               	goto	u5345
  1725  0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  1726  0ECE  0832               	movf	?___lmul,w
  1727  0ECF  1683               	bsf	3,5	;RP0=1, select bank1
  1728  0ED0  0254               	subwf	_currentClothLength^(0+128),w	;volatile
  1729  0ED1                     u5345:
  1730  0ED1  1C03               	skipc
  1731  0ED2  2ED6               	goto	l211
  1732                           
  1733                           ;newmain.c: 79:             RE2 = 1;
  1734  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  1735  0ED4  1509               	bsf	9,2	;volatile
  1736                           
  1737                           ;newmain.c: 80:         }
  1738  0ED5  2ED8               	goto	l3660
  1739  0ED6                     l211:	
  1740                           ;newmain.c: 81:         else{
  1741                           
  1742                           
  1743                           ;newmain.c: 82:             RE2 = 0;
  1744  0ED6  1283               	bcf	3,5	;RP0=0, select bank0
  1745  0ED7  1109               	bcf	9,2	;volatile
  1746  0ED8                     l3660:
  1747                           
  1748                           ;newmain.c: 85:         if(skipCount >= 200){
  1749  0ED8  30C8               	movlw	200
  1750  0ED9  1683               	bsf	3,5	;RP0=1, select bank1
  1751  0EDA  0238               	subwf	_skipCount^(0+128),w	;volatile
  1752  0EDB  1C03               	skipc
  1753  0EDC  2EE4               	goto	l3664
  1754                           
  1755                           ;newmain.c: 86:             editMenuPointer = 0;
  1756  0EDD  01BC               	clrf	_editMenuPointer^(0+128)	;volatile
  1757                           
  1758                           ;newmain.c: 87:             viewMenuPointer = 0;
  1759  0EDE  01BD               	clrf	_viewMenuPointer^(0+128)	;volatile
  1760                           
  1761                           ;newmain.c: 88:             editValue = 0;
  1762  0EDF  01BB               	clrf	_editValue^(0+128)	;volatile
  1763                           
  1764                           ;newmain.c: 89:             currentDisplay = 0;
  1765  0EE0  1283               	bcf	3,5	;RP0=0, select bank0
  1766  0EE1  01DB               	clrf	_currentDisplay	;volatile
  1767                           
  1768                           ;newmain.c: 90:             skipCount = 0;
  1769  0EE2  1683               	bsf	3,5	;RP0=1, select bank1
  1770  0EE3  01B8               	clrf	_skipCount^(0+128)	;volatile
  1771  0EE4                     l3664:
  1772                           
  1773                           ;newmain.c: 93:         if(encoderSkipCount >= 200){
  1774  0EE4  0833               	movf	(_encoderSkipCount+1)^(0+128),w	;volatile
  1775  0EE5  3A80               	xorlw	128
  1776  0EE6  00FF               	movwf	127
  1777  0EE7  3080               	movlw	128
  1778  0EE8  027F               	subwf	127,w
  1779  0EE9  1D03               	skipz
  1780  0EEA  2EED               	goto	u5365
  1781  0EEB  30C8               	movlw	200
  1782  0EEC  0232               	subwf	_encoderSkipCount^(0+128),w	;volatile
  1783  0EED                     u5365:
  1784  0EED  1C03               	skipc
  1785  0EEE  2F01               	goto	l214
  1786                           
  1787                           ;newmain.c: 94:             metrePerMinCounter = 0;
  1788  0EEF  3000               	movlw	0
  1789  0EF0  1683               	bsf	3,5	;RP0=1, select bank1
  1790  0EF1  1303               	bcf	3,6	;RP1=0, select bank1
  1791  0EF2  00A7               	movwf	(_metrePerMinCounter+3)^(0+128)	;volatile
  1792  0EF3  3000               	movlw	0
  1793  0EF4  00A6               	movwf	(_metrePerMinCounter+2)^(0+128)	;volatile
  1794  0EF5  3000               	movlw	0
  1795  0EF6  00A5               	movwf	(_metrePerMinCounter+1)^(0+128)	;volatile
  1796  0EF7  3000               	movlw	0
  1797  0EF8  00A4               	movwf	_metrePerMinCounter^(0+128)	;volatile
  1798                           
  1799                           ;newmain.c: 95:             metrePerMin = 0;
  1800  0EF9  3000               	movlw	0
  1801  0EFA  00AB               	movwf	(_metrePerMin+3)^(0+128)	;volatile
  1802  0EFB  3000               	movlw	0
  1803  0EFC  00AA               	movwf	(_metrePerMin+2)^(0+128)	;volatile
  1804  0EFD  3000               	movlw	0
  1805  0EFE  00A9               	movwf	(_metrePerMin+1)^(0+128)	;volatile
  1806  0EFF  3000               	movlw	0
  1807  0F00  00A8               	movwf	_metrePerMin^(0+128)	;volatile
  1808  0F01                     l214:	
  1809                           ;newmain.c: 96:         }
  1810                           
  1811                           
  1812                           ;newmain.c: 98:         if(metrePerMinCounter >= pulse){
  1813  0F01  1683               	bsf	3,5	;RP0=1, select bank1
  1814  0F02  1303               	bcf	3,6	;RP1=0, select bank1
  1815  0F03  084F               	movf	(_pulse+3)^(0+128),w	;volatile
  1816  0F04  0227               	subwf	(_metrePerMinCounter+3)^(0+128),w	;volatile
  1817  0F05  1D03               	skipz
  1818  0F06  2F11               	goto	u5375
  1819  0F07  084E               	movf	(_pulse+2)^(0+128),w	;volatile
  1820  0F08  0226               	subwf	(_metrePerMinCounter+2)^(0+128),w	;volatile
  1821  0F09  1D03               	skipz
  1822  0F0A  2F11               	goto	u5375
  1823  0F0B  084D               	movf	(_pulse+1)^(0+128),w	;volatile
  1824  0F0C  0225               	subwf	(_metrePerMinCounter+1)^(0+128),w	;volatile
  1825  0F0D  1D03               	skipz
  1826  0F0E  2F11               	goto	u5375
  1827  0F0F  084C               	movf	_pulse^(0+128),w	;volatile
  1828  0F10  0224               	subwf	_metrePerMinCounter^(0+128),w	;volatile
  1829  0F11                     u5375:
  1830  0F11  1C03               	skipc
  1831  0F12  2F8B               	goto	l215
  1832                           
  1833                           ;newmain.c: 99:             metrePerMin = (12 * circumference) / timerCount;
  1834  0F13  0839               	movf	_timerCount^(0+128),w	;volatile
  1835  0F14  1703               	bsf	3,6	;RP1=1, select bank3
  1836  0F15  009E               	movwf	??_main^(0+384)
  1837  0F16  019F               	clrf	(??_main^(0+384)+1)
  1838  0F17  01A0               	clrf	(??_main^(0+384)+2)
  1839  0F18  01A1               	clrf	(??_main^(0+384)+3)
  1840  0F19  0821               	movf	(??_main+3)^(0+384),w
  1841  0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  1842  0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  1843  0F1C  00C2               	movwf	___lldiv@divisor+3
  1844  0F1D  1683               	bsf	3,5	;RP0=1, select bank3
  1845  0F1E  1703               	bsf	3,6	;RP1=1, select bank3
  1846  0F1F  0820               	movf	(??_main+2)^(0+384),w
  1847  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  1848  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  1849  0F22  00C1               	movwf	___lldiv@divisor+2
  1850  0F23  1683               	bsf	3,5	;RP0=1, select bank3
  1851  0F24  1703               	bsf	3,6	;RP1=1, select bank3
  1852  0F25  081F               	movf	(??_main+1)^(0+384),w
  1853  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  1854  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  1855  0F28  00C0               	movwf	___lldiv@divisor+1
  1856  0F29  1683               	bsf	3,5	;RP0=1, select bank3
  1857  0F2A  1703               	bsf	3,6	;RP1=1, select bank3
  1858  0F2B  081E               	movf	??_main^(0+384),w
  1859  0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  1860  0F2D  1303               	bcf	3,6	;RP1=0, select bank0
  1861  0F2E  00BF               	movwf	___lldiv@divisor
  1862  0F2F  1683               	bsf	3,5	;RP0=1, select bank1
  1863  0F30  085B               	movf	(_circumference+3)^(0+128),w	;volatile
  1864  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  1865  0F32  00B5               	movwf	___lmul@multiplier+3
  1866  0F33  1683               	bsf	3,5	;RP0=1, select bank1
  1867  0F34  085A               	movf	(_circumference+2)^(0+128),w	;volatile
  1868  0F35  1283               	bcf	3,5	;RP0=0, select bank0
  1869  0F36  00B4               	movwf	___lmul@multiplier+2
  1870  0F37  1683               	bsf	3,5	;RP0=1, select bank1
  1871  0F38  0859               	movf	(_circumference+1)^(0+128),w	;volatile
  1872  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0F3A  00B3               	movwf	___lmul@multiplier+1
  1874  0F3B  1683               	bsf	3,5	;RP0=1, select bank1
  1875  0F3C  0858               	movf	_circumference^(0+128),w	;volatile
  1876  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  1877  0F3E  00B2               	movwf	___lmul@multiplier
  1878  0F3F  3000               	movlw	0
  1879  0F40  00B9               	movwf	___lmul@multiplicand+3
  1880  0F41  3000               	movlw	0
  1881  0F42  00B8               	movwf	___lmul@multiplicand+2
  1882  0F43  3000               	movlw	0
  1883  0F44  00B7               	movwf	___lmul@multiplicand+1
  1884  0F45  300C               	movlw	12
  1885  0F46  00B6               	movwf	___lmul@multiplicand
  1886  0F47  160A  158A  2775  120A  158A  	fcall	___lmul
  1887  0F4C  0835               	movf	?___lmul+3,w
  1888  0F4D  00C6               	movwf	___lldiv@dividend+3
  1889  0F4E  0834               	movf	?___lmul+2,w
  1890  0F4F  00C5               	movwf	___lldiv@dividend+2
  1891  0F50  0833               	movf	?___lmul+1,w
  1892  0F51  00C4               	movwf	___lldiv@dividend+1
  1893  0F52  0832               	movf	?___lmul,w
  1894  0F53  00C3               	movwf	___lldiv@dividend
  1895  0F54  160A  118A  218F  120A  158A  	fcall	___lldiv
  1896  0F59  0842               	movf	?___lldiv+3,w
  1897  0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  1898  0F5B  00AB               	movwf	(_metrePerMin+3)^(0+128)	;volatile
  1899  0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  1900  0F5D  0841               	movf	?___lldiv+2,w
  1901  0F5E  1683               	bsf	3,5	;RP0=1, select bank1
  1902  0F5F  00AA               	movwf	(_metrePerMin+2)^(0+128)	;volatile
  1903  0F60  1283               	bcf	3,5	;RP0=0, select bank0
  1904  0F61  0840               	movf	?___lldiv+1,w
  1905  0F62  1683               	bsf	3,5	;RP0=1, select bank1
  1906  0F63  00A9               	movwf	(_metrePerMin+1)^(0+128)	;volatile
  1907  0F64  1283               	bcf	3,5	;RP0=0, select bank0
  1908  0F65  083F               	movf	?___lldiv,w
  1909  0F66  1683               	bsf	3,5	;RP0=1, select bank1
  1910  0F67  00A8               	movwf	_metrePerMin^(0+128)	;volatile
  1911                           
  1912                           ;newmain.c: 100:             metrePerMinCounter = 0;
  1913  0F68  3000               	movlw	0
  1914  0F69  00A7               	movwf	(_metrePerMinCounter+3)^(0+128)	;volatile
  1915  0F6A  3000               	movlw	0
  1916  0F6B  00A6               	movwf	(_metrePerMinCounter+2)^(0+128)	;volatile
  1917  0F6C  3000               	movlw	0
  1918  0F6D  00A5               	movwf	(_metrePerMinCounter+1)^(0+128)	;volatile
  1919  0F6E  3000               	movlw	0
  1920  0F6F  00A4               	movwf	_metrePerMinCounter^(0+128)	;volatile
  1921                           
  1922                           ;newmain.c: 101:             timerCount = 0;
  1923  0F70  01B9               	clrf	_timerCount^(0+128)	;volatile
  1924                           
  1925                           ;newmain.c: 102:             if(metrePerMin > 999)metrePerMin = 999;
  1926  0F71  082B               	movf	(_metrePerMin+3)^(0+128),w	;volatile
  1927  0F72  1D03               	btfss	3,2
  1928  0F73  2F81               	goto	l3676
  1929  0F74  082A               	movf	(_metrePerMin+2)^(0+128),w	;volatile
  1930  0F75  1D03               	btfss	3,2
  1931  0F76  2F81               	goto	l3676
  1932  0F77  3003               	movlw	3
  1933  0F78  0229               	subwf	(_metrePerMin+1)^(0+128),w	;volatile
  1934  0F79  1D03               	skipz
  1935  0F7A  2F7F               	goto	u5383
  1936  0F7B  30E8               	movlw	232
  1937  0F7C  0228               	subwf	_metrePerMin^(0+128),w	;volatile
  1938  0F7D  1D03               	skipz
  1939  0F7E  2F7F               	goto	u5383
  1940  0F7F                     u5383:
  1941  0F7F  1C03               	btfss	3,0
  1942  0F80  2F8B               	goto	l215
  1943  0F81                     l3676:
  1944  0F81  3000               	movlw	0
  1945  0F82  1683               	bsf	3,5	;RP0=1, select bank1
  1946  0F83  1303               	bcf	3,6	;RP1=0, select bank1
  1947  0F84  00AB               	movwf	(_metrePerMin+3)^(0+128)	;volatile
  1948  0F85  3000               	movlw	0
  1949  0F86  00AA               	movwf	(_metrePerMin+2)^(0+128)	;volatile
  1950  0F87  3003               	movlw	3
  1951  0F88  00A9               	movwf	(_metrePerMin+1)^(0+128)	;volatile
  1952  0F89  30E7               	movlw	231
  1953  0F8A  00A8               	movwf	_metrePerMin^(0+128)	;volatile
  1954  0F8B                     l215:	
  1955                           ;newmain.c: 103:         }
  1956                           
  1957                           
  1958                           ;newmain.c: 104:         if(hourMeterCounter >= 7200){
  1959  0F8B  301C               	movlw	28
  1960  0F8C  1683               	bsf	3,5	;RP0=1, select bank1
  1961  0F8D  1303               	bcf	3,6	;RP1=0, select bank1
  1962  0F8E  0231               	subwf	(_hourMeterCounter+1)^(0+128),w	;volatile
  1963  0F8F  3020               	movlw	32
  1964  0F90  1903               	skipnz
  1965  0F91  0230               	subwf	_hourMeterCounter^(0+128),w	;volatile
  1966  0F92  1C03               	skipc
  1967  0F93  2FA6               	goto	l3682
  1968                           
  1969                           ;newmain.c: 105:             hourMeter += 1;
  1970  0F94  3001               	movlw	1
  1971  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  1972  0F96  07DC               	addwf	_hourMeter,f	;volatile
  1973  0F97  3000               	movlw	0
  1974  0F98  1803               	skipnc
  1975  0F99  3001               	movlw	1
  1976  0F9A  07DD               	addwf	_hourMeter+1,f	;volatile
  1977  0F9B  3000               	movlw	0
  1978  0F9C  1803               	skipnc
  1979  0F9D  3001               	movlw	1
  1980  0F9E  07DE               	addwf	_hourMeter+2,f	;volatile
  1981  0F9F  3000               	movlw	0
  1982  0FA0  1803               	skipnc
  1983  0FA1  3001               	movlw	1
  1984  0FA2  07DF               	addwf	_hourMeter+3,f	;volatile
  1985                           
  1986                           ;newmain.c: 106:             hourMeterCounter = 0;
  1987  0FA3  1683               	bsf	3,5	;RP0=1, select bank1
  1988  0FA4  01B0               	clrf	_hourMeterCounter^(0+128)	;volatile
  1989  0FA5  01B1               	clrf	(_hourMeterCounter+1)^(0+128)	;volatile
  1990  0FA6                     l3682:
  1991                           
  1992                           ;newmain.c: 108:         viewMenu();
  1993  0FA6  160A  118A  235B  120A  158A  	fcall	_viewMenu
  1994                           
  1995                           ;newmain.c: 109:         if(changed){
  1996  0FAB  1283               	bcf	3,5	;RP0=0, select bank0
  1997  0FAC  1C53               	btfss	_changed/(0+8),_changed& (0+7)	;volatile
  1998  0FAD  2FFA               	goto	l3700
  1999                           
  2000                           ;newmain.c: 110:             if(count == 1){
  2001  0FAE  1683               	bsf	3,5	;RP0=1, select bank1
  2002  0FAF  033A               	decf	_count^(0+128),w	;volatile
  2003  0FB0  1D03               	btfss	3,2
  2004  0FB1  2FD6               	goto	l3692
  2005                           
  2006                           ;newmain.c: 111:                 currentClothLength+=countingPulse;
  2007  0FB2  0820               	movf	_countingPulse^(0+128),w	;volatile
  2008  0FB3  07D4               	addwf	_currentClothLength^(0+128),f	;volatile
  2009  0FB4  0821               	movf	(_countingPulse+1)^(0+128),w	;volatile
  2010  0FB5  1103               	clrz
  2011  0FB6  1803               	skipnc
  2012  0FB7  3E01               	addlw	1
  2013  0FB8  1D03               	btfss	3,2
  2014  0FB9  07D5               	addwf	(_currentClothLength+1)^(0+128),f	;volatile
  2015  0FBA  0822               	movf	(_countingPulse+2)^(0+128),w	;volatile
  2016  0FBB  1103               	clrz
  2017  0FBC  1803               	skipnc
  2018  0FBD  3E01               	addlw	1
  2019  0FBE  1D03               	btfss	3,2
  2020  0FBF  07D6               	addwf	(_currentClothLength+2)^(0+128),f	;volatile
  2021  0FC0  0823               	movf	(_countingPulse+3)^(0+128),w	;volatile
  2022  0FC1  1103               	clrz
  2023  0FC2  1803               	skipnc
  2024  0FC3  3E01               	addlw	1
  2025  0FC4  1D03               	btfss	3,2
  2026  0FC5  07D7               	addwf	(_currentClothLength+3)^(0+128),f	;volatile
  2027                           
  2028                           ;newmain.c: 112:                 metrePerMinCounter += 1;
  2029  0FC6  3001               	movlw	1
  2030  0FC7  07A4               	addwf	_metrePerMinCounter^(0+128),f	;volatile
  2031  0FC8  3000               	movlw	0
  2032  0FC9  1803               	skipnc
  2033  0FCA  3001               	movlw	1
  2034  0FCB  07A5               	addwf	(_metrePerMinCounter+1)^(0+128),f	;volatile
  2035  0FCC  3000               	movlw	0
  2036  0FCD  1803               	skipnc
  2037  0FCE  3001               	movlw	1
  2038  0FCF  07A6               	addwf	(_metrePerMinCounter+2)^(0+128),f	;volatile
  2039  0FD0  3000               	movlw	0
  2040  0FD1  1803               	skipnc
  2041  0FD2  3001               	movlw	1
  2042  0FD3  07A7               	addwf	(_metrePerMinCounter+3)^(0+128),f	;volatile
  2043                           
  2044                           ;newmain.c: 113:                 encoderSkipCount = 0;
  2045  0FD4  01B2               	clrf	_encoderSkipCount^(0+128)	;volatile
  2046  0FD5  01B3               	clrf	(_encoderSkipCount+1)^(0+128)	;volatile
  2047  0FD6                     l3692:
  2048                           
  2049                           ;newmain.c: 115:             if(count == 2){
  2050  0FD6  3002               	movlw	2
  2051  0FD7  063A               	xorwf	_count^(0+128),w	;volatile
  2052  0FD8  1D03               	btfss	3,2
  2053  0FD9  2FF8               	goto	l3698
  2054                           
  2055                           ;newmain.c: 116:                 currentClothLength-=countingPulse;
  2056  0FDA  0820               	movf	_countingPulse^(0+128),w	;volatile
  2057  0FDB  02D4               	subwf	_currentClothLength^(0+128),f	;volatile
  2058  0FDC  0821               	movf	(_countingPulse+1)^(0+128),w	;volatile
  2059  0FDD  1C03               	skipc
  2060  0FDE  0F21               	incfsz	(_countingPulse+1)^(0+128),w	;volatile
  2061  0FDF  02D5               	subwf	(_currentClothLength+1)^(0+128),f	;volatile
  2062  0FE0  0822               	movf	(_countingPulse+2)^(0+128),w	;volatile
  2063  0FE1  1C03               	skipc
  2064  0FE2  0F22               	incfsz	(_countingPulse+2)^(0+128),w	;volatile
  2065  0FE3  02D6               	subwf	(_currentClothLength+2)^(0+128),f	;volatile
  2066  0FE4  0823               	movf	(_countingPulse+3)^(0+128),w	;volatile
  2067  0FE5  1C03               	skipc
  2068  0FE6  0F23               	incfsz	(_countingPulse+3)^(0+128),w	;volatile
  2069  0FE7  02D7               	subwf	(_currentClothLength+3)^(0+128),f	;volatile
  2070                           
  2071                           ;newmain.c: 117:                 metrePerMinCounter += 1;
  2072  0FE8  3001               	movlw	1
  2073  0FE9  07A4               	addwf	_metrePerMinCounter^(0+128),f	;volatile
  2074  0FEA  3000               	movlw	0
  2075  0FEB  1803               	skipnc
  2076  0FEC  3001               	movlw	1
  2077  0FED  07A5               	addwf	(_metrePerMinCounter+1)^(0+128),f	;volatile
  2078  0FEE  3000               	movlw	0
  2079  0FEF  1803               	skipnc
  2080  0FF0  3001               	movlw	1
  2081  0FF1  07A6               	addwf	(_metrePerMinCounter+2)^(0+128),f	;volatile
  2082  0FF2  3000               	movlw	0
  2083  0FF3  1803               	skipnc
  2084  0FF4  3001               	movlw	1
  2085  0FF5  07A7               	addwf	(_metrePerMinCounter+3)^(0+128),f	;volatile
  2086                           
  2087                           ;newmain.c: 118:                 encoderSkipCount = 0;
  2088  0FF6  01B2               	clrf	_encoderSkipCount^(0+128)	;volatile
  2089  0FF7  01B3               	clrf	(_encoderSkipCount+1)^(0+128)	;volatile
  2090  0FF8                     l3698:
  2091                           
  2092                           ;newmain.c: 120:             changed = 0;
  2093  0FF8  1283               	bcf	3,5	;RP0=0, select bank0
  2094  0FF9  1053               	bcf	_changed/(0+8),_changed& (0+7)	;volatile
  2095  0FFA                     l3700:
  2096                           
  2097                           ;newmain.c: 122:         encoder();
  2098  0FFA  120A  118A  27C6  120A  158A  	fcall	_encoder
  2099  0FFF  2CD5               	goto	l3616
  2100  1000                     __end_of_main:
  2101                           
  2102                           	psect	text1
  2103  135B                     __ptext1:	
  2104 ;; *************** function _viewMenu *****************
  2105 ;; Defined at:
  2106 ;;		line 236 in file "newmain.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;		None
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;		None
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2115 ;; Tracked objects:
  2116 ;;		On entry : 300/100
  2117 ;;		On exit  : 300/100
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2120 ;;      Params:         0       0       0       0       0
  2121 ;;      Locals:         0       0       0       4       0
  2122 ;;      Temps:          0       0       0       1       0
  2123 ;;      Totals:         0       0       0       5       0
  2124 ;;Total ram usage:        5 bytes
  2125 ;; Hardware stack levels used: 1
  2126 ;; Hardware stack levels required when called: 4
  2127 ;; This function calls:
  2128 ;;		___lldiv
  2129 ;;		_display1
  2130 ;;		_display2
  2131 ;;		_led
  2132 ;;		_upSwitch
  2133 ;; This function is called by:
  2134 ;;		_main
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           
  2139                           ;psect for function _viewMenu
  2140  135B                     _viewMenu:
  2141                           
  2142                           ;newmain.c: 238:     if(viewMenuPointer == 0 && editMenuPointer == 0){
  2143                           
  2144                           ;incstack = 0
  2145                           ; Regs used in _viewMenu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2146  135B  083D               	movf	_viewMenuPointer^(0+128),w	;volatile
  2147  135C  1D03               	btfss	3,2
  2148  135D  2BB0               	goto	l3584
  2149  135E  083C               	movf	_editMenuPointer^(0+128),w	;volatile
  2150  135F  1D03               	btfss	3,2
  2151  1360  2BB0               	goto	l3584
  2152                           
  2153                           ;newmain.c: 239:         display1(currentClothLength/10);
  2154  1361  3000               	movlw	0
  2155  1362  1283               	bcf	3,5	;RP0=0, select bank0
  2156  1363  00C2               	movwf	___lldiv@divisor+3
  2157  1364  3000               	movlw	0
  2158  1365  00C1               	movwf	___lldiv@divisor+2
  2159  1366  3000               	movlw	0
  2160  1367  00C0               	movwf	___lldiv@divisor+1
  2161  1368  300A               	movlw	10
  2162  1369  00BF               	movwf	___lldiv@divisor
  2163  136A  1683               	bsf	3,5	;RP0=1, select bank1
  2164  136B  0857               	movf	(_currentClothLength+3)^(0+128),w	;volatile
  2165  136C  1283               	bcf	3,5	;RP0=0, select bank0
  2166  136D  00C6               	movwf	___lldiv@dividend+3
  2167  136E  1683               	bsf	3,5	;RP0=1, select bank1
  2168  136F  0856               	movf	(_currentClothLength+2)^(0+128),w	;volatile
  2169  1370  1283               	bcf	3,5	;RP0=0, select bank0
  2170  1371  00C5               	movwf	___lldiv@dividend+2
  2171  1372  1683               	bsf	3,5	;RP0=1, select bank1
  2172  1373  0855               	movf	(_currentClothLength+1)^(0+128),w	;volatile
  2173  1374  1283               	bcf	3,5	;RP0=0, select bank0
  2174  1375  00C4               	movwf	___lldiv@dividend+1
  2175  1376  1683               	bsf	3,5	;RP0=1, select bank1
  2176  1377  0854               	movf	_currentClothLength^(0+128),w	;volatile
  2177  1378  1283               	bcf	3,5	;RP0=0, select bank0
  2178  1379  00C3               	movwf	___lldiv@dividend
  2179  137A  160A  118A  218F  160A  118A  	fcall	___lldiv
  2180  137F  0842               	movf	?___lldiv+3,w
  2181  1380  1683               	bsf	3,5	;RP0=1, select bank3
  2182  1381  1703               	bsf	3,6	;RP1=1, select bank3
  2183  1382  0094               	movwf	(_viewMenu$920+3)^(0+384)
  2184  1383  1283               	bcf	3,5	;RP0=0, select bank0
  2185  1384  1303               	bcf	3,6	;RP1=0, select bank0
  2186  1385  0841               	movf	?___lldiv+2,w
  2187  1386  1683               	bsf	3,5	;RP0=1, select bank3
  2188  1387  1703               	bsf	3,6	;RP1=1, select bank3
  2189  1388  0093               	movwf	(_viewMenu$920+2)^(0+384)
  2190  1389  1283               	bcf	3,5	;RP0=0, select bank0
  2191  138A  1303               	bcf	3,6	;RP1=0, select bank0
  2192  138B  0840               	movf	?___lldiv+1,w
  2193  138C  1683               	bsf	3,5	;RP0=1, select bank3
  2194  138D  1703               	bsf	3,6	;RP1=1, select bank3
  2195  138E  0092               	movwf	(_viewMenu$920+1)^(0+384)
  2196  138F  1283               	bcf	3,5	;RP0=0, select bank0
  2197  1390  1303               	bcf	3,6	;RP1=0, select bank0
  2198  1391  083F               	movf	?___lldiv,w
  2199  1392  1683               	bsf	3,5	;RP0=1, select bank3
  2200  1393  1703               	bsf	3,6	;RP1=1, select bank3
  2201  1394  0091               	movwf	_viewMenu$920^(0+384)
  2202                           
  2203                           ;newmain.c: 239:         display1(currentClothLength/10);
  2204  1395  0814               	movf	(_viewMenu$920+3)^(0+384),w
  2205  1396  1283               	bcf	3,5	;RP0=0, select bank0
  2206  1397  1303               	bcf	3,6	;RP1=0, select bank0
  2207  1398  00D2               	movwf	display1@value+3
  2208  1399  1683               	bsf	3,5	;RP0=1, select bank3
  2209  139A  1703               	bsf	3,6	;RP1=1, select bank3
  2210  139B  0813               	movf	(_viewMenu$920+2)^(0+384),w
  2211  139C  1283               	bcf	3,5	;RP0=0, select bank0
  2212  139D  1303               	bcf	3,6	;RP1=0, select bank0
  2213  139E  00D1               	movwf	display1@value+2
  2214  139F  1683               	bsf	3,5	;RP0=1, select bank3
  2215  13A0  1703               	bsf	3,6	;RP1=1, select bank3
  2216  13A1  0812               	movf	(_viewMenu$920+1)^(0+384),w
  2217  13A2  1283               	bcf	3,5	;RP0=0, select bank0
  2218  13A3  1303               	bcf	3,6	;RP1=0, select bank0
  2219  13A4  00D0               	movwf	display1@value+1
  2220  13A5  1683               	bsf	3,5	;RP0=1, select bank3
  2221  13A6  1703               	bsf	3,6	;RP1=1, select bank3
  2222  13A7  0811               	movf	_viewMenu$920^(0+384),w
  2223  13A8  1283               	bcf	3,5	;RP0=0, select bank0
  2224  13A9  1303               	bcf	3,6	;RP1=0, select bank0
  2225  13AA  00CF               	movwf	display1@value
  2226  13AB  160A  118A  25FD  160A  118A  	fcall	_display1
  2227  13B0                     l3584:
  2228                           
  2229                           ;newmain.c: 241:     if(viewMenuPointer == 1 && editMenuPointer == 0){
  2230  13B0  1683               	bsf	3,5	;RP0=1, select bank1
  2231  13B1  033D               	decf	_viewMenuPointer^(0+128),w	;volatile
  2232  13B2  1D03               	btfss	3,2
  2233  13B3  2C06               	goto	l3592
  2234  13B4  083C               	movf	_editMenuPointer^(0+128),w	;volatile
  2235  13B5  1D03               	btfss	3,2
  2236  13B6  2C06               	goto	l3592
  2237                           
  2238                           ;newmain.c: 242:         display1(previousCurrentClothLength/10);
  2239  13B7  3000               	movlw	0
  2240  13B8  1283               	bcf	3,5	;RP0=0, select bank0
  2241  13B9  00C2               	movwf	___lldiv@divisor+3
  2242  13BA  3000               	movlw	0
  2243  13BB  00C1               	movwf	___lldiv@divisor+2
  2244  13BC  3000               	movlw	0
  2245  13BD  00C0               	movwf	___lldiv@divisor+1
  2246  13BE  300A               	movlw	10
  2247  13BF  00BF               	movwf	___lldiv@divisor
  2248  13C0  1683               	bsf	3,5	;RP0=1, select bank1
  2249  13C1  086F               	movf	(_previousCurrentClothLength+3)^(0+128),w	;volatile
  2250  13C2  1283               	bcf	3,5	;RP0=0, select bank0
  2251  13C3  00C6               	movwf	___lldiv@dividend+3
  2252  13C4  1683               	bsf	3,5	;RP0=1, select bank1
  2253  13C5  086E               	movf	(_previousCurrentClothLength+2)^(0+128),w	;volatile
  2254  13C6  1283               	bcf	3,5	;RP0=0, select bank0
  2255  13C7  00C5               	movwf	___lldiv@dividend+2
  2256  13C8  1683               	bsf	3,5	;RP0=1, select bank1
  2257  13C9  086D               	movf	(_previousCurrentClothLength+1)^(0+128),w	;volatile
  2258  13CA  1283               	bcf	3,5	;RP0=0, select bank0
  2259  13CB  00C4               	movwf	___lldiv@dividend+1
  2260  13CC  1683               	bsf	3,5	;RP0=1, select bank1
  2261  13CD  086C               	movf	_previousCurrentClothLength^(0+128),w	;volatile
  2262  13CE  1283               	bcf	3,5	;RP0=0, select bank0
  2263  13CF  00C3               	movwf	___lldiv@dividend
  2264  13D0  160A  118A  218F  160A  118A  	fcall	___lldiv
  2265  13D5  0842               	movf	?___lldiv+3,w
  2266  13D6  1683               	bsf	3,5	;RP0=1, select bank3
  2267  13D7  1703               	bsf	3,6	;RP1=1, select bank3
  2268  13D8  0094               	movwf	(_viewMenu$920+3)^(0+384)
  2269  13D9  1283               	bcf	3,5	;RP0=0, select bank0
  2270  13DA  1303               	bcf	3,6	;RP1=0, select bank0
  2271  13DB  0841               	movf	?___lldiv+2,w
  2272  13DC  1683               	bsf	3,5	;RP0=1, select bank3
  2273  13DD  1703               	bsf	3,6	;RP1=1, select bank3
  2274  13DE  0093               	movwf	(_viewMenu$920+2)^(0+384)
  2275  13DF  1283               	bcf	3,5	;RP0=0, select bank0
  2276  13E0  1303               	bcf	3,6	;RP1=0, select bank0
  2277  13E1  0840               	movf	?___lldiv+1,w
  2278  13E2  1683               	bsf	3,5	;RP0=1, select bank3
  2279  13E3  1703               	bsf	3,6	;RP1=1, select bank3
  2280  13E4  0092               	movwf	(_viewMenu$920+1)^(0+384)
  2281  13E5  1283               	bcf	3,5	;RP0=0, select bank0
  2282  13E6  1303               	bcf	3,6	;RP1=0, select bank0
  2283  13E7  083F               	movf	?___lldiv,w
  2284  13E8  1683               	bsf	3,5	;RP0=1, select bank3
  2285  13E9  1703               	bsf	3,6	;RP1=1, select bank3
  2286  13EA  0091               	movwf	_viewMenu$920^(0+384)
  2287                           
  2288                           ;newmain.c: 242:         display1(previousCurrentClothLength/10);
  2289  13EB  0814               	movf	(_viewMenu$920+3)^(0+384),w
  2290  13EC  1283               	bcf	3,5	;RP0=0, select bank0
  2291  13ED  1303               	bcf	3,6	;RP1=0, select bank0
  2292  13EE  00D2               	movwf	display1@value+3
  2293  13EF  1683               	bsf	3,5	;RP0=1, select bank3
  2294  13F0  1703               	bsf	3,6	;RP1=1, select bank3
  2295  13F1  0813               	movf	(_viewMenu$920+2)^(0+384),w
  2296  13F2  1283               	bcf	3,5	;RP0=0, select bank0
  2297  13F3  1303               	bcf	3,6	;RP1=0, select bank0
  2298  13F4  00D1               	movwf	display1@value+2
  2299  13F5  1683               	bsf	3,5	;RP0=1, select bank3
  2300  13F6  1703               	bsf	3,6	;RP1=1, select bank3
  2301  13F7  0812               	movf	(_viewMenu$920+1)^(0+384),w
  2302  13F8  1283               	bcf	3,5	;RP0=0, select bank0
  2303  13F9  1303               	bcf	3,6	;RP1=0, select bank0
  2304  13FA  00D0               	movwf	display1@value+1
  2305  13FB  1683               	bsf	3,5	;RP0=1, select bank3
  2306  13FC  1703               	bsf	3,6	;RP1=1, select bank3
  2307  13FD  0811               	movf	_viewMenu$920^(0+384),w
  2308  13FE  1283               	bcf	3,5	;RP0=0, select bank0
  2309  13FF  1303               	bcf	3,6	;RP1=0, select bank0
  2310  1400  00CF               	movwf	display1@value
  2311  1401  160A  118A  25FD  160A  118A  	fcall	_display1
  2312  1406                     l3592:
  2313                           
  2314                           ;newmain.c: 244:     if(viewMenuPointer == 2 && editMenuPointer == 0){
  2315  1406  3002               	movlw	2
  2316  1407  1683               	bsf	3,5	;RP0=1, select bank1
  2317  1408  063D               	xorwf	_viewMenuPointer^(0+128),w	;volatile
  2318  1409  1D03               	btfss	3,2
  2319  140A  2C22               	goto	l3598
  2320  140B  083C               	movf	_editMenuPointer^(0+128),w	;volatile
  2321  140C  1D03               	btfss	3,2
  2322  140D  2C22               	goto	l3598
  2323                           
  2324                           ;newmain.c: 245:         display1(resetCounter);
  2325  140E  086B               	movf	(_resetCounter+3)^(0+128),w	;volatile
  2326  140F  1283               	bcf	3,5	;RP0=0, select bank0
  2327  1410  00D2               	movwf	display1@value+3
  2328  1411  1683               	bsf	3,5	;RP0=1, select bank1
  2329  1412  086A               	movf	(_resetCounter+2)^(0+128),w	;volatile
  2330  1413  1283               	bcf	3,5	;RP0=0, select bank0
  2331  1414  00D1               	movwf	display1@value+2
  2332  1415  1683               	bsf	3,5	;RP0=1, select bank1
  2333  1416  0869               	movf	(_resetCounter+1)^(0+128),w	;volatile
  2334  1417  1283               	bcf	3,5	;RP0=0, select bank0
  2335  1418  00D0               	movwf	display1@value+1
  2336  1419  1683               	bsf	3,5	;RP0=1, select bank1
  2337  141A  0868               	movf	_resetCounter^(0+128),w	;volatile
  2338  141B  1283               	bcf	3,5	;RP0=0, select bank0
  2339  141C  00CF               	movwf	display1@value
  2340  141D  160A  118A  25FD  160A  118A  	fcall	_display1
  2341  1422                     l3598:
  2342                           
  2343                           ;newmain.c: 247:     if(viewMenuPointer == 3 && editMenuPointer == 0){
  2344  1422  3003               	movlw	3
  2345  1423  1683               	bsf	3,5	;RP0=1, select bank1
  2346  1424  063D               	xorwf	_viewMenuPointer^(0+128),w	;volatile
  2347  1425  1D03               	btfss	3,2
  2348  1426  2C38               	goto	l256
  2349  1427  083C               	movf	_editMenuPointer^(0+128),w	;volatile
  2350  1428  1D03               	btfss	3,2
  2351  1429  2C38               	goto	l256
  2352                           
  2353                           ;newmain.c: 248:         display1(hourMeter);
  2354  142A  1283               	bcf	3,5	;RP0=0, select bank0
  2355  142B  085F               	movf	_hourMeter+3,w	;volatile
  2356  142C  00D2               	movwf	display1@value+3
  2357  142D  085E               	movf	_hourMeter+2,w	;volatile
  2358  142E  00D1               	movwf	display1@value+2
  2359  142F  085D               	movf	_hourMeter+1,w	;volatile
  2360  1430  00D0               	movwf	display1@value+1
  2361  1431  085C               	movf	_hourMeter,w	;volatile
  2362  1432  00CF               	movwf	display1@value
  2363  1433  160A  118A  25FD  160A  118A  	fcall	_display1
  2364  1438                     l256:	
  2365                           ;newmain.c: 249:     }
  2366                           
  2367                           
  2368                           ;newmain.c: 250:     display2(metrePerMin);
  2369  1438  1683               	bsf	3,5	;RP0=1, select bank1
  2370  1439  082B               	movf	(_metrePerMin+3)^(0+128),w	;volatile
  2371  143A  1283               	bcf	3,5	;RP0=0, select bank0
  2372  143B  00D2               	movwf	display2@value+3
  2373  143C  1683               	bsf	3,5	;RP0=1, select bank1
  2374  143D  082A               	movf	(_metrePerMin+2)^(0+128),w	;volatile
  2375  143E  1283               	bcf	3,5	;RP0=0, select bank0
  2376  143F  00D1               	movwf	display2@value+2
  2377  1440  1683               	bsf	3,5	;RP0=1, select bank1
  2378  1441  0829               	movf	(_metrePerMin+1)^(0+128),w	;volatile
  2379  1442  1283               	bcf	3,5	;RP0=0, select bank0
  2380  1443  00D0               	movwf	display2@value+1
  2381  1444  1683               	bsf	3,5	;RP0=1, select bank1
  2382  1445  0828               	movf	_metrePerMin^(0+128),w	;volatile
  2383  1446  1283               	bcf	3,5	;RP0=0, select bank0
  2384  1447  00CF               	movwf	display2@value
  2385  1448  160A  118A  21ED  160A  118A  	fcall	_display2
  2386                           
  2387                           ;newmain.c: 251:     led();
  2388  144D  120A  158A  200B  160A  118A  	fcall	_led
  2389                           
  2390                           ;newmain.c: 253:     if(editMenuPointer == 0 && upSwitch()){
  2391  1452  1683               	bsf	3,5	;RP0=1, select bank1
  2392  1453  1303               	bcf	3,6	;RP1=0, select bank1
  2393  1454  083C               	movf	_editMenuPointer^(0+128),w	;volatile
  2394  1455  1D03               	btfss	3,2
  2395  1456  2C66               	goto	l257
  2396  1457  160A  158A  2630  160A  118A  	fcall	_upSwitch
  2397  145C  3A00               	xorlw	0
  2398  145D  1903               	skipnz
  2399  145E  2C66               	goto	l257
  2400                           
  2401                           ;newmain.c: 254:         viewMenuPointer += 1;
  2402  145F  3001               	movlw	1
  2403  1460  1683               	bsf	3,5	;RP0=1, select bank3
  2404  1461  1703               	bsf	3,6	;RP1=1, select bank3
  2405  1462  0090               	movwf	??_viewMenu^(0+384)
  2406  1463  0810               	movf	??_viewMenu^(0+384),w
  2407  1464  1303               	bcf	3,6	;RP1=0, select bank1
  2408  1465  07BD               	addwf	_viewMenuPointer^(0+128),f	;volatile
  2409  1466                     l257:	
  2410                           ;newmain.c: 255:     }
  2411                           
  2412                           
  2413                           ;newmain.c: 256:     if(viewMenuPointer == 4){
  2414  1466  3004               	movlw	4
  2415  1467  1683               	bsf	3,5	;RP0=1, select bank1
  2416  1468  063D               	xorwf	_viewMenuPointer^(0+128),w	;volatile
  2417  1469  1D03               	btfss	3,2
  2418  146A  0008               	return
  2419                           
  2420                           ;newmain.c: 257:         viewMenuPointer = 0;
  2421  146B  01BD               	clrf	_viewMenuPointer^(0+128)	;volatile
  2422  146C  0008               	return
  2423  146D                     __end_of_viewMenu:
  2424                           
  2425                           	psect	text2
  2426  080B                     __ptext2:	
  2427 ;; *************** function _led *****************
  2428 ;; Defined at:
  2429 ;;		line 523 in file "newmain.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;		None
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  value           1   21[BANK0 ] unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      void 
  2436 ;; Registers used:
  2437 ;;		wreg, status,2, status,0, pclath, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/100
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2443 ;;      Params:         0       0       0       0       0
  2444 ;;      Locals:         0       1       0       0       0
  2445 ;;      Temps:          0       2       0       0       0
  2446 ;;      Totals:         0       3       0       0       0
  2447 ;;Total ram usage:        3 bytes
  2448 ;; Hardware stack levels used: 1
  2449 ;; Hardware stack levels required when called: 3
  2450 ;; This function calls:
  2451 ;;		_dataPass
  2452 ;; This function is called by:
  2453 ;;		_viewMenu
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           
  2458                           ;psect for function _led
  2459  080B                     _led:
  2460                           
  2461                           ;newmain.c: 524:     uint8_t value = 0;
  2462                           
  2463                           ;incstack = 0
  2464                           ; Regs used in _led: [wreg+status,2+status,0+pclath+cstack]
  2465  080B  1283               	bcf	3,5	;RP0=0, select bank0
  2466  080C  1303               	bcf	3,6	;RP1=0, select bank0
  2467  080D  01B5               	clrf	led@value
  2468                           
  2469                           ;newmain.c: 526:     if(RE1){
  2470  080E  1C89               	btfss	9,1	;volatile
  2471  080F  2814               	goto	l3318
  2472                           
  2473                           ;newmain.c: 527:         value += 128;
  2474  0810  3080               	movlw	128
  2475  0811  00B3               	movwf	??_led
  2476  0812  0833               	movf	??_led,w
  2477  0813  07B5               	addwf	led@value,f
  2478  0814                     l3318:
  2479                           
  2480                           ;newmain.c: 529:     if(RE2){
  2481  0814  1D09               	btfss	9,2	;volatile
  2482  0815  281A               	goto	l3322
  2483                           
  2484                           ;newmain.c: 530:         value += 32;
  2485  0816  3020               	movlw	32
  2486  0817  00B3               	movwf	??_led
  2487  0818  0833               	movf	??_led,w
  2488  0819  07B5               	addwf	led@value,f
  2489  081A                     l3322:
  2490                           
  2491                           ;newmain.c: 532:     if(encoderFlag){
  2492  081A  1D53               	btfss	_encoderFlag/(0+8),_encoderFlag& (0+7)	;volatile
  2493  081B  2820               	goto	l3326
  2494                           
  2495                           ;newmain.c: 533:         value += 8;
  2496  081C  3008               	movlw	8
  2497  081D  00B3               	movwf	??_led
  2498  081E  0833               	movf	??_led,w
  2499  081F  07B5               	addwf	led@value,f
  2500  0820                     l3326:
  2501                           
  2502                           ;newmain.c: 535:     dataPass(value);
  2503  0820  0835               	movf	led@value,w
  2504  0821  160A  158A  26E3  120A  158A  	fcall	_dataPass
  2505                           
  2506                           ;newmain.c: 536:     RA2 = 1;
  2507  0826  1505               	bsf	5,2	;volatile
  2508                           
  2509                           ;newmain.c: 537:     RA0 = 1;
  2510  0827  1405               	bsf	5,0	;volatile
  2511                           
  2512                           ;newmain.c: 538:     RA1 = 0;
  2513  0828  1085               	bcf	5,1	;volatile
  2514                           
  2515                           ;newmain.c: 539:     RA3 = 0;
  2516  0829  1185               	bcf	5,3	;volatile
  2517                           
  2518                           ;newmain.c: 540:     _delay((unsigned long)((1)*(20000000/4000.0)));
  2519  082A  3007               	movlw	7
  2520  082B  1283               	bcf	3,5	;RP0=0, select bank0
  2521  082C  1303               	bcf	3,6	;RP1=0, select bank0
  2522  082D  00B4               	movwf	??_led+1
  2523  082E  307C               	movlw	124
  2524  082F  00B3               	movwf	??_led
  2525  0830                     u5447:
  2526  0830  0BB3               	decfsz	??_led,f
  2527  0831  2830               	goto	u5447
  2528  0832  0BB4               	decfsz	??_led+1,f
  2529  0833  2830               	goto	u5447
  2530  0834  0000               	nop
  2531  0835  0008               	return
  2532  0836                     __end_of_led:
  2533                           
  2534                           	psect	text3
  2535  11ED                     __ptext3:	
  2536 ;; *************** function _display2 *****************
  2537 ;; Defined at:
  2538 ;;		line 498 in file "newmain.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;  value           4   47[BANK0 ] unsigned long 
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;		None
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      void 
  2545 ;; Registers used:
  2546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2547 ;; Tracked objects:
  2548 ;;		On entry : 300/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2552 ;;      Params:         0       4       0       0       0
  2553 ;;      Locals:         0       0       0       0       0
  2554 ;;      Temps:          0       0       2       0       0
  2555 ;;      Totals:         0       4       2       0       0
  2556 ;;Total ram usage:        6 bytes
  2557 ;; Hardware stack levels used: 1
  2558 ;; Hardware stack levels required when called: 3
  2559 ;; This function calls:
  2560 ;;		___lldiv
  2561 ;;		___llmod
  2562 ;;		_dataPass
  2563 ;; This function is called by:
  2564 ;;		_viewMenu
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           
  2569                           ;psect for function _display2
  2570  11ED                     _display2:
  2571                           
  2572                           ;newmain.c: 500:     dataPass(segCode[value/100]);
  2573                           
  2574                           ;incstack = 0
  2575                           ; Regs used in _display2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2576  11ED  3000               	movlw	0
  2577  11EE  00C2               	movwf	___lldiv@divisor+3
  2578  11EF  3000               	movlw	0
  2579  11F0  00C1               	movwf	___lldiv@divisor+2
  2580  11F1  3000               	movlw	0
  2581  11F2  00C0               	movwf	___lldiv@divisor+1
  2582  11F3  3064               	movlw	100
  2583  11F4  00BF               	movwf	___lldiv@divisor
  2584  11F5  0852               	movf	display2@value+3,w
  2585  11F6  00C6               	movwf	___lldiv@dividend+3
  2586  11F7  0851               	movf	display2@value+2,w
  2587  11F8  00C5               	movwf	___lldiv@dividend+2
  2588  11F9  0850               	movf	display2@value+1,w
  2589  11FA  00C4               	movwf	___lldiv@dividend+1
  2590  11FB  084F               	movf	display2@value,w
  2591  11FC  00C3               	movwf	___lldiv@dividend
  2592  11FD  160A  118A  218F  160A  118A  	fcall	___lldiv
  2593  1202  083F               	movf	?___lldiv,w
  2594  1203  3EBE               	addlw	(low (_segCode| 0))& (0+255)
  2595  1204  0084               	movwf	4
  2596  1205  1383               	bcf	3,7	;select IRP bank1
  2597  1206  0800               	movf	0,w
  2598  1207  160A  158A  26E3  160A  118A  	fcall	_dataPass
  2599                           
  2600                           ;newmain.c: 501:     RA2 = 0;
  2601  120C  1105               	bcf	5,2	;volatile
  2602                           
  2603                           ;newmain.c: 502:     RA0 = 1;
  2604  120D  1405               	bsf	5,0	;volatile
  2605                           
  2606                           ;newmain.c: 503:     RA1 = 0;
  2607  120E  1085               	bcf	5,1	;volatile
  2608                           
  2609                           ;newmain.c: 504:     RA3 = 1;
  2610  120F  1585               	bsf	5,3	;volatile
  2611                           
  2612                           ;newmain.c: 505:     _delay((unsigned long)((1)*(20000000/4000.0)));
  2613  1210  3007               	movlw	7
  2614  1211  1683               	bsf	3,5	;RP0=1, select bank1
  2615  1212  1303               	bcf	3,6	;RP1=0, select bank1
  2616  1213  00E5               	movwf	(??_display2^(0+128)+1)
  2617  1214  307C               	movlw	124
  2618  1215  00E4               	movwf	??_display2^(0+128)
  2619  1216                     u5457:
  2620  1216  0BE4               	decfsz	??_display2^(0+128),f
  2621  1217  2A16               	goto	u5457
  2622  1218  0BE5               	decfsz	(??_display2^(0+128)+1),f
  2623  1219  2A16               	goto	u5457
  2624  121A  0000               	nop
  2625                           
  2626                           ;newmain.c: 507:     dataPass(segCode[(value/10)%10] | 0x20);
  2627  121B  3000               	movlw	0
  2628  121C  1683               	bsf	3,5	;RP0=1, select bank1
  2629  121D  1303               	bcf	3,6	;RP1=0, select bank1
  2630  121E  00DF               	movwf	(___llmod@divisor+3)^(0+128)
  2631  121F  3000               	movlw	0
  2632  1220  00DE               	movwf	(___llmod@divisor+2)^(0+128)
  2633  1221  3000               	movlw	0
  2634  1222  00DD               	movwf	(___llmod@divisor+1)^(0+128)
  2635  1223  300A               	movlw	10
  2636  1224  00DC               	movwf	___llmod@divisor^(0+128)
  2637  1225  3000               	movlw	0
  2638  1226  1283               	bcf	3,5	;RP0=0, select bank0
  2639  1227  00C2               	movwf	___lldiv@divisor+3
  2640  1228  3000               	movlw	0
  2641  1229  00C1               	movwf	___lldiv@divisor+2
  2642  122A  3000               	movlw	0
  2643  122B  00C0               	movwf	___lldiv@divisor+1
  2644  122C  300A               	movlw	10
  2645  122D  00BF               	movwf	___lldiv@divisor
  2646  122E  0852               	movf	display2@value+3,w
  2647  122F  00C6               	movwf	___lldiv@dividend+3
  2648  1230  0851               	movf	display2@value+2,w
  2649  1231  00C5               	movwf	___lldiv@dividend+2
  2650  1232  0850               	movf	display2@value+1,w
  2651  1233  00C4               	movwf	___lldiv@dividend+1
  2652  1234  084F               	movf	display2@value,w
  2653  1235  00C3               	movwf	___lldiv@dividend
  2654  1236  160A  118A  218F  160A  118A  	fcall	___lldiv
  2655  123B  0842               	movf	?___lldiv+3,w
  2656  123C  1683               	bsf	3,5	;RP0=1, select bank1
  2657  123D  00E3               	movwf	(___llmod@dividend+3)^(0+128)
  2658  123E  1283               	bcf	3,5	;RP0=0, select bank0
  2659  123F  0841               	movf	?___lldiv+2,w
  2660  1240  1683               	bsf	3,5	;RP0=1, select bank1
  2661  1241  00E2               	movwf	(___llmod@dividend+2)^(0+128)
  2662  1242  1283               	bcf	3,5	;RP0=0, select bank0
  2663  1243  0840               	movf	?___lldiv+1,w
  2664  1244  1683               	bsf	3,5	;RP0=1, select bank1
  2665  1245  00E1               	movwf	(___llmod@dividend+1)^(0+128)
  2666  1246  1283               	bcf	3,5	;RP0=0, select bank0
  2667  1247  083F               	movf	?___lldiv,w
  2668  1248  1683               	bsf	3,5	;RP0=1, select bank1
  2669  1249  00E0               	movwf	___llmod@dividend^(0+128)
  2670  124A  160A  118A  2087  160A  118A  	fcall	___llmod
  2671  124F  085C               	movf	?___llmod^(0+128),w
  2672  1250  3EBE               	addlw	(low (_segCode| 0))& (0+255)
  2673  1251  0084               	movwf	4
  2674  1252  1383               	bcf	3,7	;select IRP bank1
  2675  1253  0800               	movf	0,w
  2676  1254  3820               	iorlw	32
  2677  1255  160A  158A  26E3  160A  118A  	fcall	_dataPass
  2678                           
  2679                           ;newmain.c: 508:     RA2 = 1;
  2680  125A  1505               	bsf	5,2	;volatile
  2681                           
  2682                           ;newmain.c: 509:     RA0 = 0;
  2683  125B  1005               	bcf	5,0	;volatile
  2684                           
  2685                           ;newmain.c: 510:     RA1 = 0;
  2686  125C  1085               	bcf	5,1	;volatile
  2687                           
  2688                           ;newmain.c: 511:     RA3 = 1;
  2689  125D  1585               	bsf	5,3	;volatile
  2690                           
  2691                           ;newmain.c: 512:     _delay((unsigned long)((1)*(20000000/4000.0)));
  2692  125E  3007               	movlw	7
  2693  125F  1683               	bsf	3,5	;RP0=1, select bank1
  2694  1260  1303               	bcf	3,6	;RP1=0, select bank1
  2695  1261  00E5               	movwf	(??_display2^(0+128)+1)
  2696  1262  307C               	movlw	124
  2697  1263  00E4               	movwf	??_display2^(0+128)
  2698  1264                     u5467:
  2699  1264  0BE4               	decfsz	??_display2^(0+128),f
  2700  1265  2A64               	goto	u5467
  2701  1266  0BE5               	decfsz	(??_display2^(0+128)+1),f
  2702  1267  2A64               	goto	u5467
  2703  1268  0000               	nop
  2704                           
  2705                           ;newmain.c: 514:     dataPass(segCode[value%10]);
  2706  1269  3000               	movlw	0
  2707  126A  1683               	bsf	3,5	;RP0=1, select bank1
  2708  126B  1303               	bcf	3,6	;RP1=0, select bank1
  2709  126C  00DF               	movwf	(___llmod@divisor+3)^(0+128)
  2710  126D  3000               	movlw	0
  2711  126E  00DE               	movwf	(___llmod@divisor+2)^(0+128)
  2712  126F  3000               	movlw	0
  2713  1270  00DD               	movwf	(___llmod@divisor+1)^(0+128)
  2714  1271  300A               	movlw	10
  2715  1272  00DC               	movwf	___llmod@divisor^(0+128)
  2716  1273  1283               	bcf	3,5	;RP0=0, select bank0
  2717  1274  0852               	movf	display2@value+3,w
  2718  1275  1683               	bsf	3,5	;RP0=1, select bank1
  2719  1276  00E3               	movwf	(___llmod@dividend+3)^(0+128)
  2720  1277  1283               	bcf	3,5	;RP0=0, select bank0
  2721  1278  0851               	movf	display2@value+2,w
  2722  1279  1683               	bsf	3,5	;RP0=1, select bank1
  2723  127A  00E2               	movwf	(___llmod@dividend+2)^(0+128)
  2724  127B  1283               	bcf	3,5	;RP0=0, select bank0
  2725  127C  0850               	movf	display2@value+1,w
  2726  127D  1683               	bsf	3,5	;RP0=1, select bank1
  2727  127E  00E1               	movwf	(___llmod@dividend+1)^(0+128)
  2728  127F  1283               	bcf	3,5	;RP0=0, select bank0
  2729  1280  084F               	movf	display2@value,w
  2730  1281  1683               	bsf	3,5	;RP0=1, select bank1
  2731  1282  00E0               	movwf	___llmod@dividend^(0+128)
  2732  1283  160A  118A  2087  160A  118A  	fcall	___llmod
  2733  1288  085C               	movf	?___llmod^(0+128),w
  2734  1289  3EBE               	addlw	(low (_segCode| 0))& (0+255)
  2735  128A  0084               	movwf	4
  2736  128B  1383               	bcf	3,7	;select IRP bank1
  2737  128C  0800               	movf	0,w
  2738  128D  160A  158A  26E3  160A  118A  	fcall	_dataPass
  2739                           
  2740                           ;newmain.c: 515:     RA2 = 1;
  2741  1292  1505               	bsf	5,2	;volatile
  2742                           
  2743                           ;newmain.c: 516:     RA0 = 0;
  2744  1293  1005               	bcf	5,0	;volatile
  2745                           
  2746                           ;newmain.c: 517:     RA1 = 0;
  2747  1294  1085               	bcf	5,1	;volatile
  2748                           
  2749                           ;newmain.c: 518:     RA3 = 0;
  2750  1295  1185               	bcf	5,3	;volatile
  2751                           
  2752                           ;newmain.c: 519:     _delay((unsigned long)((1)*(20000000/4000.0)));
  2753  1296  3007               	movlw	7
  2754  1297  1683               	bsf	3,5	;RP0=1, select bank1
  2755  1298  1303               	bcf	3,6	;RP1=0, select bank1
  2756  1299  00E5               	movwf	(??_display2^(0+128)+1)
  2757  129A  307C               	movlw	124
  2758  129B  00E4               	movwf	??_display2^(0+128)
  2759  129C                     u5477:
  2760  129C  0BE4               	decfsz	??_display2^(0+128),f
  2761  129D  2A9C               	goto	u5477
  2762  129E  0BE5               	decfsz	(??_display2^(0+128)+1),f
  2763  129F  2A9C               	goto	u5477
  2764  12A0  0000               	nop
  2765  12A1  0008               	return
  2766  12A2                     __end_of_display2:
  2767                           
  2768                           	psect	text4
  2769  1E4C                     __ptext4:	
  2770 ;; *************** function _resetSwitch *****************
  2771 ;; Defined at:
  2772 ;;		line 635 in file "newmain.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;		None
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;		None
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      unsigned char 
  2779 ;; Registers used:
  2780 ;;		wreg, status,2
  2781 ;; Tracked objects:
  2782 ;;		On entry : 200/100
  2783 ;;		On exit  : 200/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2786 ;;      Params:         0       0       0       0       0
  2787 ;;      Locals:         0       0       0       0       0
  2788 ;;      Temps:          0       0       0       0       0
  2789 ;;      Totals:         0       0       0       0       0
  2790 ;;Total ram usage:        0 bytes
  2791 ;; Hardware stack levels used: 1
  2792 ;; Hardware stack levels required when called: 2
  2793 ;; This function calls:
  2794 ;;		Nothing
  2795 ;; This function is called by:
  2796 ;;		_main
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           
  2801                           ;psect for function _resetSwitch
  2802  1E4C                     _resetSwitch:
  2803                           
  2804                           ;newmain.c: 637:     if(RD2 == 1 && resetFlag == 1){
  2805                           
  2806                           ;incstack = 0
  2807                           ; Regs used in _resetSwitch: [wreg+status,2]
  2808  1E4C  1283               	bcf	3,5	;RP0=0, select bank0
  2809  1E4D  1908               	btfsc	8,2	;volatile
  2810  1E4E  1DD3               	btfss	_resetFlag/(0+8),_resetFlag& (0+7)	;volatile
  2811  1E4F  2E53               	goto	l377
  2812                           
  2813                           ;newmain.c: 638:         resetFlag = 0;
  2814  1E50  11D3               	bcf	_resetFlag/(0+8),_resetFlag& (0+7)	;volatile
  2815                           
  2816                           ;newmain.c: 639:         return 1;
  2817  1E51  3001               	movlw	1
  2818  1E52  0008               	return
  2819  1E53                     l377:	
  2820                           ;newmain.c: 640:     }
  2821                           
  2822                           
  2823                           ;newmain.c: 641:     if(RD2 == 0){
  2824  1E53  1908               	btfsc	8,2	;volatile
  2825  1E54  2E58               	goto	l2754
  2826                           
  2827                           ;newmain.c: 642:         resetFlag = 1;
  2828  1E55  15D3               	bsf	_resetFlag/(0+8),_resetFlag& (0+7)	;volatile
  2829                           
  2830                           ;newmain.c: 643:         skipCount = 0;
  2831  1E56  1683               	bsf	3,5	;RP0=1, select bank1
  2832  1E57  01B8               	clrf	_skipCount^(0+128)	;volatile
  2833  1E58                     l2754:
  2834                           
  2835                           ;newmain.c: 645:     return 0;
  2836  1E58  3000               	movlw	0
  2837  1E59  0008               	return
  2838  1E5A                     __end_of_resetSwitch:
  2839                           
  2840                           	psect	text5
  2841  1F4D                     __ptext5:	
  2842 ;; *************** function _initializer *****************
  2843 ;; Defined at:
  2844 ;;		line 126 in file "newmain.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;		None
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;		None
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2
  2853 ;; Tracked objects:
  2854 ;;		On entry : B00/0
  2855 ;;		On exit  : B00/100
  2856 ;;		Unchanged: 800/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2858 ;;      Params:         0       0       0       0       0
  2859 ;;      Locals:         0       0       0       0       0
  2860 ;;      Temps:          0       0       0       0       0
  2861 ;;      Totals:         0       0       0       0       0
  2862 ;;Total ram usage:        0 bytes
  2863 ;; Hardware stack levels used: 1
  2864 ;; Hardware stack levels required when called: 2
  2865 ;; This function calls:
  2866 ;;		Nothing
  2867 ;; This function is called by:
  2868 ;;		_main
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           
  2873                           ;psect for function _initializer
  2874  1F4D                     _initializer:
  2875                           
  2876                           ;newmain.c: 131:     ANSEL = 0;
  2877                           
  2878                           ;incstack = 0
  2879                           ; Regs used in _initializer: [wreg+status,2]
  2880  1F4D  1683               	bsf	3,5	;RP0=1, select bank3
  2881  1F4E  1703               	bsf	3,6	;RP1=1, select bank3
  2882  1F4F  0188               	clrf	8	;volatile
  2883                           
  2884                           ;newmain.c: 132:     ANSELH = 0;
  2885  1F50  0189               	clrf	9	;volatile
  2886                           
  2887                           ;newmain.c: 133:     nRBPU = 0;
  2888  1F51  1303               	bcf	3,6	;RP1=0, select bank1
  2889  1F52  1381               	bcf	1,7	;volatile
  2890                           
  2891                           ;newmain.c: 134:     INTEDG = 1;
  2892  1F53  1701               	bsf	1,6	;volatile
  2893                           
  2894                           ;newmain.c: 135:     GIE=1;
  2895  1F54  178B               	bsf	11,7	;volatile
  2896                           
  2897                           ;newmain.c: 136:     PEIE=1;
  2898  1F55  170B               	bsf	11,6	;volatile
  2899                           
  2900                           ;newmain.c: 137:     INTE = 1;
  2901  1F56  160B               	bsf	11,4	;volatile
  2902                           
  2903                           ;newmain.c: 138:     INTF=0;
  2904  1F57  108B               	bcf	11,1	;volatile
  2905                           
  2906                           ;newmain.c: 139:     RBIE = 1;
  2907  1F58  158B               	bsf	11,3	;volatile
  2908                           
  2909                           ;newmain.c: 140:     RBIF = 0;
  2910  1F59  100B               	bcf	11,0	;volatile
  2911                           
  2912                           ;newmain.c: 141:     WPUB = 0xF1;
  2913  1F5A  30F1               	movlw	241
  2914  1F5B  0095               	movwf	21	;volatile
  2915                           
  2916                           ;newmain.c: 142:     IOCB = 0xC0;
  2917  1F5C  30C0               	movlw	192
  2918  1F5D  0096               	movwf	22	;volatile
  2919                           
  2920                           ;newmain.c: 143:     T1CON = 0x20;
  2921  1F5E  3020               	movlw	32
  2922  1F5F  1283               	bcf	3,5	;RP0=0, select bank0
  2923  1F60  0090               	movwf	16	;volatile
  2924                           
  2925                           ;newmain.c: 144:     TMR1H=0x0B;
  2926  1F61  300B               	movlw	11
  2927  1F62  008F               	movwf	15	;volatile
  2928                           
  2929                           ;newmain.c: 145:     TMR1L=0xE5;
  2930  1F63  30E5               	movlw	229
  2931  1F64  008E               	movwf	14	;volatile
  2932                           
  2933                           ;newmain.c: 146:     TMR1IE=1;
  2934  1F65  1683               	bsf	3,5	;RP0=1, select bank1
  2935  1F66  140C               	bsf	12,0	;volatile
  2936                           
  2937                           ;newmain.c: 147:     TMR1ON = 1;
  2938  1F67  1283               	bcf	3,5	;RP0=0, select bank0
  2939  1F68  1410               	bsf	16,0	;volatile
  2940                           
  2941                           ;newmain.c: 148:     TRISA = 0xF0;
  2942  1F69  30F0               	movlw	240
  2943  1F6A  1683               	bsf	3,5	;RP0=1, select bank1
  2944  1F6B  0085               	movwf	5	;volatile
  2945                           
  2946                           ;newmain.c: 149:     TRISB = 0xF1;
  2947  1F6C  30F1               	movlw	241
  2948  1F6D  0086               	movwf	6	;volatile
  2949                           
  2950                           ;newmain.c: 150:     TRISC = 0xFF;
  2951  1F6E  30FF               	movlw	255
  2952  1F6F  0087               	movwf	7	;volatile
  2953                           
  2954                           ;newmain.c: 151:     TRISD = 0xFF;
  2955  1F70  30FF               	movlw	255
  2956  1F71  0088               	movwf	8	;volatile
  2957                           
  2958                           ;newmain.c: 152:     TRISE = 0x01;
  2959  1F72  3001               	movlw	1
  2960  1F73  0089               	movwf	9	;volatile
  2961  1F74  0008               	return
  2962  1F75                     __end_of_initializer:
  2963                           
  2964                           	psect	text6
  2965  07C6                     __ptext6:	
  2966 ;; *************** function _encoder *****************
  2967 ;; Defined at:
  2968 ;;		line 720 in file "newmain.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;		None
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;		None
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      void 
  2975 ;; Registers used:
  2976 ;;		wreg, status,2, status,0
  2977 ;; Tracked objects:
  2978 ;;		On entry : 300/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2982 ;;      Params:         0       0       0       0       0
  2983 ;;      Locals:         0       0       0       0       0
  2984 ;;      Temps:          0       0       0       0       0
  2985 ;;      Totals:         0       0       0       0       0
  2986 ;;Total ram usage:        0 bytes
  2987 ;; Hardware stack levels used: 1
  2988 ;; Hardware stack levels required when called: 2
  2989 ;; This function calls:
  2990 ;;		Nothing
  2991 ;; This function is called by:
  2992 ;;		_main
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           
  2997                           ;psect for function _encoder
  2998  07C6                     _encoder:
  2999                           
  3000                           ;newmain.c: 736:     if(currentClothLength > (1000010UL)){
  3001                           
  3002                           ;incstack = 0
  3003                           ; Regs used in _encoder: [wreg+status,2+status,0]
  3004  07C6  1683               	bsf	3,5	;RP0=1, select bank1
  3005  07C7  0857               	movf	(_currentClothLength+3)^(0+128),w	;volatile
  3006  07C8  1D03               	btfss	3,2
  3007  07C9  2FD8               	goto	l2798
  3008  07CA  300F               	movlw	15
  3009  07CB  0256               	subwf	(_currentClothLength+2)^(0+128),w	;volatile
  3010  07CC  1D03               	skipz
  3011  07CD  2FD6               	goto	u3533
  3012  07CE  3042               	movlw	66
  3013  07CF  0255               	subwf	(_currentClothLength+1)^(0+128),w	;volatile
  3014  07D0  1D03               	skipz
  3015  07D1  2FD6               	goto	u3533
  3016  07D2  304B               	movlw	75
  3017  07D3  0254               	subwf	_currentClothLength^(0+128),w	;volatile
  3018  07D4  1D03               	skipz
  3019  07D5  2FD6               	goto	u3533
  3020  07D6                     u3533:
  3021  07D6  1C03               	btfss	3,0
  3022  07D7  2FE2               	goto	l2800
  3023  07D8                     l2798:
  3024                           
  3025                           ;newmain.c: 737:         currentClothLength = 0;
  3026  07D8  3000               	movlw	0
  3027  07D9  1683               	bsf	3,5	;RP0=1, select bank1
  3028  07DA  1303               	bcf	3,6	;RP1=0, select bank1
  3029  07DB  00D7               	movwf	(_currentClothLength+3)^(0+128)	;volatile
  3030  07DC  3000               	movlw	0
  3031  07DD  00D6               	movwf	(_currentClothLength+2)^(0+128)	;volatile
  3032  07DE  3000               	movlw	0
  3033  07DF  00D5               	movwf	(_currentClothLength+1)^(0+128)	;volatile
  3034  07E0  3000               	movlw	0
  3035  07E1  00D4               	movwf	_currentClothLength^(0+128)	;volatile
  3036  07E2                     l2800:
  3037                           
  3038                           ;newmain.c: 739:     if(currentClothLength > (999999UL)){
  3039  07E2  1683               	bsf	3,5	;RP0=1, select bank1
  3040  07E3  1303               	bcf	3,6	;RP1=0, select bank1
  3041  07E4  0857               	movf	(_currentClothLength+3)^(0+128),w	;volatile
  3042  07E5  1D03               	btfss	3,2
  3043  07E6  2FF5               	goto	l2802
  3044  07E7  300F               	movlw	15
  3045  07E8  0256               	subwf	(_currentClothLength+2)^(0+128),w	;volatile
  3046  07E9  1D03               	skipz
  3047  07EA  2FF3               	goto	u3543
  3048  07EB  3042               	movlw	66
  3049  07EC  0255               	subwf	(_currentClothLength+1)^(0+128),w	;volatile
  3050  07ED  1D03               	skipz
  3051  07EE  2FF3               	goto	u3543
  3052  07EF  3040               	movlw	64
  3053  07F0  0254               	subwf	_currentClothLength^(0+128),w	;volatile
  3054  07F1  1D03               	skipz
  3055  07F2  2FF3               	goto	u3543
  3056  07F3                     u3543:
  3057  07F3  1C03               	btfss	3,0
  3058  07F4  0008               	return
  3059  07F5                     l2802:
  3060                           
  3061                           ;newmain.c: 740:         currentClothLength = (999999UL);
  3062  07F5  3000               	movlw	0
  3063  07F6  1683               	bsf	3,5	;RP0=1, select bank1
  3064  07F7  1303               	bcf	3,6	;RP1=0, select bank1
  3065  07F8  00D7               	movwf	(_currentClothLength+3)^(0+128)	;volatile
  3066  07F9  300F               	movlw	15
  3067  07FA  00D6               	movwf	(_currentClothLength+2)^(0+128)	;volatile
  3068  07FB  3042               	movlw	66
  3069  07FC  00D5               	movwf	(_currentClothLength+1)^(0+128)	;volatile
  3070  07FD  303F               	movlw	63
  3071  07FE  00D4               	movwf	_currentClothLength^(0+128)	;volatile
  3072  07FF  0008               	return
  3073  0800                     __end_of_encoder:
  3074                           
  3075                           	psect	text7
  3076  0040                     __ptext7:	
  3077 ;; *************** function _eepromRead *****************
  3078 ;; Defined at:
  3079 ;;		line 156 in file "newmain.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;		None
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;		None
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0, pclath, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : B00/100
  3090 ;;		On exit  : 300/100
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3093 ;;      Params:         0       0       0       0       0
  3094 ;;      Locals:         0       0       0       0       0
  3095 ;;      Temps:          0       0       0      14       0
  3096 ;;      Totals:         0       0       0      14       0
  3097 ;;Total ram usage:       14 bytes
  3098 ;; Hardware stack levels used: 1
  3099 ;; Hardware stack levels required when called: 3
  3100 ;; This function calls:
  3101 ;;		___lldiv
  3102 ;;		___lmul
  3103 ;;		___wmul
  3104 ;;		_eeprom_read
  3105 ;; This function is called by:
  3106 ;;		_main
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           
  3111                           ;psect for function _eepromRead
  3112  0040                     _eepromRead:
  3113                           
  3114                           ;newmain.c: 158:     actualClothLength = (unsigned int)eeprom_read(0x00)*(10000UL) + (un
      +                          signed int)eeprom_read(0x01)*100 + (unsigned int)eeprom_read(0x02);
  3115                           
  3116                           ;incstack = 0
  3117                           ; Regs used in _eepromRead: [wreg+status,2+status,0+pclath+cstack]
  3118  0040  3002               	movlw	2
  3119  0041  160A  158A  2689  120A  118A  	fcall	_eeprom_read
  3120  0046  1683               	bsf	3,5	;RP0=1, select bank3
  3121  0047  0090               	movwf	??_eepromRead^(0+384)
  3122  0048  0191               	clrf	(??_eepromRead^(0+384)+1)
  3123  0049  0192               	clrf	(??_eepromRead^(0+384)+2)
  3124  004A  0193               	clrf	(??_eepromRead^(0+384)+3)
  3125  004B  3001               	movlw	1
  3126  004C  160A  158A  2689  120A  118A  	fcall	_eeprom_read
  3127  0051  1683               	bsf	3,5	;RP0=1, select bank3
  3128  0052  0094               	movwf	(??_eepromRead+4)^(0+384)
  3129  0053  0195               	clrf	((??_eepromRead+4)^(0+384)+1)
  3130  0054  0814               	movf	(??_eepromRead+4)^(0+384),w
  3131  0055  1283               	bcf	3,5	;RP0=0, select bank0
  3132  0056  1303               	bcf	3,6	;RP1=0, select bank0
  3133  0057  00B2               	movwf	___wmul@multiplier
  3134  0058  1683               	bsf	3,5	;RP0=1, select bank3
  3135  0059  1703               	bsf	3,6	;RP1=1, select bank3
  3136  005A  0815               	movf	(??_eepromRead+5)^(0+384),w
  3137  005B  1283               	bcf	3,5	;RP0=0, select bank0
  3138  005C  1303               	bcf	3,6	;RP1=0, select bank0
  3139  005D  00B3               	movwf	___wmul@multiplier+1
  3140  005E  3064               	movlw	100
  3141  005F  00B4               	movwf	___wmul@multiplicand
  3142  0060  3000               	movlw	0
  3143  0061  00B5               	movwf	___wmul@multiplicand+1
  3144  0062  160A  158A  26C2  120A  118A  	fcall	___wmul
  3145  0067  0832               	movf	?___wmul,w
  3146  0068  1683               	bsf	3,5	;RP0=1, select bank3
  3147  0069  1703               	bsf	3,6	;RP1=1, select bank3
  3148  006A  0096               	movwf	(??_eepromRead+6)^(0+384)
  3149  006B  1283               	bcf	3,5	;RP0=0, select bank0
  3150  006C  1303               	bcf	3,6	;RP1=0, select bank0
  3151  006D  0833               	movf	?___wmul+1,w
  3152  006E  1683               	bsf	3,5	;RP0=1, select bank3
  3153  006F  1703               	bsf	3,6	;RP1=1, select bank3
  3154  0070  0097               	movwf	((??_eepromRead+6)^(0+384)+1)
  3155  0071  0198               	clrf	((??_eepromRead+6)^(0+384)+2)
  3156  0072  0199               	clrf	((??_eepromRead+6)^(0+384)+3)
  3157  0073  3000               	movlw	0
  3158  0074  160A  158A  2689  120A  118A  	fcall	_eeprom_read
  3159  0079  1683               	bsf	3,5	;RP0=1, select bank3
  3160  007A  009A               	movwf	(??_eepromRead+10)^(0+384)
  3161  007B  019B               	clrf	((??_eepromRead+10)^(0+384)+1)
  3162  007C  019C               	clrf	((??_eepromRead+10)^(0+384)+2)
  3163  007D  019D               	clrf	((??_eepromRead+10)^(0+384)+3)
  3164  007E  081D               	movf	(??_eepromRead+13)^(0+384),w
  3165  007F  1283               	bcf	3,5	;RP0=0, select bank0
  3166  0080  1303               	bcf	3,6	;RP1=0, select bank0
  3167  0081  00B5               	movwf	___lmul@multiplier+3
  3168  0082  1683               	bsf	3,5	;RP0=1, select bank3
  3169  0083  1703               	bsf	3,6	;RP1=1, select bank3
  3170  0084  081C               	movf	(??_eepromRead+12)^(0+384),w
  3171  0085  1283               	bcf	3,5	;RP0=0, select bank0
  3172  0086  1303               	bcf	3,6	;RP1=0, select bank0
  3173  0087  00B4               	movwf	___lmul@multiplier+2
  3174  0088  1683               	bsf	3,5	;RP0=1, select bank3
  3175  0089  1703               	bsf	3,6	;RP1=1, select bank3
  3176  008A  081B               	movf	(??_eepromRead+11)^(0+384),w
  3177  008B  1283               	bcf	3,5	;RP0=0, select bank0
  3178  008C  1303               	bcf	3,6	;RP1=0, select bank0
  3179  008D  00B3               	movwf	___lmul@multiplier+1
  3180  008E  1683               	bsf	3,5	;RP0=1, select bank3
  3181  008F  1703               	bsf	3,6	;RP1=1, select bank3
  3182  0090  081A               	movf	(??_eepromRead+10)^(0+384),w
  3183  0091  1283               	bcf	3,5	;RP0=0, select bank0
  3184  0092  1303               	bcf	3,6	;RP1=0, select bank0
  3185  0093  00B2               	movwf	___lmul@multiplier
  3186  0094  3000               	movlw	0
  3187  0095  00B9               	movwf	___lmul@multiplicand+3
  3188  0096  3000               	movlw	0
  3189  0097  00B8               	movwf	___lmul@multiplicand+2
  3190  0098  3027               	movlw	39
  3191  0099  00B7               	movwf	___lmul@multiplicand+1
  3192  009A  3010               	movlw	16
  3193  009B  00B6               	movwf	___lmul@multiplicand
  3194  009C  160A  158A  2775  120A  118A  	fcall	___lmul
  3195  00A1  0832               	movf	?___lmul,w
  3196  00A2  1683               	bsf	3,5	;RP0=1, select bank3
  3197  00A3  1703               	bsf	3,6	;RP1=1, select bank3
  3198  00A4  0796               	addwf	(??_eepromRead+6)^(0+384),f
  3199  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  3200  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  3201  00A7  0833               	movf	?___lmul+1,w
  3202  00A8  1803               	skipnc
  3203  00A9  0F33               	incfsz	?___lmul+1,w
  3204  00AA  28AC               	goto	u4680
  3205  00AB  28AF               	goto	u4681
  3206  00AC                     u4680:
  3207  00AC  1683               	bsf	3,5	;RP0=1, select bank3
  3208  00AD  1703               	bsf	3,6	;RP1=1, select bank3
  3209  00AE  0797               	addwf	((??_eepromRead+6)^(0+384)+1),f
  3210  00AF                     u4681:
  3211  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  3212  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  3213  00B1  0834               	movf	?___lmul+2,w
  3214  00B2  1803               	skipnc
  3215  00B3  0F34               	incfsz	?___lmul+2,w
  3216  00B4  28B6               	goto	u4682
  3217  00B5  28B9               	goto	u4683
  3218  00B6                     u4682:
  3219  00B6  1683               	bsf	3,5	;RP0=1, select bank3
  3220  00B7  1703               	bsf	3,6	;RP1=1, select bank3
  3221  00B8  0798               	addwf	((??_eepromRead+6)^(0+384)+2),f
  3222  00B9                     u4683:
  3223  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  3224  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  3225  00BB  0835               	movf	?___lmul+3,w
  3226  00BC  1803               	skipnc
  3227  00BD  0A35               	incf	?___lmul+3,w
  3228  00BE  1683               	bsf	3,5	;RP0=1, select bank3
  3229  00BF  1703               	bsf	3,6	;RP1=1, select bank3
  3230  00C0  0799               	addwf	((??_eepromRead+6)^(0+384)+3),f
  3231  00C1  0816               	movf	(??_eepromRead+6)^(0+384),w
  3232  00C2  0790               	addwf	??_eepromRead^(0+384),f
  3233  00C3  0817               	movf	(??_eepromRead+7)^(0+384),w
  3234  00C4  1803               	skipnc
  3235  00C5  0F17               	incfsz	(??_eepromRead+7)^(0+384),w
  3236  00C6  28C8               	goto	u4690
  3237  00C7  28C9               	goto	u4691
  3238  00C8                     u4690:
  3239  00C8  0791               	addwf	(??_eepromRead^(0+384)+1),f
  3240  00C9                     u4691:
  3241  00C9  0818               	movf	(??_eepromRead+8)^(0+384),w
  3242  00CA  1803               	skipnc
  3243  00CB  0F18               	incfsz	(??_eepromRead+8)^(0+384),w
  3244  00CC  28CE               	goto	u4692
  3245  00CD  28CF               	goto	u4693
  3246  00CE                     u4692:
  3247  00CE  0792               	addwf	(??_eepromRead^(0+384)+2),f
  3248  00CF                     u4693:
  3249  00CF  0819               	movf	(??_eepromRead+9)^(0+384),w
  3250  00D0  1803               	skipnc
  3251  00D1  0A19               	incf	(??_eepromRead+9)^(0+384),w
  3252  00D2  0793               	addwf	(??_eepromRead^(0+384)+3),f
  3253  00D3  0813               	movf	(??_eepromRead+3)^(0+384),w
  3254  00D4  1303               	bcf	3,6	;RP1=0, select bank1
  3255  00D5  00D3               	movwf	(_actualClothLength+3)^(0+128)	;volatile
  3256  00D6  1703               	bsf	3,6	;RP1=1, select bank3
  3257  00D7  0812               	movf	(??_eepromRead+2)^(0+384),w
  3258  00D8  1303               	bcf	3,6	;RP1=0, select bank1
  3259  00D9  00D2               	movwf	(_actualClothLength+2)^(0+128)	;volatile
  3260  00DA  1703               	bsf	3,6	;RP1=1, select bank3
  3261  00DB  0811               	movf	(??_eepromRead+1)^(0+384),w
  3262  00DC  1303               	bcf	3,6	;RP1=0, select bank1
  3263  00DD  00D1               	movwf	(_actualClothLength+1)^(0+128)	;volatile
  3264  00DE  1703               	bsf	3,6	;RP1=1, select bank3
  3265  00DF  0810               	movf	??_eepromRead^(0+384),w
  3266  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  3267  00E1  00D0               	movwf	_actualClothLength^(0+128)	;volatile
  3268                           
  3269                           ;newmain.c: 159:     warningClothLength = (unsigned int)eeprom_read(0x03)*(10000UL) + (u
      +                          nsigned int)eeprom_read(0x04)*100 + (unsigned int)eeprom_read(0x05);
  3270  00E2  3005               	movlw	5
  3271  00E3  160A  158A  2689  120A  118A  	fcall	_eeprom_read
  3272  00E8  1683               	bsf	3,5	;RP0=1, select bank3
  3273  00E9  0090               	movwf	??_eepromRead^(0+384)
  3274  00EA  0191               	clrf	(??_eepromRead^(0+384)+1)
  3275  00EB  0192               	clrf	(??_eepromRead^(0+384)+2)
  3276  00EC  0193               	clrf	(??_eepromRead^(0+384)+3)
  3277  00ED  3004               	movlw	4
  3278  00EE  160A  158A  2689  120A  118A  	fcall	_eeprom_read
  3279  00F3  1683               	bsf	3,5	;RP0=1, select bank3
  3280  00F4  0094               	movwf	(??_eepromRead+4)^(0+384)
  3281  00F5  0195               	clrf	((??_eepromRead+4)^(0+384)+1)
  3282  00F6  0814               	movf	(??_eepromRead+4)^(0+384),w
  3283  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  3284  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  3285  00F9  00B2               	movwf	___wmul@multiplier
  3286  00FA  1683               	bsf	3,5	;RP0=1, select bank3
  3287  00FB  1703               	bsf	3,6	;RP1=1, select bank3
  3288  00FC  0815               	movf	(??_eepromRead+5)^(0+384),w
  3289  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  3290  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  3291  00FF  00B3               	movwf	___wmul@multiplier+1
  3292  0100  3064               	movlw	100
  3293  0101  00B4               	movwf	___wmul@multiplicand
  3294  0102  3000               	movlw	0
  3295  0103  00B5               	movwf	___wmul@multiplicand+1
  3296  0104  160A  158A  26C2  120A  118A  	fcall	___wmul
  3297  0109  0832               	movf	?___wmul,w
  3298  010A  1683               	bsf	3,5	;RP0=1, select bank3
  3299  010B  1703               	bsf	3,6	;RP1=1, select bank3
  3300  010C  0096               	movwf	(??_eepromRead+6)^(0+384)
  3301  010D  1283               	bcf	3,5	;RP0=0, select bank0
  3302  010E  1303               	bcf	3,6	;RP1=0, select bank0
  3303  010F  0833               	movf	?___wmul+1,w
  3304  0110  1683               	bsf	3,5	;RP0=1, select bank3
  3305  0111  1703               	bsf	3,6	;RP1=1, select bank3
  3306  0112  0097               	movwf	((??_eepromRead+6)^(0+384)+1)
  3307  0113  0198               	clrf	((??_eepromRead+6)^(0+384)+2)
  3308  0114  0199               	clrf	((??_eepromRead+6)^(0+384)+3)
  3309  0115  3003               	movlw	3
  3310  0116  160A  158A  2689  120A  118A  	fcall	_eeprom_read
  3311  011B  1683               	bsf	3,5	;RP0=1, select bank3
  3312  011C  009A               	movwf	(??_eepromRead+10)^(0+384)
  3313  011D  019B               	clrf	((??_eepromRead+10)^(0+384)+1)
  3314  011E  019C               	clrf	((??_eepromRead+10)^(0+384)+2)
  3315  011F  019D               	clrf	((??_eepromRead+10)^(0+384)+3)
  3316  0120  081D               	movf	(??_eepromRead+13)^(0+384),w
  3317  0121  1283               	bcf	3,5	;RP0=0, select bank0
  3318  0122  1303               	bcf	3,6	;RP1=0, select bank0
  3319  0123  00B5               	movwf	___lmul@multiplier+3
  3320  0124  1683               	bsf	3,5	;RP0=1, select bank3
  3321  0125  1703               	bsf	3,6	;RP1=1, select bank3
  3322  0126  081C               	movf	(??_eepromRead+12)^(0+384),w
  3323  0127  1283               	bcf	3,5	;RP0=0, select bank0
  3324  0128  1303               	bcf	3,6	;RP1=0, select bank0
  3325  0129  00B4               	movwf	___lmul@multiplier+2
  3326  012A  1683               	bsf	3,5	;RP0=1, select bank3
  3327  012B  1703               	bsf	3,6	;RP1=1, select bank3
  3328  012C  081B               	movf	(??_eepromRead+11)^(0+384),w
  3329  012D  1283               	bcf	3,5	;RP0=0, select bank0
  3330  012E  1303               	bcf	3,6	;RP1=0, select bank0
  3331  012F  00B3               	movwf	___lmul@multiplier+1
  3332  0130  1683               	bsf	3,5	;RP0=1, select bank3
  3333  0131  1703               	bsf	3,6	;RP1=1, select bank3
  3334  0132  081A               	movf	(??_eepromRead+10)^(0+384),w
  3335  0133  1283               	bcf	3,5	;RP0=0, select bank0
  3336  0134  1303               	bcf	3,6	;RP1=0, select bank0
  3337  0135  00B2               	movwf	___lmul@multiplier
  3338  0136  3000               	movlw	0
  3339  0137  00B9               	movwf	___lmul@multiplicand+3
  3340  0138  3000               	movlw	0
  3341  0139  00B8               	movwf	___lmul@multiplicand+2
  3342  013A  3027               	movlw	39
  3343  013B  00B7               	movwf	___lmul@multiplicand+1
  3344  013C  3010               	movlw	16
  3345  013D  00B6               	movwf	___lmul@multiplicand
  3346  013E  160A  158A  2775  120A  118A  	fcall	___lmul
  3347  0143  0832               	movf	?___lmul,w
  3348  0144  1683               	bsf	3,5	;RP0=1, select bank3
  3349  0145  1703               	bsf	3,6	;RP1=1, select bank3
  3350  0146  0796               	addwf	(??_eepromRead+6)^(0+384),f
  3351  0147  1283               	bcf	3,5	;RP0=0, select bank0
  3352  0148  1303               	bcf	3,6	;RP1=0, select bank0
  3353  0149  0833               	movf	?___lmul+1,w
  3354  014A  1803               	skipnc
  3355  014B  0F33               	incfsz	?___lmul+1,w
  3356  014C  294E               	goto	u4700
  3357  014D  2951               	goto	u4701
  3358  014E                     u4700:
  3359  014E  1683               	bsf	3,5	;RP0=1, select bank3
  3360  014F  1703               	bsf	3,6	;RP1=1, select bank3
  3361  0150  0797               	addwf	((??_eepromRead+6)^(0+384)+1),f
  3362  0151                     u4701:
  3363  0151  1283               	bcf	3,5	;RP0=0, select bank0
  3364  0152  1303               	bcf	3,6	;RP1=0, select bank0
  3365  0153  0834               	movf	?___lmul+2,w
  3366  0154  1803               	skipnc
  3367  0155  0F34               	incfsz	?___lmul+2,w
  3368  0156  2958               	goto	u4702
  3369  0157  295B               	goto	u4703
  3370  0158                     u4702:
  3371  0158  1683               	bsf	3,5	;RP0=1, select bank3
  3372  0159  1703               	bsf	3,6	;RP1=1, select bank3
  3373  015A  0798               	addwf	((??_eepromRead+6)^(0+384)+2),f
  3374  015B                     u4703:
  3375  015B  1283               	bcf	3,5	;RP0=0, select bank0
  3376  015C  1303               	bcf	3,6	;RP1=0, select bank0
  3377  015D  0835               	movf	?___lmul+3,w
  3378  015E  1803               	skipnc
  3379  015F  0A35               	incf	?___lmul+3,w
  3380  0160  1683               	bsf	3,5	;RP0=1, select bank3
  3381  0161  1703               	bsf	3,6	;RP1=1, select bank3
  3382  0162  0799               	addwf	((??_eepromRead+6)^(0+384)+3),f
  3383  0163  0816               	movf	(??_eepromRead+6)^(0+384),w
  3384  0164  0790               	addwf	??_eepromRead^(0+384),f
  3385  0165  0817               	movf	(??_eepromRead+7)^(0+384),w
  3386  0166  1803               	skipnc
  3387  0167  0F17               	incfsz	(??_eepromRead+7)^(0+384),w
  3388  0168  296A               	goto	u4710
  3389  0169  296B               	goto	u4711
  3390  016A                     u4710:
  3391  016A  0791               	addwf	(??_eepromRead^(0+384)+1),f
  3392  016B                     u4711:
  3393  016B  0818               	movf	(??_eepromRead+8)^(0+384),w
  3394  016C  1803               	skipnc
  3395  016D  0F18               	incfsz	(??_eepromRead+8)^(0+384),w
  3396  016E  2970               	goto	u4712
  3397  016F  2971               	goto	u4713
  3398  0170                     u4712:
  3399  0170  0792               	addwf	(??_eepromRead^(0+384)+2),f
  3400  0171                     u4713:
  3401  0171  0819               	movf	(??_eepromRead+9)^(0+384),w
  3402  0172  1803               	skipnc
  3403  0173  0A19               	incf	(??_eepromRead+9)^(0+384),w
  3404  0174  0793               	addwf	(??_eepromRead^(0+384)+3),f
  3405  0175  0813               	movf	(??_eepromRead+3)^(0+384),w
  3406  0176  1303               	bcf	3,6	;RP1=0, select bank1
  3407  0177  00CB               	movwf	(_warningClothLength+3)^(0+128)	;volatile
  3408  0178  1703               	bsf	3,6	;RP1=1, select bank3
  3409  0179  0812               	movf	(??_eepromRead+2)^(0+384),w
  3410  017A  1303               	bcf	3,6	;RP1=0, select bank1
  3411  017B  00CA               	movwf	(_warningClothLength+2)^(0+128)	;volatile
  3412  017C  1703               	bsf	3,6	;RP1=1, select bank3
  3413  017D  0811               	movf	(??_eepromRead+1)^(0+384),w
  3414  017E  1303               	bcf	3,6	;RP1=0, select bank1
  3415  017F  00C9               	movwf	(_warningClothLength+1)^(0+128)	;volatile
  3416  0180  1703               	bsf	3,6	;RP1=1, select bank3
  3417  0181  0810               	movf	??_eepromRead^(0+384),w
  3418  0182  1303               	bcf	3,6	;RP1=0, select bank1
  3419  0183  00C8               	movwf	_warningClothLength^(0+128)	;volatile
  3420                           
  3421                           ;newmain.c: 160:     circumference = (unsigned int)eeprom_read(0x06)*(10000UL) + (unsign
      +                          ed int)eeprom_read(0x07)*100 + (unsigned int)eeprom_read(0x08);
  3422  0184  3008               	movlw	8
  3423  0185  160A  158A  2689  120A  118A  	fcall	_eeprom_read
  3424  018A  1683               	bsf	3,5	;RP0=1, select bank3
  3425  018B  0090               	movwf	??_eepromRead^(0+384)
  3426  018C  0191               	clrf	(??_eepromRead^(0+384)+1)
  3427  018D  0192               	clrf	(??_eepromRead^(0+384)+2)
  3428  018E  0193               	clrf	(??_eepromRead^(0+384)+3)
  3429  018F  3007               	movlw	7
  3430  0190  160A  158A  2689  120A  118A  	fcall	_eeprom_read
  3431  0195  1683               	bsf	3,5	;RP0=1, select bank3
  3432  0196  0094               	movwf	(??_eepromRead+4)^(0+384)
  3433  0197  0195               	clrf	((??_eepromRead+4)^(0+384)+1)
  3434  0198  0814               	movf	(??_eepromRead+4)^(0+384),w
  3435  0199  1283               	bcf	3,5	;RP0=0, select bank0
  3436  019A  1303               	bcf	3,6	;RP1=0, select bank0
  3437  019B  00B2               	movwf	___wmul@multiplier
  3438  019C  1683               	bsf	3,5	;RP0=1, select bank3
  3439  019D  1703               	bsf	3,6	;RP1=1, select bank3
  3440  019E  0815               	movf	(??_eepromRead+5)^(0+384),w
  3441  019F  1283               	bcf	3,5	;RP0=0, select bank0
  3442  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  3443  01A1  00B3               	movwf	___wmul@multiplier+1
  3444  01A2  3064               	movlw	100
  3445  01A3  00B4               	movwf	___wmul@multiplicand
  3446  01A4  3000               	movlw	0
  3447  01A5  00B5               	movwf	___wmul@multiplicand+1
  3448  01A6  160A  158A  26C2  120A  118A  	fcall	___wmul
  3449  01AB  0832               	movf	?___wmul,w
  3450  01AC  1683               	bsf	3,5	;RP0=1, select bank3
  3451  01AD  1703               	bsf	3,6	;RP1=1, select bank3
  3452  01AE  0096               	movwf	(??_eepromRead+6)^(0+384)
  3453  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  3454  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  3455  01B1  0833               	movf	?___wmul+1,w
  3456  01B2  1683               	bsf	3,5	;RP0=1, select bank3
  3457  01B3  1703               	bsf	3,6	;RP1=1, select bank3
  3458  01B4  0097               	movwf	((??_eepromRead+6)^(0+384)+1)
  3459  01B5  0198               	clrf	((??_eepromRead+6)^(0+384)+2)
  3460  01B6  0199               	clrf	((??_eepromRead+6)^(0+384)+3)
  3461  01B7  3006               	movlw	6
  3462  01B8  160A  158A  2689  120A  118A  	fcall	_eeprom_read
  3463  01BD  1683               	bsf	3,5	;RP0=1, select bank3
  3464  01BE  009A               	movwf	(??_eepromRead+10)^(0+384)
  3465  01BF  019B               	clrf	((??_eepromRead+10)^(0+384)+1)
  3466  01C0  019C               	clrf	((??_eepromRead+10)^(0+384)+2)
  3467  01C1  019D               	clrf	((??_eepromRead+10)^(0+384)+3)
  3468  01C2  081D               	movf	(??_eepromRead+13)^(0+384),w
  3469  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  3470  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  3471  01C5  00B5               	movwf	___lmul@multiplier+3
  3472  01C6  1683               	bsf	3,5	;RP0=1, select bank3
  3473  01C7  1703               	bsf	3,6	;RP1=1, select bank3
  3474  01C8  081C               	movf	(??_eepromRead+12)^(0+384),w
  3475  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  3476  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  3477  01CB  00B4               	movwf	___lmul@multiplier+2
  3478  01CC  1683               	bsf	3,5	;RP0=1, select bank3
  3479  01CD  1703               	bsf	3,6	;RP1=1, select bank3
  3480  01CE  081B               	movf	(??_eepromRead+11)^(0+384),w
  3481  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  3482  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  3483  01D1  00B3               	movwf	___lmul@multiplier+1
  3484  01D2  1683               	bsf	3,5	;RP0=1, select bank3
  3485  01D3  1703               	bsf	3,6	;RP1=1, select bank3
  3486  01D4  081A               	movf	(??_eepromRead+10)^(0+384),w
  3487  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  3488  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  3489  01D7  00B2               	movwf	___lmul@multiplier
  3490  01D8  3000               	movlw	0
  3491  01D9  00B9               	movwf	___lmul@multiplicand+3
  3492  01DA  3000               	movlw	0
  3493  01DB  00B8               	movwf	___lmul@multiplicand+2
  3494  01DC  3027               	movlw	39
  3495  01DD  00B7               	movwf	___lmul@multiplicand+1
  3496  01DE  3010               	movlw	16
  3497  01DF  00B6               	movwf	___lmul@multiplicand
  3498  01E0  160A  158A  2775  120A  118A  	fcall	___lmul
  3499  01E5  0832               	movf	?___lmul,w
  3500  01E6  1683               	bsf	3,5	;RP0=1, select bank3
  3501  01E7  1703               	bsf	3,6	;RP1=1, select bank3
  3502  01E8  0796               	addwf	(??_eepromRead+6)^(0+384),f
  3503  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  3504  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  3505  01EB  0833               	movf	?___lmul+1,w
  3506  01EC  1803               	skipnc
  3507  01ED  0F33               	incfsz	?___lmul+1,w
  3508  01EE  29F0               	goto	u4720
  3509  01EF  29F3               	goto	u4721
  3510  01F0                     u4720:
  3511  01F0  1683               	bsf	3,5	;RP0=1, select bank3
  3512  01F1  1703               	bsf	3,6	;RP1=1, select bank3
  3513  01F2  0797               	addwf	((??_eepromRead+6)^(0+384)+1),f
  3514  01F3                     u4721:
  3515  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  3516  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  3517  01F5  0834               	movf	?___lmul+2,w
  3518  01F6  1803               	skipnc
  3519  01F7  0F34               	incfsz	?___lmul+2,w
  3520  01F8  29FA               	goto	u4722
  3521  01F9  29FD               	goto	u4723
  3522  01FA                     u4722:
  3523  01FA  1683               	bsf	3,5	;RP0=1, select bank3
  3524  01FB  1703               	bsf	3,6	;RP1=1, select bank3
  3525  01FC  0798               	addwf	((??_eepromRead+6)^(0+384)+2),f
  3526  01FD                     u4723:
  3527  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  3528  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  3529  01FF  0835               	movf	?___lmul+3,w
  3530  0200  1803               	skipnc
  3531  0201  0A35               	incf	?___lmul+3,w
  3532  0202  1683               	bsf	3,5	;RP0=1, select bank3
  3533  0203  1703               	bsf	3,6	;RP1=1, select bank3
  3534  0204  0799               	addwf	((??_eepromRead+6)^(0+384)+3),f
  3535  0205  0816               	movf	(??_eepromRead+6)^(0+384),w
  3536  0206  0790               	addwf	??_eepromRead^(0+384),f
  3537  0207  0817               	movf	(??_eepromRead+7)^(0+384),w
  3538  0208  1803               	skipnc
  3539  0209  0F17               	incfsz	(??_eepromRead+7)^(0+384),w
  3540  020A  2A0C               	goto	u4730
  3541  020B  2A0D               	goto	u4731
  3542  020C                     u4730:
  3543  020C  0791               	addwf	(??_eepromRead^(0+384)+1),f
  3544  020D                     u4731:
  3545  020D  0818               	movf	(??_eepromRead+8)^(0+384),w
  3546  020E  1803               	skipnc
  3547  020F  0F18               	incfsz	(??_eepromRead+8)^(0+384),w
  3548  0210  2A12               	goto	u4732
  3549  0211  2A13               	goto	u4733
  3550  0212                     u4732:
  3551  0212  0792               	addwf	(??_eepromRead^(0+384)+2),f
  3552  0213                     u4733:
  3553  0213  0819               	movf	(??_eepromRead+9)^(0+384),w
  3554  0214  1803               	skipnc
  3555  0215  0A19               	incf	(??_eepromRead+9)^(0+384),w
  3556  0216  0793               	addwf	(??_eepromRead^(0+384)+3),f
  3557  0217  0813               	movf	(??_eepromRead+3)^(0+384),w
  3558  0218  1303               	bcf	3,6	;RP1=0, select bank1
  3559  0219  00DB               	movwf	(_circumference+3)^(0+128)	;volatile
  3560  021A  1703               	bsf	3,6	;RP1=1, select bank3
  3561  021B  0812               	movf	(??_eepromRead+2)^(0+384),w
  3562  021C  1303               	bcf	3,6	;RP1=0, select bank1
  3563  021D  00DA               	movwf	(_circumference+2)^(0+128)	;volatile
  3564  021E  1703               	bsf	3,6	;RP1=1, select bank3
  3565  021F  0811               	movf	(??_eepromRead+1)^(0+384),w
  3566  0220  1303               	bcf	3,6	;RP1=0, select bank1
  3567  0221  00D9               	movwf	(_circumference+1)^(0+128)	;volatile
  3568  0222  1703               	bsf	3,6	;RP1=1, select bank3
  3569  0223  0810               	movf	??_eepromRead^(0+384),w
  3570  0224  1303               	bcf	3,6	;RP1=0, select bank1
  3571  0225  00D8               	movwf	_circumference^(0+128)	;volatile
  3572                           
  3573                           ;newmain.c: 161:     pulse = (unsigned int)eeprom_read(0x09)*(10000UL) + (unsigned int)e
      +                          eprom_read(0x0A)*100 + (unsigned int)eeprom_read(0x0B);
  3574  0226  300B               	movlw	11
  3575  0227  160A  158A  2689  120A  118A  	fcall	_eeprom_read
  3576  022C  1683               	bsf	3,5	;RP0=1, select bank3
  3577  022D  0090               	movwf	??_eepromRead^(0+384)
  3578  022E  0191               	clrf	(??_eepromRead^(0+384)+1)
  3579  022F  0192               	clrf	(??_eepromRead^(0+384)+2)
  3580  0230  0193               	clrf	(??_eepromRead^(0+384)+3)
  3581  0231  300A               	movlw	10
  3582  0232  160A  158A  2689  120A  118A  	fcall	_eeprom_read
  3583  0237  1683               	bsf	3,5	;RP0=1, select bank3
  3584  0238  0094               	movwf	(??_eepromRead+4)^(0+384)
  3585  0239  0195               	clrf	((??_eepromRead+4)^(0+384)+1)
  3586  023A  0814               	movf	(??_eepromRead+4)^(0+384),w
  3587  023B  1283               	bcf	3,5	;RP0=0, select bank0
  3588  023C  1303               	bcf	3,6	;RP1=0, select bank0
  3589  023D  00B2               	movwf	___wmul@multiplier
  3590  023E  1683               	bsf	3,5	;RP0=1, select bank3
  3591  023F  1703               	bsf	3,6	;RP1=1, select bank3
  3592  0240  0815               	movf	(??_eepromRead+5)^(0+384),w
  3593  0241  1283               	bcf	3,5	;RP0=0, select bank0
  3594  0242  1303               	bcf	3,6	;RP1=0, select bank0
  3595  0243  00B3               	movwf	___wmul@multiplier+1
  3596  0244  3064               	movlw	100
  3597  0245  00B4               	movwf	___wmul@multiplicand
  3598  0246  3000               	movlw	0
  3599  0247  00B5               	movwf	___wmul@multiplicand+1
  3600  0248  160A  158A  26C2  120A  118A  	fcall	___wmul
  3601  024D  0832               	movf	?___wmul,w
  3602  024E  1683               	bsf	3,5	;RP0=1, select bank3
  3603  024F  1703               	bsf	3,6	;RP1=1, select bank3
  3604  0250  0096               	movwf	(??_eepromRead+6)^(0+384)
  3605  0251  1283               	bcf	3,5	;RP0=0, select bank0
  3606  0252  1303               	bcf	3,6	;RP1=0, select bank0
  3607  0253  0833               	movf	?___wmul+1,w
  3608  0254  1683               	bsf	3,5	;RP0=1, select bank3
  3609  0255  1703               	bsf	3,6	;RP1=1, select bank3
  3610  0256  0097               	movwf	((??_eepromRead+6)^(0+384)+1)
  3611  0257  0198               	clrf	((??_eepromRead+6)^(0+384)+2)
  3612  0258  0199               	clrf	((??_eepromRead+6)^(0+384)+3)
  3613  0259  3009               	movlw	9
  3614  025A  160A  158A  2689  120A  118A  	fcall	_eeprom_read
  3615  025F  1683               	bsf	3,5	;RP0=1, select bank3
  3616  0260  009A               	movwf	(??_eepromRead+10)^(0+384)
  3617  0261  019B               	clrf	((??_eepromRead+10)^(0+384)+1)
  3618  0262  019C               	clrf	((??_eepromRead+10)^(0+384)+2)
  3619  0263  019D               	clrf	((??_eepromRead+10)^(0+384)+3)
  3620  0264  081D               	movf	(??_eepromRead+13)^(0+384),w
  3621  0265  1283               	bcf	3,5	;RP0=0, select bank0
  3622  0266  1303               	bcf	3,6	;RP1=0, select bank0
  3623  0267  00B5               	movwf	___lmul@multiplier+3
  3624  0268  1683               	bsf	3,5	;RP0=1, select bank3
  3625  0269  1703               	bsf	3,6	;RP1=1, select bank3
  3626  026A  081C               	movf	(??_eepromRead+12)^(0+384),w
  3627  026B  1283               	bcf	3,5	;RP0=0, select bank0
  3628  026C  1303               	bcf	3,6	;RP1=0, select bank0
  3629  026D  00B4               	movwf	___lmul@multiplier+2
  3630  026E  1683               	bsf	3,5	;RP0=1, select bank3
  3631  026F  1703               	bsf	3,6	;RP1=1, select bank3
  3632  0270  081B               	movf	(??_eepromRead+11)^(0+384),w
  3633  0271  1283               	bcf	3,5	;RP0=0, select bank0
  3634  0272  1303               	bcf	3,6	;RP1=0, select bank0
  3635  0273  00B3               	movwf	___lmul@multiplier+1
  3636  0274  1683               	bsf	3,5	;RP0=1, select bank3
  3637  0275  1703               	bsf	3,6	;RP1=1, select bank3
  3638  0276  081A               	movf	(??_eepromRead+10)^(0+384),w
  3639  0277  1283               	bcf	3,5	;RP0=0, select bank0
  3640  0278  1303               	bcf	3,6	;RP1=0, select bank0
  3641  0279  00B2               	movwf	___lmul@multiplier
  3642  027A  3000               	movlw	0
  3643  027B  00B9               	movwf	___lmul@multiplicand+3
  3644  027C  3000               	movlw	0
  3645  027D  00B8               	movwf	___lmul@multiplicand+2
  3646  027E  3027               	movlw	39
  3647  027F  00B7               	movwf	___lmul@multiplicand+1
  3648  0280  3010               	movlw	16
  3649  0281  00B6               	movwf	___lmul@multiplicand
  3650  0282  160A  158A  2775  120A  118A  	fcall	___lmul
  3651  0287  0832               	movf	?___lmul,w
  3652  0288  1683               	bsf	3,5	;RP0=1, select bank3
  3653  0289  1703               	bsf	3,6	;RP1=1, select bank3
  3654  028A  0796               	addwf	(??_eepromRead+6)^(0+384),f
  3655  028B  1283               	bcf	3,5	;RP0=0, select bank0
  3656  028C  1303               	bcf	3,6	;RP1=0, select bank0
  3657  028D  0833               	movf	?___lmul+1,w
  3658  028E  1803               	skipnc
  3659  028F  0F33               	incfsz	?___lmul+1,w
  3660  0290  2A92               	goto	u4740
  3661  0291  2A95               	goto	u4741
  3662  0292                     u4740:
  3663  0292  1683               	bsf	3,5	;RP0=1, select bank3
  3664  0293  1703               	bsf	3,6	;RP1=1, select bank3
  3665  0294  0797               	addwf	((??_eepromRead+6)^(0+384)+1),f
  3666  0295                     u4741:
  3667  0295  1283               	bcf	3,5	;RP0=0, select bank0
  3668  0296  1303               	bcf	3,6	;RP1=0, select bank0
  3669  0297  0834               	movf	?___lmul+2,w
  3670  0298  1803               	skipnc
  3671  0299  0F34               	incfsz	?___lmul+2,w
  3672  029A  2A9C               	goto	u4742
  3673  029B  2A9F               	goto	u4743
  3674  029C                     u4742:
  3675  029C  1683               	bsf	3,5	;RP0=1, select bank3
  3676  029D  1703               	bsf	3,6	;RP1=1, select bank3
  3677  029E  0798               	addwf	((??_eepromRead+6)^(0+384)+2),f
  3678  029F                     u4743:
  3679  029F  1283               	bcf	3,5	;RP0=0, select bank0
  3680  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  3681  02A1  0835               	movf	?___lmul+3,w
  3682  02A2  1803               	skipnc
  3683  02A3  0A35               	incf	?___lmul+3,w
  3684  02A4  1683               	bsf	3,5	;RP0=1, select bank3
  3685  02A5  1703               	bsf	3,6	;RP1=1, select bank3
  3686  02A6  0799               	addwf	((??_eepromRead+6)^(0+384)+3),f
  3687  02A7  0816               	movf	(??_eepromRead+6)^(0+384),w
  3688  02A8  0790               	addwf	??_eepromRead^(0+384),f
  3689  02A9  0817               	movf	(??_eepromRead+7)^(0+384),w
  3690  02AA  1803               	skipnc
  3691  02AB  0F17               	incfsz	(??_eepromRead+7)^(0+384),w
  3692  02AC  2AAE               	goto	u4750
  3693  02AD  2AAF               	goto	u4751
  3694  02AE                     u4750:
  3695  02AE  0791               	addwf	(??_eepromRead^(0+384)+1),f
  3696  02AF                     u4751:
  3697  02AF  0818               	movf	(??_eepromRead+8)^(0+384),w
  3698  02B0  1803               	skipnc
  3699  02B1  0F18               	incfsz	(??_eepromRead+8)^(0+384),w
  3700  02B2  2AB4               	goto	u4752
  3701  02B3  2AB5               	goto	u4753
  3702  02B4                     u4752:
  3703  02B4  0792               	addwf	(??_eepromRead^(0+384)+2),f
  3704  02B5                     u4753:
  3705  02B5  0819               	movf	(??_eepromRead+9)^(0+384),w
  3706  02B6  1803               	skipnc
  3707  02B7  0A19               	incf	(??_eepromRead+9)^(0+384),w
  3708  02B8  0793               	addwf	(??_eepromRead^(0+384)+3),f
  3709  02B9  0813               	movf	(??_eepromRead+3)^(0+384),w
  3710  02BA  1303               	bcf	3,6	;RP1=0, select bank1
  3711  02BB  00CF               	movwf	(_pulse+3)^(0+128)	;volatile
  3712  02BC  1703               	bsf	3,6	;RP1=1, select bank3
  3713  02BD  0812               	movf	(??_eepromRead+2)^(0+384),w
  3714  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  3715  02BF  00CE               	movwf	(_pulse+2)^(0+128)	;volatile
  3716  02C0  1703               	bsf	3,6	;RP1=1, select bank3
  3717  02C1  0811               	movf	(??_eepromRead+1)^(0+384),w
  3718  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  3719  02C3  00CD               	movwf	(_pulse+1)^(0+128)	;volatile
  3720  02C4  1703               	bsf	3,6	;RP1=1, select bank3
  3721  02C5  0810               	movf	??_eepromRead^(0+384),w
  3722  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  3723  02C7  00CC               	movwf	_pulse^(0+128)	;volatile
  3724                           
  3725                           ;newmain.c: 163:     currentClothLength = (unsigned int)eeprom_read(0x0C)* (10000UL) + (
      +                          unsigned int)eeprom_read(0x0D)*100 + (unsigned int)eeprom_read(0x0E);
  3726  02C8  300E               	movlw	14
  3727  02C9  160A  158A  2689  120A  118A  	fcall	_eeprom_read
  3728  02CE  1683               	bsf	3,5	;RP0=1, select bank3
  3729  02CF  0090               	movwf	??_eepromRead^(0+384)
  3730  02D0  0191               	clrf	(??_eepromRead^(0+384)+1)
  3731  02D1  0192               	clrf	(??_eepromRead^(0+384)+2)
  3732  02D2  0193               	clrf	(??_eepromRead^(0+384)+3)
  3733  02D3  300D               	movlw	13
  3734  02D4  160A  158A  2689  120A  118A  	fcall	_eeprom_read
  3735  02D9  1683               	bsf	3,5	;RP0=1, select bank3
  3736  02DA  0094               	movwf	(??_eepromRead+4)^(0+384)
  3737  02DB  0195               	clrf	((??_eepromRead+4)^(0+384)+1)
  3738  02DC  0814               	movf	(??_eepromRead+4)^(0+384),w
  3739  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  3740  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  3741  02DF  00B2               	movwf	___wmul@multiplier
  3742  02E0  1683               	bsf	3,5	;RP0=1, select bank3
  3743  02E1  1703               	bsf	3,6	;RP1=1, select bank3
  3744  02E2  0815               	movf	(??_eepromRead+5)^(0+384),w
  3745  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  3746  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  3747  02E5  00B3               	movwf	___wmul@multiplier+1
  3748  02E6  3064               	movlw	100
  3749  02E7  00B4               	movwf	___wmul@multiplicand
  3750  02E8  3000               	movlw	0
  3751  02E9  00B5               	movwf	___wmul@multiplicand+1
  3752  02EA  160A  158A  26C2  120A  118A  	fcall	___wmul
  3753  02EF  0832               	movf	?___wmul,w
  3754  02F0  1683               	bsf	3,5	;RP0=1, select bank3
  3755  02F1  1703               	bsf	3,6	;RP1=1, select bank3
  3756  02F2  0096               	movwf	(??_eepromRead+6)^(0+384)
  3757  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  3758  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  3759  02F5  0833               	movf	?___wmul+1,w
  3760  02F6  1683               	bsf	3,5	;RP0=1, select bank3
  3761  02F7  1703               	bsf	3,6	;RP1=1, select bank3
  3762  02F8  0097               	movwf	((??_eepromRead+6)^(0+384)+1)
  3763  02F9  0198               	clrf	((??_eepromRead+6)^(0+384)+2)
  3764  02FA  0199               	clrf	((??_eepromRead+6)^(0+384)+3)
  3765  02FB  300C               	movlw	12
  3766  02FC  160A  158A  2689  120A  118A  	fcall	_eeprom_read
  3767  0301  1683               	bsf	3,5	;RP0=1, select bank3
  3768  0302  009A               	movwf	(??_eepromRead+10)^(0+384)
  3769  0303  019B               	clrf	((??_eepromRead+10)^(0+384)+1)
  3770  0304  019C               	clrf	((??_eepromRead+10)^(0+384)+2)
  3771  0305  019D               	clrf	((??_eepromRead+10)^(0+384)+3)
  3772  0306  081D               	movf	(??_eepromRead+13)^(0+384),w
  3773  0307  1283               	bcf	3,5	;RP0=0, select bank0
  3774  0308  1303               	bcf	3,6	;RP1=0, select bank0
  3775  0309  00B5               	movwf	___lmul@multiplier+3
  3776  030A  1683               	bsf	3,5	;RP0=1, select bank3
  3777  030B  1703               	bsf	3,6	;RP1=1, select bank3
  3778  030C  081C               	movf	(??_eepromRead+12)^(0+384),w
  3779  030D  1283               	bcf	3,5	;RP0=0, select bank0
  3780  030E  1303               	bcf	3,6	;RP1=0, select bank0
  3781  030F  00B4               	movwf	___lmul@multiplier+2
  3782  0310  1683               	bsf	3,5	;RP0=1, select bank3
  3783  0311  1703               	bsf	3,6	;RP1=1, select bank3
  3784  0312  081B               	movf	(??_eepromRead+11)^(0+384),w
  3785  0313  1283               	bcf	3,5	;RP0=0, select bank0
  3786  0314  1303               	bcf	3,6	;RP1=0, select bank0
  3787  0315  00B3               	movwf	___lmul@multiplier+1
  3788  0316  1683               	bsf	3,5	;RP0=1, select bank3
  3789  0317  1703               	bsf	3,6	;RP1=1, select bank3
  3790  0318  081A               	movf	(??_eepromRead+10)^(0+384),w
  3791  0319  1283               	bcf	3,5	;RP0=0, select bank0
  3792  031A  1303               	bcf	3,6	;RP1=0, select bank0
  3793  031B  00B2               	movwf	___lmul@multiplier
  3794  031C  3000               	movlw	0
  3795  031D  00B9               	movwf	___lmul@multiplicand+3
  3796  031E  3000               	movlw	0
  3797  031F  00B8               	movwf	___lmul@multiplicand+2
  3798  0320  3027               	movlw	39
  3799  0321  00B7               	movwf	___lmul@multiplicand+1
  3800  0322  3010               	movlw	16
  3801  0323  00B6               	movwf	___lmul@multiplicand
  3802  0324  160A  158A  2775  120A  118A  	fcall	___lmul
  3803  0329  0832               	movf	?___lmul,w
  3804  032A  1683               	bsf	3,5	;RP0=1, select bank3
  3805  032B  1703               	bsf	3,6	;RP1=1, select bank3
  3806  032C  0796               	addwf	(??_eepromRead+6)^(0+384),f
  3807  032D  1283               	bcf	3,5	;RP0=0, select bank0
  3808  032E  1303               	bcf	3,6	;RP1=0, select bank0
  3809  032F  0833               	movf	?___lmul+1,w
  3810  0330  1803               	skipnc
  3811  0331  0F33               	incfsz	?___lmul+1,w
  3812  0332  2B34               	goto	u4760
  3813  0333  2B37               	goto	u4761
  3814  0334                     u4760:
  3815  0334  1683               	bsf	3,5	;RP0=1, select bank3
  3816  0335  1703               	bsf	3,6	;RP1=1, select bank3
  3817  0336  0797               	addwf	((??_eepromRead+6)^(0+384)+1),f
  3818  0337                     u4761:
  3819  0337  1283               	bcf	3,5	;RP0=0, select bank0
  3820  0338  1303               	bcf	3,6	;RP1=0, select bank0
  3821  0339  0834               	movf	?___lmul+2,w
  3822  033A  1803               	skipnc
  3823  033B  0F34               	incfsz	?___lmul+2,w
  3824  033C  2B3E               	goto	u4762
  3825  033D  2B41               	goto	u4763
  3826  033E                     u4762:
  3827  033E  1683               	bsf	3,5	;RP0=1, select bank3
  3828  033F  1703               	bsf	3,6	;RP1=1, select bank3
  3829  0340  0798               	addwf	((??_eepromRead+6)^(0+384)+2),f
  3830  0341                     u4763:
  3831  0341  1283               	bcf	3,5	;RP0=0, select bank0
  3832  0342  1303               	bcf	3,6	;RP1=0, select bank0
  3833  0343  0835               	movf	?___lmul+3,w
  3834  0344  1803               	skipnc
  3835  0345  0A35               	incf	?___lmul+3,w
  3836  0346  1683               	bsf	3,5	;RP0=1, select bank3
  3837  0347  1703               	bsf	3,6	;RP1=1, select bank3
  3838  0348  0799               	addwf	((??_eepromRead+6)^(0+384)+3),f
  3839  0349  0816               	movf	(??_eepromRead+6)^(0+384),w
  3840  034A  0790               	addwf	??_eepromRead^(0+384),f
  3841  034B  0817               	movf	(??_eepromRead+7)^(0+384),w
  3842  034C  1803               	skipnc
  3843  034D  0F17               	incfsz	(??_eepromRead+7)^(0+384),w
  3844  034E  2B50               	goto	u4770
  3845  034F  2B51               	goto	u4771
  3846  0350                     u4770:
  3847  0350  0791               	addwf	(??_eepromRead^(0+384)+1),f
  3848  0351                     u4771:
  3849  0351  0818               	movf	(??_eepromRead+8)^(0+384),w
  3850  0352  1803               	skipnc
  3851  0353  0F18               	incfsz	(??_eepromRead+8)^(0+384),w
  3852  0354  2B56               	goto	u4772
  3853  0355  2B57               	goto	u4773
  3854  0356                     u4772:
  3855  0356  0792               	addwf	(??_eepromRead^(0+384)+2),f
  3856  0357                     u4773:
  3857  0357  0819               	movf	(??_eepromRead+9)^(0+384),w
  3858  0358  1803               	skipnc
  3859  0359  0A19               	incf	(??_eepromRead+9)^(0+384),w
  3860  035A  0793               	addwf	(??_eepromRead^(0+384)+3),f
  3861  035B  0813               	movf	(??_eepromRead+3)^(0+384),w
  3862  035C  1303               	bcf	3,6	;RP1=0, select bank1
  3863  035D  00D7               	movwf	(_currentClothLength+3)^(0+128)	;volatile
  3864  035E  1703               	bsf	3,6	;RP1=1, select bank3
  3865  035F  0812               	movf	(??_eepromRead+2)^(0+384),w
  3866  0360  1303               	bcf	3,6	;RP1=0, select bank1
  3867  0361  00D6               	movwf	(_currentClothLength+2)^(0+128)	;volatile
  3868  0362  1703               	bsf	3,6	;RP1=1, select bank3
  3869  0363  0811               	movf	(??_eepromRead+1)^(0+384),w
  3870  0364  1303               	bcf	3,6	;RP1=0, select bank1
  3871  0365  00D5               	movwf	(_currentClothLength+1)^(0+128)	;volatile
  3872  0366  1703               	bsf	3,6	;RP1=1, select bank3
  3873  0367  0810               	movf	??_eepromRead^(0+384),w
  3874  0368  1303               	bcf	3,6	;RP1=0, select bank1
  3875  0369  00D4               	movwf	_currentClothLength^(0+128)	;volatile
  3876                           
  3877                           ;newmain.c: 164:     previousCurrentClothLength = (unsigned int)eeprom_read(0x11)* (1000
      +                          0UL) + (unsigned int)eeprom_read(0x12)*100 + (unsigned int)eeprom_read(0x13);
  3878  036A  3013               	movlw	19
  3879  036B  160A  158A  2689  120A  118A  	fcall	_eeprom_read
  3880  0370  1683               	bsf	3,5	;RP0=1, select bank3
  3881  0371  0090               	movwf	??_eepromRead^(0+384)
  3882  0372  0191               	clrf	(??_eepromRead^(0+384)+1)
  3883  0373  0192               	clrf	(??_eepromRead^(0+384)+2)
  3884  0374  0193               	clrf	(??_eepromRead^(0+384)+3)
  3885  0375  3012               	movlw	18
  3886  0376  160A  158A  2689  120A  118A  	fcall	_eeprom_read
  3887  037B  1683               	bsf	3,5	;RP0=1, select bank3
  3888  037C  0094               	movwf	(??_eepromRead+4)^(0+384)
  3889  037D  0195               	clrf	((??_eepromRead+4)^(0+384)+1)
  3890  037E  0814               	movf	(??_eepromRead+4)^(0+384),w
  3891  037F  1283               	bcf	3,5	;RP0=0, select bank0
  3892  0380  1303               	bcf	3,6	;RP1=0, select bank0
  3893  0381  00B2               	movwf	___wmul@multiplier
  3894  0382  1683               	bsf	3,5	;RP0=1, select bank3
  3895  0383  1703               	bsf	3,6	;RP1=1, select bank3
  3896  0384  0815               	movf	(??_eepromRead+5)^(0+384),w
  3897  0385  1283               	bcf	3,5	;RP0=0, select bank0
  3898  0386  1303               	bcf	3,6	;RP1=0, select bank0
  3899  0387  00B3               	movwf	___wmul@multiplier+1
  3900  0388  3064               	movlw	100
  3901  0389  00B4               	movwf	___wmul@multiplicand
  3902  038A  3000               	movlw	0
  3903  038B  00B5               	movwf	___wmul@multiplicand+1
  3904  038C  160A  158A  26C2  120A  118A  	fcall	___wmul
  3905  0391  0832               	movf	?___wmul,w
  3906  0392  1683               	bsf	3,5	;RP0=1, select bank3
  3907  0393  1703               	bsf	3,6	;RP1=1, select bank3
  3908  0394  0096               	movwf	(??_eepromRead+6)^(0+384)
  3909  0395  1283               	bcf	3,5	;RP0=0, select bank0
  3910  0396  1303               	bcf	3,6	;RP1=0, select bank0
  3911  0397  0833               	movf	?___wmul+1,w
  3912  0398  1683               	bsf	3,5	;RP0=1, select bank3
  3913  0399  1703               	bsf	3,6	;RP1=1, select bank3
  3914  039A  0097               	movwf	((??_eepromRead+6)^(0+384)+1)
  3915  039B  0198               	clrf	((??_eepromRead+6)^(0+384)+2)
  3916  039C  0199               	clrf	((??_eepromRead+6)^(0+384)+3)
  3917  039D  3011               	movlw	17
  3918  039E  160A  158A  2689  120A  118A  	fcall	_eeprom_read
  3919  03A3  1683               	bsf	3,5	;RP0=1, select bank3
  3920  03A4  009A               	movwf	(??_eepromRead+10)^(0+384)
  3921  03A5  019B               	clrf	((??_eepromRead+10)^(0+384)+1)
  3922  03A6  019C               	clrf	((??_eepromRead+10)^(0+384)+2)
  3923  03A7  019D               	clrf	((??_eepromRead+10)^(0+384)+3)
  3924  03A8  081D               	movf	(??_eepromRead+13)^(0+384),w
  3925  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  3926  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  3927  03AB  00B5               	movwf	___lmul@multiplier+3
  3928  03AC  1683               	bsf	3,5	;RP0=1, select bank3
  3929  03AD  1703               	bsf	3,6	;RP1=1, select bank3
  3930  03AE  081C               	movf	(??_eepromRead+12)^(0+384),w
  3931  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  3932  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  3933  03B1  00B4               	movwf	___lmul@multiplier+2
  3934  03B2  1683               	bsf	3,5	;RP0=1, select bank3
  3935  03B3  1703               	bsf	3,6	;RP1=1, select bank3
  3936  03B4  081B               	movf	(??_eepromRead+11)^(0+384),w
  3937  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  3938  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  3939  03B7  00B3               	movwf	___lmul@multiplier+1
  3940  03B8  1683               	bsf	3,5	;RP0=1, select bank3
  3941  03B9  1703               	bsf	3,6	;RP1=1, select bank3
  3942  03BA  081A               	movf	(??_eepromRead+10)^(0+384),w
  3943  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  3944  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  3945  03BD  00B2               	movwf	___lmul@multiplier
  3946  03BE  3000               	movlw	0
  3947  03BF  00B9               	movwf	___lmul@multiplicand+3
  3948  03C0  3000               	movlw	0
  3949  03C1  00B8               	movwf	___lmul@multiplicand+2
  3950  03C2  3027               	movlw	39
  3951  03C3  00B7               	movwf	___lmul@multiplicand+1
  3952  03C4  3010               	movlw	16
  3953  03C5  00B6               	movwf	___lmul@multiplicand
  3954  03C6  160A  158A  2775  120A  118A  	fcall	___lmul
  3955  03CB  0832               	movf	?___lmul,w
  3956  03CC  1683               	bsf	3,5	;RP0=1, select bank3
  3957  03CD  1703               	bsf	3,6	;RP1=1, select bank3
  3958  03CE  0796               	addwf	(??_eepromRead+6)^(0+384),f
  3959  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  3960  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  3961  03D1  0833               	movf	?___lmul+1,w
  3962  03D2  1803               	skipnc
  3963  03D3  0F33               	incfsz	?___lmul+1,w
  3964  03D4  2BD6               	goto	u4780
  3965  03D5  2BD9               	goto	u4781
  3966  03D6                     u4780:
  3967  03D6  1683               	bsf	3,5	;RP0=1, select bank3
  3968  03D7  1703               	bsf	3,6	;RP1=1, select bank3
  3969  03D8  0797               	addwf	((??_eepromRead+6)^(0+384)+1),f
  3970  03D9                     u4781:
  3971  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  3972  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  3973  03DB  0834               	movf	?___lmul+2,w
  3974  03DC  1803               	skipnc
  3975  03DD  0F34               	incfsz	?___lmul+2,w
  3976  03DE  2BE0               	goto	u4782
  3977  03DF  2BE3               	goto	u4783
  3978  03E0                     u4782:
  3979  03E0  1683               	bsf	3,5	;RP0=1, select bank3
  3980  03E1  1703               	bsf	3,6	;RP1=1, select bank3
  3981  03E2  0798               	addwf	((??_eepromRead+6)^(0+384)+2),f
  3982  03E3                     u4783:
  3983  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  3984  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  3985  03E5  0835               	movf	?___lmul+3,w
  3986  03E6  1803               	skipnc
  3987  03E7  0A35               	incf	?___lmul+3,w
  3988  03E8  1683               	bsf	3,5	;RP0=1, select bank3
  3989  03E9  1703               	bsf	3,6	;RP1=1, select bank3
  3990  03EA  0799               	addwf	((??_eepromRead+6)^(0+384)+3),f
  3991  03EB  0816               	movf	(??_eepromRead+6)^(0+384),w
  3992  03EC  0790               	addwf	??_eepromRead^(0+384),f
  3993  03ED  0817               	movf	(??_eepromRead+7)^(0+384),w
  3994  03EE  1803               	skipnc
  3995  03EF  0F17               	incfsz	(??_eepromRead+7)^(0+384),w
  3996  03F0  2BF2               	goto	u4790
  3997  03F1  2BF3               	goto	u4791
  3998  03F2                     u4790:
  3999  03F2  0791               	addwf	(??_eepromRead^(0+384)+1),f
  4000  03F3                     u4791:
  4001  03F3  0818               	movf	(??_eepromRead+8)^(0+384),w
  4002  03F4  1803               	skipnc
  4003  03F5  0F18               	incfsz	(??_eepromRead+8)^(0+384),w
  4004  03F6  2BF8               	goto	u4792
  4005  03F7  2BF9               	goto	u4793
  4006  03F8                     u4792:
  4007  03F8  0792               	addwf	(??_eepromRead^(0+384)+2),f
  4008  03F9                     u4793:
  4009  03F9  0819               	movf	(??_eepromRead+9)^(0+384),w
  4010  03FA  1803               	skipnc
  4011  03FB  0A19               	incf	(??_eepromRead+9)^(0+384),w
  4012  03FC  0793               	addwf	(??_eepromRead^(0+384)+3),f
  4013  03FD  0813               	movf	(??_eepromRead+3)^(0+384),w
  4014  03FE  1303               	bcf	3,6	;RP1=0, select bank1
  4015  03FF  00EF               	movwf	(_previousCurrentClothLength+3)^(0+128)	;volatile
  4016  0400  1703               	bsf	3,6	;RP1=1, select bank3
  4017  0401  0812               	movf	(??_eepromRead+2)^(0+384),w
  4018  0402  1303               	bcf	3,6	;RP1=0, select bank1
  4019  0403  00EE               	movwf	(_previousCurrentClothLength+2)^(0+128)	;volatile
  4020  0404  1703               	bsf	3,6	;RP1=1, select bank3
  4021  0405  0811               	movf	(??_eepromRead+1)^(0+384),w
  4022  0406  1303               	bcf	3,6	;RP1=0, select bank1
  4023  0407  00ED               	movwf	(_previousCurrentClothLength+1)^(0+128)	;volatile
  4024  0408  1703               	bsf	3,6	;RP1=1, select bank3
  4025  0409  0810               	movf	??_eepromRead^(0+384),w
  4026  040A  1303               	bcf	3,6	;RP1=0, select bank1
  4027  040B  00EC               	movwf	_previousCurrentClothLength^(0+128)	;volatile
  4028                           
  4029                           ;newmain.c: 166:     resetCounter = (unsigned int)eeprom_read(0x14)* (10000UL) + (unsign
      +                          ed int)eeprom_read(0x15)*100 + (unsigned int)eeprom_read(0x16);
  4030  040C  3016               	movlw	22
  4031  040D  160A  158A  2689  120A  118A  	fcall	_eeprom_read
  4032  0412  1683               	bsf	3,5	;RP0=1, select bank3
  4033  0413  0090               	movwf	??_eepromRead^(0+384)
  4034  0414  0191               	clrf	(??_eepromRead^(0+384)+1)
  4035  0415  0192               	clrf	(??_eepromRead^(0+384)+2)
  4036  0416  0193               	clrf	(??_eepromRead^(0+384)+3)
  4037  0417  3015               	movlw	21
  4038  0418  160A  158A  2689  120A  118A  	fcall	_eeprom_read
  4039  041D  1683               	bsf	3,5	;RP0=1, select bank3
  4040  041E  0094               	movwf	(??_eepromRead+4)^(0+384)
  4041  041F  0195               	clrf	((??_eepromRead+4)^(0+384)+1)
  4042  0420  0814               	movf	(??_eepromRead+4)^(0+384),w
  4043  0421  1283               	bcf	3,5	;RP0=0, select bank0
  4044  0422  1303               	bcf	3,6	;RP1=0, select bank0
  4045  0423  00B2               	movwf	___wmul@multiplier
  4046  0424  1683               	bsf	3,5	;RP0=1, select bank3
  4047  0425  1703               	bsf	3,6	;RP1=1, select bank3
  4048  0426  0815               	movf	(??_eepromRead+5)^(0+384),w
  4049  0427  1283               	bcf	3,5	;RP0=0, select bank0
  4050  0428  1303               	bcf	3,6	;RP1=0, select bank0
  4051  0429  00B3               	movwf	___wmul@multiplier+1
  4052  042A  3064               	movlw	100
  4053  042B  00B4               	movwf	___wmul@multiplicand
  4054  042C  3000               	movlw	0
  4055  042D  00B5               	movwf	___wmul@multiplicand+1
  4056  042E  160A  158A  26C2  120A  118A  	fcall	___wmul
  4057  0433  0832               	movf	?___wmul,w
  4058  0434  1683               	bsf	3,5	;RP0=1, select bank3
  4059  0435  1703               	bsf	3,6	;RP1=1, select bank3
  4060  0436  0096               	movwf	(??_eepromRead+6)^(0+384)
  4061  0437  1283               	bcf	3,5	;RP0=0, select bank0
  4062  0438  1303               	bcf	3,6	;RP1=0, select bank0
  4063  0439  0833               	movf	?___wmul+1,w
  4064  043A  1683               	bsf	3,5	;RP0=1, select bank3
  4065  043B  1703               	bsf	3,6	;RP1=1, select bank3
  4066  043C  0097               	movwf	((??_eepromRead+6)^(0+384)+1)
  4067  043D  0198               	clrf	((??_eepromRead+6)^(0+384)+2)
  4068  043E  0199               	clrf	((??_eepromRead+6)^(0+384)+3)
  4069  043F  3014               	movlw	20
  4070  0440  160A  158A  2689  120A  118A  	fcall	_eeprom_read
  4071  0445  1683               	bsf	3,5	;RP0=1, select bank3
  4072  0446  009A               	movwf	(??_eepromRead+10)^(0+384)
  4073  0447  019B               	clrf	((??_eepromRead+10)^(0+384)+1)
  4074  0448  019C               	clrf	((??_eepromRead+10)^(0+384)+2)
  4075  0449  019D               	clrf	((??_eepromRead+10)^(0+384)+3)
  4076  044A  081D               	movf	(??_eepromRead+13)^(0+384),w
  4077  044B  1283               	bcf	3,5	;RP0=0, select bank0
  4078  044C  1303               	bcf	3,6	;RP1=0, select bank0
  4079  044D  00B5               	movwf	___lmul@multiplier+3
  4080  044E  1683               	bsf	3,5	;RP0=1, select bank3
  4081  044F  1703               	bsf	3,6	;RP1=1, select bank3
  4082  0450  081C               	movf	(??_eepromRead+12)^(0+384),w
  4083  0451  1283               	bcf	3,5	;RP0=0, select bank0
  4084  0452  1303               	bcf	3,6	;RP1=0, select bank0
  4085  0453  00B4               	movwf	___lmul@multiplier+2
  4086  0454  1683               	bsf	3,5	;RP0=1, select bank3
  4087  0455  1703               	bsf	3,6	;RP1=1, select bank3
  4088  0456  081B               	movf	(??_eepromRead+11)^(0+384),w
  4089  0457  1283               	bcf	3,5	;RP0=0, select bank0
  4090  0458  1303               	bcf	3,6	;RP1=0, select bank0
  4091  0459  00B3               	movwf	___lmul@multiplier+1
  4092  045A  1683               	bsf	3,5	;RP0=1, select bank3
  4093  045B  1703               	bsf	3,6	;RP1=1, select bank3
  4094  045C  081A               	movf	(??_eepromRead+10)^(0+384),w
  4095  045D  1283               	bcf	3,5	;RP0=0, select bank0
  4096  045E  1303               	bcf	3,6	;RP1=0, select bank0
  4097  045F  00B2               	movwf	___lmul@multiplier
  4098  0460  3000               	movlw	0
  4099  0461  00B9               	movwf	___lmul@multiplicand+3
  4100  0462  3000               	movlw	0
  4101  0463  00B8               	movwf	___lmul@multiplicand+2
  4102  0464  3027               	movlw	39
  4103  0465  00B7               	movwf	___lmul@multiplicand+1
  4104  0466  3010               	movlw	16
  4105  0467  00B6               	movwf	___lmul@multiplicand
  4106  0468  160A  158A  2775  120A  118A  	fcall	___lmul
  4107  046D  0832               	movf	?___lmul,w
  4108  046E  1683               	bsf	3,5	;RP0=1, select bank3
  4109  046F  1703               	bsf	3,6	;RP1=1, select bank3
  4110  0470  0796               	addwf	(??_eepromRead+6)^(0+384),f
  4111  0471  1283               	bcf	3,5	;RP0=0, select bank0
  4112  0472  1303               	bcf	3,6	;RP1=0, select bank0
  4113  0473  0833               	movf	?___lmul+1,w
  4114  0474  1803               	skipnc
  4115  0475  0F33               	incfsz	?___lmul+1,w
  4116  0476  2C78               	goto	u4800
  4117  0477  2C7B               	goto	u4801
  4118  0478                     u4800:
  4119  0478  1683               	bsf	3,5	;RP0=1, select bank3
  4120  0479  1703               	bsf	3,6	;RP1=1, select bank3
  4121  047A  0797               	addwf	((??_eepromRead+6)^(0+384)+1),f
  4122  047B                     u4801:
  4123  047B  1283               	bcf	3,5	;RP0=0, select bank0
  4124  047C  1303               	bcf	3,6	;RP1=0, select bank0
  4125  047D  0834               	movf	?___lmul+2,w
  4126  047E  1803               	skipnc
  4127  047F  0F34               	incfsz	?___lmul+2,w
  4128  0480  2C82               	goto	u4802
  4129  0481  2C85               	goto	u4803
  4130  0482                     u4802:
  4131  0482  1683               	bsf	3,5	;RP0=1, select bank3
  4132  0483  1703               	bsf	3,6	;RP1=1, select bank3
  4133  0484  0798               	addwf	((??_eepromRead+6)^(0+384)+2),f
  4134  0485                     u4803:
  4135  0485  1283               	bcf	3,5	;RP0=0, select bank0
  4136  0486  1303               	bcf	3,6	;RP1=0, select bank0
  4137  0487  0835               	movf	?___lmul+3,w
  4138  0488  1803               	skipnc
  4139  0489  0A35               	incf	?___lmul+3,w
  4140  048A  1683               	bsf	3,5	;RP0=1, select bank3
  4141  048B  1703               	bsf	3,6	;RP1=1, select bank3
  4142  048C  0799               	addwf	((??_eepromRead+6)^(0+384)+3),f
  4143  048D  0816               	movf	(??_eepromRead+6)^(0+384),w
  4144  048E  0790               	addwf	??_eepromRead^(0+384),f
  4145  048F  0817               	movf	(??_eepromRead+7)^(0+384),w
  4146  0490  1803               	skipnc
  4147  0491  0F17               	incfsz	(??_eepromRead+7)^(0+384),w
  4148  0492  2C94               	goto	u4810
  4149  0493  2C95               	goto	u4811
  4150  0494                     u4810:
  4151  0494  0791               	addwf	(??_eepromRead^(0+384)+1),f
  4152  0495                     u4811:
  4153  0495  0818               	movf	(??_eepromRead+8)^(0+384),w
  4154  0496  1803               	skipnc
  4155  0497  0F18               	incfsz	(??_eepromRead+8)^(0+384),w
  4156  0498  2C9A               	goto	u4812
  4157  0499  2C9B               	goto	u4813
  4158  049A                     u4812:
  4159  049A  0792               	addwf	(??_eepromRead^(0+384)+2),f
  4160  049B                     u4813:
  4161  049B  0819               	movf	(??_eepromRead+9)^(0+384),w
  4162  049C  1803               	skipnc
  4163  049D  0A19               	incf	(??_eepromRead+9)^(0+384),w
  4164  049E  0793               	addwf	(??_eepromRead^(0+384)+3),f
  4165  049F  0813               	movf	(??_eepromRead+3)^(0+384),w
  4166  04A0  1303               	bcf	3,6	;RP1=0, select bank1
  4167  04A1  00EB               	movwf	(_resetCounter+3)^(0+128)	;volatile
  4168  04A2  1703               	bsf	3,6	;RP1=1, select bank3
  4169  04A3  0812               	movf	(??_eepromRead+2)^(0+384),w
  4170  04A4  1303               	bcf	3,6	;RP1=0, select bank1
  4171  04A5  00EA               	movwf	(_resetCounter+2)^(0+128)	;volatile
  4172  04A6  1703               	bsf	3,6	;RP1=1, select bank3
  4173  04A7  0811               	movf	(??_eepromRead+1)^(0+384),w
  4174  04A8  1303               	bcf	3,6	;RP1=0, select bank1
  4175  04A9  00E9               	movwf	(_resetCounter+1)^(0+128)	;volatile
  4176  04AA  1703               	bsf	3,6	;RP1=1, select bank3
  4177  04AB  0810               	movf	??_eepromRead^(0+384),w
  4178  04AC  1303               	bcf	3,6	;RP1=0, select bank1
  4179  04AD  00E8               	movwf	_resetCounter^(0+128)	;volatile
  4180                           
  4181                           ;newmain.c: 167:     hourMeter = (unsigned int)eeprom_read(0x17)* (10000UL) + (unsigned 
      +                          int)eeprom_read(0x18)*100 + (unsigned int)eeprom_read(0x19);
  4182  04AE  3019               	movlw	25
  4183  04AF  160A  158A  2689  120A  118A  	fcall	_eeprom_read
  4184  04B4  1683               	bsf	3,5	;RP0=1, select bank3
  4185  04B5  0090               	movwf	??_eepromRead^(0+384)
  4186  04B6  0191               	clrf	(??_eepromRead^(0+384)+1)
  4187  04B7  0192               	clrf	(??_eepromRead^(0+384)+2)
  4188  04B8  0193               	clrf	(??_eepromRead^(0+384)+3)
  4189  04B9  3018               	movlw	24
  4190  04BA  160A  158A  2689  120A  118A  	fcall	_eeprom_read
  4191  04BF  1683               	bsf	3,5	;RP0=1, select bank3
  4192  04C0  0094               	movwf	(??_eepromRead+4)^(0+384)
  4193  04C1  0195               	clrf	((??_eepromRead+4)^(0+384)+1)
  4194  04C2  0814               	movf	(??_eepromRead+4)^(0+384),w
  4195  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  4196  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  4197  04C5  00B2               	movwf	___wmul@multiplier
  4198  04C6  1683               	bsf	3,5	;RP0=1, select bank3
  4199  04C7  1703               	bsf	3,6	;RP1=1, select bank3
  4200  04C8  0815               	movf	(??_eepromRead+5)^(0+384),w
  4201  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  4202  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  4203  04CB  00B3               	movwf	___wmul@multiplier+1
  4204  04CC  3064               	movlw	100
  4205  04CD  00B4               	movwf	___wmul@multiplicand
  4206  04CE  3000               	movlw	0
  4207  04CF  00B5               	movwf	___wmul@multiplicand+1
  4208  04D0  160A  158A  26C2  120A  118A  	fcall	___wmul
  4209  04D5  0832               	movf	?___wmul,w
  4210  04D6  1683               	bsf	3,5	;RP0=1, select bank3
  4211  04D7  1703               	bsf	3,6	;RP1=1, select bank3
  4212  04D8  0096               	movwf	(??_eepromRead+6)^(0+384)
  4213  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  4214  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  4215  04DB  0833               	movf	?___wmul+1,w
  4216  04DC  1683               	bsf	3,5	;RP0=1, select bank3
  4217  04DD  1703               	bsf	3,6	;RP1=1, select bank3
  4218  04DE  0097               	movwf	((??_eepromRead+6)^(0+384)+1)
  4219  04DF  0198               	clrf	((??_eepromRead+6)^(0+384)+2)
  4220  04E0  0199               	clrf	((??_eepromRead+6)^(0+384)+3)
  4221  04E1  3017               	movlw	23
  4222  04E2  160A  158A  2689  120A  118A  	fcall	_eeprom_read
  4223  04E7  1683               	bsf	3,5	;RP0=1, select bank3
  4224  04E8  009A               	movwf	(??_eepromRead+10)^(0+384)
  4225  04E9  019B               	clrf	((??_eepromRead+10)^(0+384)+1)
  4226  04EA  019C               	clrf	((??_eepromRead+10)^(0+384)+2)
  4227  04EB  019D               	clrf	((??_eepromRead+10)^(0+384)+3)
  4228  04EC  081D               	movf	(??_eepromRead+13)^(0+384),w
  4229  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  4230  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  4231  04EF  00B5               	movwf	___lmul@multiplier+3
  4232  04F0  1683               	bsf	3,5	;RP0=1, select bank3
  4233  04F1  1703               	bsf	3,6	;RP1=1, select bank3
  4234  04F2  081C               	movf	(??_eepromRead+12)^(0+384),w
  4235  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  4236  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  4237  04F5  00B4               	movwf	___lmul@multiplier+2
  4238  04F6  1683               	bsf	3,5	;RP0=1, select bank3
  4239  04F7  1703               	bsf	3,6	;RP1=1, select bank3
  4240  04F8  081B               	movf	(??_eepromRead+11)^(0+384),w
  4241  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  4242  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  4243  04FB  00B3               	movwf	___lmul@multiplier+1
  4244  04FC  1683               	bsf	3,5	;RP0=1, select bank3
  4245  04FD  1703               	bsf	3,6	;RP1=1, select bank3
  4246  04FE  081A               	movf	(??_eepromRead+10)^(0+384),w
  4247  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  4248  0500  1303               	bcf	3,6	;RP1=0, select bank0
  4249  0501  00B2               	movwf	___lmul@multiplier
  4250  0502  3000               	movlw	0
  4251  0503  00B9               	movwf	___lmul@multiplicand+3
  4252  0504  3000               	movlw	0
  4253  0505  00B8               	movwf	___lmul@multiplicand+2
  4254  0506  3027               	movlw	39
  4255  0507  00B7               	movwf	___lmul@multiplicand+1
  4256  0508  3010               	movlw	16
  4257  0509  00B6               	movwf	___lmul@multiplicand
  4258  050A  160A  158A  2775  120A  118A  	fcall	___lmul
  4259  050F  0832               	movf	?___lmul,w
  4260  0510  1683               	bsf	3,5	;RP0=1, select bank3
  4261  0511  1703               	bsf	3,6	;RP1=1, select bank3
  4262  0512  0796               	addwf	(??_eepromRead+6)^(0+384),f
  4263  0513  1283               	bcf	3,5	;RP0=0, select bank0
  4264  0514  1303               	bcf	3,6	;RP1=0, select bank0
  4265  0515  0833               	movf	?___lmul+1,w
  4266  0516  1803               	skipnc
  4267  0517  0F33               	incfsz	?___lmul+1,w
  4268  0518  2D1A               	goto	u4820
  4269  0519  2D1D               	goto	u4821
  4270  051A                     u4820:
  4271  051A  1683               	bsf	3,5	;RP0=1, select bank3
  4272  051B  1703               	bsf	3,6	;RP1=1, select bank3
  4273  051C  0797               	addwf	((??_eepromRead+6)^(0+384)+1),f
  4274  051D                     u4821:
  4275  051D  1283               	bcf	3,5	;RP0=0, select bank0
  4276  051E  1303               	bcf	3,6	;RP1=0, select bank0
  4277  051F  0834               	movf	?___lmul+2,w
  4278  0520  1803               	skipnc
  4279  0521  0F34               	incfsz	?___lmul+2,w
  4280  0522  2D24               	goto	u4822
  4281  0523  2D27               	goto	u4823
  4282  0524                     u4822:
  4283  0524  1683               	bsf	3,5	;RP0=1, select bank3
  4284  0525  1703               	bsf	3,6	;RP1=1, select bank3
  4285  0526  0798               	addwf	((??_eepromRead+6)^(0+384)+2),f
  4286  0527                     u4823:
  4287  0527  1283               	bcf	3,5	;RP0=0, select bank0
  4288  0528  1303               	bcf	3,6	;RP1=0, select bank0
  4289  0529  0835               	movf	?___lmul+3,w
  4290  052A  1803               	skipnc
  4291  052B  0A35               	incf	?___lmul+3,w
  4292  052C  1683               	bsf	3,5	;RP0=1, select bank3
  4293  052D  1703               	bsf	3,6	;RP1=1, select bank3
  4294  052E  0799               	addwf	((??_eepromRead+6)^(0+384)+3),f
  4295  052F  0816               	movf	(??_eepromRead+6)^(0+384),w
  4296  0530  0790               	addwf	??_eepromRead^(0+384),f
  4297  0531  0817               	movf	(??_eepromRead+7)^(0+384),w
  4298  0532  1803               	skipnc
  4299  0533  0F17               	incfsz	(??_eepromRead+7)^(0+384),w
  4300  0534  2D36               	goto	u4830
  4301  0535  2D37               	goto	u4831
  4302  0536                     u4830:
  4303  0536  0791               	addwf	(??_eepromRead^(0+384)+1),f
  4304  0537                     u4831:
  4305  0537  0818               	movf	(??_eepromRead+8)^(0+384),w
  4306  0538  1803               	skipnc
  4307  0539  0F18               	incfsz	(??_eepromRead+8)^(0+384),w
  4308  053A  2D3C               	goto	u4832
  4309  053B  2D3D               	goto	u4833
  4310  053C                     u4832:
  4311  053C  0792               	addwf	(??_eepromRead^(0+384)+2),f
  4312  053D                     u4833:
  4313  053D  0819               	movf	(??_eepromRead+9)^(0+384),w
  4314  053E  1803               	skipnc
  4315  053F  0A19               	incf	(??_eepromRead+9)^(0+384),w
  4316  0540  0793               	addwf	(??_eepromRead^(0+384)+3),f
  4317  0541  0813               	movf	(??_eepromRead+3)^(0+384),w
  4318  0542  1283               	bcf	3,5	;RP0=0, select bank0
  4319  0543  1303               	bcf	3,6	;RP1=0, select bank0
  4320  0544  00DF               	movwf	_hourMeter+3	;volatile
  4321  0545  1683               	bsf	3,5	;RP0=1, select bank3
  4322  0546  1703               	bsf	3,6	;RP1=1, select bank3
  4323  0547  0812               	movf	(??_eepromRead+2)^(0+384),w
  4324  0548  1283               	bcf	3,5	;RP0=0, select bank0
  4325  0549  1303               	bcf	3,6	;RP1=0, select bank0
  4326  054A  00DE               	movwf	_hourMeter+2	;volatile
  4327  054B  1683               	bsf	3,5	;RP0=1, select bank3
  4328  054C  1703               	bsf	3,6	;RP1=1, select bank3
  4329  054D  0811               	movf	(??_eepromRead+1)^(0+384),w
  4330  054E  1283               	bcf	3,5	;RP0=0, select bank0
  4331  054F  1303               	bcf	3,6	;RP1=0, select bank0
  4332  0550  00DD               	movwf	_hourMeter+1	;volatile
  4333  0551  1683               	bsf	3,5	;RP0=1, select bank3
  4334  0552  1703               	bsf	3,6	;RP1=1, select bank3
  4335  0553  0810               	movf	??_eepromRead^(0+384),w
  4336  0554  1283               	bcf	3,5	;RP0=0, select bank0
  4337  0555  1303               	bcf	3,6	;RP1=0, select bank0
  4338  0556  00DC               	movwf	_hourMeter	;volatile
  4339                           
  4340                           ;newmain.c: 169:     if(currentClothLength > (999999UL)){
  4341  0557  1683               	bsf	3,5	;RP0=1, select bank1
  4342  0558  0857               	movf	(_currentClothLength+3)^(0+128),w	;volatile
  4343  0559  1D03               	btfss	3,2
  4344  055A  2D69               	goto	l3410
  4345  055B  300F               	movlw	15
  4346  055C  0256               	subwf	(_currentClothLength+2)^(0+128),w	;volatile
  4347  055D  1D03               	skipz
  4348  055E  2D67               	goto	u4843
  4349  055F  3042               	movlw	66
  4350  0560  0255               	subwf	(_currentClothLength+1)^(0+128),w	;volatile
  4351  0561  1D03               	skipz
  4352  0562  2D67               	goto	u4843
  4353  0563  3040               	movlw	64
  4354  0564  0254               	subwf	_currentClothLength^(0+128),w	;volatile
  4355  0565  1D03               	skipz
  4356  0566  2D67               	goto	u4843
  4357  0567                     u4843:
  4358  0567  1C03               	btfss	3,0
  4359  0568  2D73               	goto	l3412
  4360  0569                     l3410:
  4361                           
  4362                           ;newmain.c: 170:         currentClothLength = 100;
  4363  0569  3000               	movlw	0
  4364  056A  1683               	bsf	3,5	;RP0=1, select bank1
  4365  056B  1303               	bcf	3,6	;RP1=0, select bank1
  4366  056C  00D7               	movwf	(_currentClothLength+3)^(0+128)	;volatile
  4367  056D  3000               	movlw	0
  4368  056E  00D6               	movwf	(_currentClothLength+2)^(0+128)	;volatile
  4369  056F  3000               	movlw	0
  4370  0570  00D5               	movwf	(_currentClothLength+1)^(0+128)	;volatile
  4371  0571  3064               	movlw	100
  4372  0572  00D4               	movwf	_currentClothLength^(0+128)	;volatile
  4373  0573                     l3412:
  4374                           
  4375                           ;newmain.c: 172:     if(previousCurrentClothLength > (999999UL)){
  4376  0573  1683               	bsf	3,5	;RP0=1, select bank1
  4377  0574  1303               	bcf	3,6	;RP1=0, select bank1
  4378  0575  086F               	movf	(_previousCurrentClothLength+3)^(0+128),w	;volatile
  4379  0576  1D03               	btfss	3,2
  4380  0577  2D86               	goto	l3414
  4381  0578  300F               	movlw	15
  4382  0579  026E               	subwf	(_previousCurrentClothLength+2)^(0+128),w	;volatile
  4383  057A  1D03               	skipz
  4384  057B  2D84               	goto	u4853
  4385  057C  3042               	movlw	66
  4386  057D  026D               	subwf	(_previousCurrentClothLength+1)^(0+128),w	;volatile
  4387  057E  1D03               	skipz
  4388  057F  2D84               	goto	u4853
  4389  0580  3040               	movlw	64
  4390  0581  026C               	subwf	_previousCurrentClothLength^(0+128),w	;volatile
  4391  0582  1D03               	skipz
  4392  0583  2D84               	goto	u4853
  4393  0584                     u4853:
  4394  0584  1C03               	btfss	3,0
  4395  0585  2D90               	goto	l3416
  4396  0586                     l3414:
  4397                           
  4398                           ;newmain.c: 173:         previousCurrentClothLength = 100;
  4399  0586  3000               	movlw	0
  4400  0587  1683               	bsf	3,5	;RP0=1, select bank1
  4401  0588  1303               	bcf	3,6	;RP1=0, select bank1
  4402  0589  00EF               	movwf	(_previousCurrentClothLength+3)^(0+128)	;volatile
  4403  058A  3000               	movlw	0
  4404  058B  00EE               	movwf	(_previousCurrentClothLength+2)^(0+128)	;volatile
  4405  058C  3000               	movlw	0
  4406  058D  00ED               	movwf	(_previousCurrentClothLength+1)^(0+128)	;volatile
  4407  058E  3064               	movlw	100
  4408  058F  00EC               	movwf	_previousCurrentClothLength^(0+128)	;volatile
  4409  0590                     l3416:
  4410                           
  4411                           ;newmain.c: 175:     if(actualClothLength > (9999UL)){
  4412  0590  1683               	bsf	3,5	;RP0=1, select bank1
  4413  0591  1303               	bcf	3,6	;RP1=0, select bank1
  4414  0592  0853               	movf	(_actualClothLength+3)^(0+128),w	;volatile
  4415  0593  1D03               	btfss	3,2
  4416  0594  2DA2               	goto	l3418
  4417  0595  0852               	movf	(_actualClothLength+2)^(0+128),w	;volatile
  4418  0596  1D03               	btfss	3,2
  4419  0597  2DA2               	goto	l3418
  4420  0598  3027               	movlw	39
  4421  0599  0251               	subwf	(_actualClothLength+1)^(0+128),w	;volatile
  4422  059A  1D03               	skipz
  4423  059B  2DA0               	goto	u4863
  4424  059C  3010               	movlw	16
  4425  059D  0250               	subwf	_actualClothLength^(0+128),w	;volatile
  4426  059E  1D03               	skipz
  4427  059F  2DA0               	goto	u4863
  4428  05A0                     u4863:
  4429  05A0  1C03               	btfss	3,0
  4430  05A1  2DAC               	goto	l3420
  4431  05A2                     l3418:
  4432                           
  4433                           ;newmain.c: 176:         actualClothLength = 999;
  4434  05A2  3000               	movlw	0
  4435  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  4436  05A4  1303               	bcf	3,6	;RP1=0, select bank1
  4437  05A5  00D3               	movwf	(_actualClothLength+3)^(0+128)	;volatile
  4438  05A6  3000               	movlw	0
  4439  05A7  00D2               	movwf	(_actualClothLength+2)^(0+128)	;volatile
  4440  05A8  3003               	movlw	3
  4441  05A9  00D1               	movwf	(_actualClothLength+1)^(0+128)	;volatile
  4442  05AA  30E7               	movlw	231
  4443  05AB  00D0               	movwf	_actualClothLength^(0+128)	;volatile
  4444  05AC                     l3420:
  4445                           
  4446                           ;newmain.c: 178:     if(warningClothLength > (9999UL)){
  4447  05AC  1683               	bsf	3,5	;RP0=1, select bank1
  4448  05AD  1303               	bcf	3,6	;RP1=0, select bank1
  4449  05AE  084B               	movf	(_warningClothLength+3)^(0+128),w	;volatile
  4450  05AF  1D03               	btfss	3,2
  4451  05B0  2DBE               	goto	l3422
  4452  05B1  084A               	movf	(_warningClothLength+2)^(0+128),w	;volatile
  4453  05B2  1D03               	btfss	3,2
  4454  05B3  2DBE               	goto	l3422
  4455  05B4  3027               	movlw	39
  4456  05B5  0249               	subwf	(_warningClothLength+1)^(0+128),w	;volatile
  4457  05B6  1D03               	skipz
  4458  05B7  2DBC               	goto	u4873
  4459  05B8  3010               	movlw	16
  4460  05B9  0248               	subwf	_warningClothLength^(0+128),w	;volatile
  4461  05BA  1D03               	skipz
  4462  05BB  2DBC               	goto	u4873
  4463  05BC                     u4873:
  4464  05BC  1C03               	btfss	3,0
  4465  05BD  2DC8               	goto	l3424
  4466  05BE                     l3422:
  4467                           
  4468                           ;newmain.c: 179:         warningClothLength = 989;
  4469  05BE  3000               	movlw	0
  4470  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  4471  05C0  1303               	bcf	3,6	;RP1=0, select bank1
  4472  05C1  00CB               	movwf	(_warningClothLength+3)^(0+128)	;volatile
  4473  05C2  3000               	movlw	0
  4474  05C3  00CA               	movwf	(_warningClothLength+2)^(0+128)	;volatile
  4475  05C4  3003               	movlw	3
  4476  05C5  00C9               	movwf	(_warningClothLength+1)^(0+128)	;volatile
  4477  05C6  30DD               	movlw	221
  4478  05C7  00C8               	movwf	_warningClothLength^(0+128)	;volatile
  4479  05C8                     l3424:
  4480                           
  4481                           ;newmain.c: 181:     if(resetCounter > (99999UL)){
  4482  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  4483  05C9  1303               	bcf	3,6	;RP1=0, select bank1
  4484  05CA  086B               	movf	(_resetCounter+3)^(0+128),w	;volatile
  4485  05CB  1D03               	btfss	3,2
  4486  05CC  2DDB               	goto	l3426
  4487  05CD  3001               	movlw	1
  4488  05CE  026A               	subwf	(_resetCounter+2)^(0+128),w	;volatile
  4489  05CF  1D03               	skipz
  4490  05D0  2DD9               	goto	u4883
  4491  05D1  3086               	movlw	134
  4492  05D2  0269               	subwf	(_resetCounter+1)^(0+128),w	;volatile
  4493  05D3  1D03               	skipz
  4494  05D4  2DD9               	goto	u4883
  4495  05D5  30A0               	movlw	160
  4496  05D6  0268               	subwf	_resetCounter^(0+128),w	;volatile
  4497  05D7  1D03               	skipz
  4498  05D8  2DD9               	goto	u4883
  4499  05D9                     u4883:
  4500  05D9  1C03               	btfss	3,0
  4501  05DA  2DE5               	goto	l3428
  4502  05DB                     l3426:
  4503                           
  4504                           ;newmain.c: 182:         resetCounter = 100;
  4505  05DB  3000               	movlw	0
  4506  05DC  1683               	bsf	3,5	;RP0=1, select bank1
  4507  05DD  1303               	bcf	3,6	;RP1=0, select bank1
  4508  05DE  00EB               	movwf	(_resetCounter+3)^(0+128)	;volatile
  4509  05DF  3000               	movlw	0
  4510  05E0  00EA               	movwf	(_resetCounter+2)^(0+128)	;volatile
  4511  05E1  3000               	movlw	0
  4512  05E2  00E9               	movwf	(_resetCounter+1)^(0+128)	;volatile
  4513  05E3  3064               	movlw	100
  4514  05E4  00E8               	movwf	_resetCounter^(0+128)	;volatile
  4515  05E5                     l3428:
  4516                           
  4517                           ;newmain.c: 184:     if(hourMeter > (99999UL)){
  4518  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  4519  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  4520  05E7  085F               	movf	_hourMeter+3,w	;volatile
  4521  05E8  1D03               	btfss	3,2
  4522  05E9  2DF8               	goto	l3430
  4523  05EA  3001               	movlw	1
  4524  05EB  025E               	subwf	_hourMeter+2,w	;volatile
  4525  05EC  1D03               	skipz
  4526  05ED  2DF6               	goto	u4893
  4527  05EE  3086               	movlw	134
  4528  05EF  025D               	subwf	_hourMeter+1,w	;volatile
  4529  05F0  1D03               	skipz
  4530  05F1  2DF6               	goto	u4893
  4531  05F2  30A0               	movlw	160
  4532  05F3  025C               	subwf	_hourMeter,w	;volatile
  4533  05F4  1D03               	skipz
  4534  05F5  2DF6               	goto	u4893
  4535  05F6                     u4893:
  4536  05F6  1C03               	btfss	3,0
  4537  05F7  2E02               	goto	l3432
  4538  05F8                     l3430:
  4539                           
  4540                           ;newmain.c: 185:         hourMeter = 100;
  4541  05F8  3000               	movlw	0
  4542  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  4543  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  4544  05FB  00DF               	movwf	_hourMeter+3	;volatile
  4545  05FC  3000               	movlw	0
  4546  05FD  00DE               	movwf	_hourMeter+2	;volatile
  4547  05FE  3000               	movlw	0
  4548  05FF  00DD               	movwf	_hourMeter+1	;volatile
  4549  0600  3064               	movlw	100
  4550  0601  00DC               	movwf	_hourMeter	;volatile
  4551  0602                     l3432:
  4552                           
  4553                           ;newmain.c: 187:     if(circumference > (9999UL)){
  4554  0602  1683               	bsf	3,5	;RP0=1, select bank1
  4555  0603  1303               	bcf	3,6	;RP1=0, select bank1
  4556  0604  085B               	movf	(_circumference+3)^(0+128),w	;volatile
  4557  0605  1D03               	btfss	3,2
  4558  0606  2E14               	goto	l3434
  4559  0607  085A               	movf	(_circumference+2)^(0+128),w	;volatile
  4560  0608  1D03               	btfss	3,2
  4561  0609  2E14               	goto	l3434
  4562  060A  3027               	movlw	39
  4563  060B  0259               	subwf	(_circumference+1)^(0+128),w	;volatile
  4564  060C  1D03               	skipz
  4565  060D  2E12               	goto	u4903
  4566  060E  3010               	movlw	16
  4567  060F  0258               	subwf	_circumference^(0+128),w	;volatile
  4568  0610  1D03               	skipz
  4569  0611  2E12               	goto	u4903
  4570  0612                     u4903:
  4571  0612  1C03               	btfss	3,0
  4572  0613  2E1E               	goto	l3436
  4573  0614                     l3434:
  4574                           
  4575                           ;newmain.c: 188:         circumference = 500;
  4576  0614  3000               	movlw	0
  4577  0615  1683               	bsf	3,5	;RP0=1, select bank1
  4578  0616  1303               	bcf	3,6	;RP1=0, select bank1
  4579  0617  00DB               	movwf	(_circumference+3)^(0+128)	;volatile
  4580  0618  3000               	movlw	0
  4581  0619  00DA               	movwf	(_circumference+2)^(0+128)	;volatile
  4582  061A  3001               	movlw	1
  4583  061B  00D9               	movwf	(_circumference+1)^(0+128)	;volatile
  4584  061C  30F4               	movlw	244
  4585  061D  00D8               	movwf	_circumference^(0+128)	;volatile
  4586  061E                     l3436:
  4587                           
  4588                           ;newmain.c: 190:     if(pulse > (9999UL)){
  4589  061E  1683               	bsf	3,5	;RP0=1, select bank1
  4590  061F  1303               	bcf	3,6	;RP1=0, select bank1
  4591  0620  084F               	movf	(_pulse+3)^(0+128),w	;volatile
  4592  0621  1D03               	btfss	3,2
  4593  0622  2E30               	goto	l3438
  4594  0623  084E               	movf	(_pulse+2)^(0+128),w	;volatile
  4595  0624  1D03               	btfss	3,2
  4596  0625  2E30               	goto	l3438
  4597  0626  3027               	movlw	39
  4598  0627  024D               	subwf	(_pulse+1)^(0+128),w	;volatile
  4599  0628  1D03               	skipz
  4600  0629  2E2E               	goto	u4913
  4601  062A  3010               	movlw	16
  4602  062B  024C               	subwf	_pulse^(0+128),w	;volatile
  4603  062C  1D03               	skipz
  4604  062D  2E2E               	goto	u4913
  4605  062E                     u4913:
  4606  062E  1C03               	btfss	3,0
  4607  062F  2E3A               	goto	l3440
  4608  0630                     l3438:
  4609                           
  4610                           ;newmain.c: 191:         pulse = 4;
  4611  0630  3000               	movlw	0
  4612  0631  1683               	bsf	3,5	;RP0=1, select bank1
  4613  0632  1303               	bcf	3,6	;RP1=0, select bank1
  4614  0633  00CF               	movwf	(_pulse+3)^(0+128)	;volatile
  4615  0634  3000               	movlw	0
  4616  0635  00CE               	movwf	(_pulse+2)^(0+128)	;volatile
  4617  0636  3000               	movlw	0
  4618  0637  00CD               	movwf	(_pulse+1)^(0+128)	;volatile
  4619  0638  3004               	movlw	4
  4620  0639  00CC               	movwf	_pulse^(0+128)	;volatile
  4621  063A                     l3440:
  4622                           
  4623                           ;newmain.c: 194:     countingPulse = (circumference)/pulse;
  4624  063A  1683               	bsf	3,5	;RP0=1, select bank1
  4625  063B  1303               	bcf	3,6	;RP1=0, select bank1
  4626  063C  084F               	movf	(_pulse+3)^(0+128),w	;volatile
  4627  063D  1283               	bcf	3,5	;RP0=0, select bank0
  4628  063E  00C2               	movwf	___lldiv@divisor+3
  4629  063F  1683               	bsf	3,5	;RP0=1, select bank1
  4630  0640  084E               	movf	(_pulse+2)^(0+128),w	;volatile
  4631  0641  1283               	bcf	3,5	;RP0=0, select bank0
  4632  0642  00C1               	movwf	___lldiv@divisor+2
  4633  0643  1683               	bsf	3,5	;RP0=1, select bank1
  4634  0644  084D               	movf	(_pulse+1)^(0+128),w	;volatile
  4635  0645  1283               	bcf	3,5	;RP0=0, select bank0
  4636  0646  00C0               	movwf	___lldiv@divisor+1
  4637  0647  1683               	bsf	3,5	;RP0=1, select bank1
  4638  0648  084C               	movf	_pulse^(0+128),w	;volatile
  4639  0649  1283               	bcf	3,5	;RP0=0, select bank0
  4640  064A  00BF               	movwf	___lldiv@divisor
  4641  064B  1683               	bsf	3,5	;RP0=1, select bank1
  4642  064C  085B               	movf	(_circumference+3)^(0+128),w	;volatile
  4643  064D  1283               	bcf	3,5	;RP0=0, select bank0
  4644  064E  00C6               	movwf	___lldiv@dividend+3
  4645  064F  1683               	bsf	3,5	;RP0=1, select bank1
  4646  0650  085A               	movf	(_circumference+2)^(0+128),w	;volatile
  4647  0651  1283               	bcf	3,5	;RP0=0, select bank0
  4648  0652  00C5               	movwf	___lldiv@dividend+2
  4649  0653  1683               	bsf	3,5	;RP0=1, select bank1
  4650  0654  0859               	movf	(_circumference+1)^(0+128),w	;volatile
  4651  0655  1283               	bcf	3,5	;RP0=0, select bank0
  4652  0656  00C4               	movwf	___lldiv@dividend+1
  4653  0657  1683               	bsf	3,5	;RP0=1, select bank1
  4654  0658  0858               	movf	_circumference^(0+128),w	;volatile
  4655  0659  1283               	bcf	3,5	;RP0=0, select bank0
  4656  065A  00C3               	movwf	___lldiv@dividend
  4657  065B  160A  118A  218F   	fcall	___lldiv
  4658  065E  0842               	movf	?___lldiv+3,w
  4659  065F  1683               	bsf	3,5	;RP0=1, select bank1
  4660  0660  00A3               	movwf	(_countingPulse+3)^(0+128)	;volatile
  4661  0661  1283               	bcf	3,5	;RP0=0, select bank0
  4662  0662  0841               	movf	?___lldiv+2,w
  4663  0663  1683               	bsf	3,5	;RP0=1, select bank1
  4664  0664  00A2               	movwf	(_countingPulse+2)^(0+128)	;volatile
  4665  0665  1283               	bcf	3,5	;RP0=0, select bank0
  4666  0666  0840               	movf	?___lldiv+1,w
  4667  0667  1683               	bsf	3,5	;RP0=1, select bank1
  4668  0668  00A1               	movwf	(_countingPulse+1)^(0+128)	;volatile
  4669  0669  1283               	bcf	3,5	;RP0=0, select bank0
  4670  066A  083F               	movf	?___lldiv,w
  4671  066B  1683               	bsf	3,5	;RP0=1, select bank1
  4672  066C  00A0               	movwf	_countingPulse^(0+128)	;volatile
  4673                           
  4674                           ;newmain.c: 195:     metrePerMinCounter = 0;
  4675  066D  3000               	movlw	0
  4676  066E  00A7               	movwf	(_metrePerMinCounter+3)^(0+128)	;volatile
  4677  066F  3000               	movlw	0
  4678  0670  00A6               	movwf	(_metrePerMinCounter+2)^(0+128)	;volatile
  4679  0671  3000               	movlw	0
  4680  0672  00A5               	movwf	(_metrePerMinCounter+1)^(0+128)	;volatile
  4681  0673  3000               	movlw	0
  4682  0674  00A4               	movwf	_metrePerMinCounter^(0+128)	;volatile
  4683  0675  0008               	return
  4684  0676                     __end_of_eepromRead:
  4685                           
  4686                           	psect	text8
  4687  1E89                     __ptext8:	
  4688 ;; *************** function _eeprom_read *****************
  4689 ;; Defined at:
  4690 ;;		line 6 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/pic/__eeread.c"
  4691 ;; Parameters:    Size  Location     Type
  4692 ;;  addr            1    wreg     unsigned char 
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;  addr            1   17[BANK0 ] unsigned char 
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  1    wreg      unsigned char 
  4697 ;; Registers used:
  4698 ;;		wreg, status,2, status,0
  4699 ;; Tracked objects:
  4700 ;;		On entry : 100/100
  4701 ;;		On exit  : 300/200
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4704 ;;      Params:         0       0       0       0       0
  4705 ;;      Locals:         0       1       0       0       0
  4706 ;;      Temps:          0       1       0       0       0
  4707 ;;      Totals:         0       2       0       0       0
  4708 ;;Total ram usage:        2 bytes
  4709 ;; Hardware stack levels used: 1
  4710 ;; Hardware stack levels required when called: 2
  4711 ;; This function calls:
  4712 ;;		Nothing
  4713 ;; This function is called by:
  4714 ;;		_eepromRead
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718                           
  4719                           ;psect for function _eeprom_read
  4720  1E89                     _eeprom_read:
  4721                           
  4722                           ;incstack = 0
  4723                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  4724                           ;eeprom_read@addr stored from wreg
  4725  1E89  1283               	bcf	3,5	;RP0=0, select bank0
  4726  1E8A  1303               	bcf	3,6	;RP1=0, select bank0
  4727  1E8B  00B1               	movwf	eeprom_read@addr
  4728  1E8C  2E8F               	goto	l504
  4729  1E8D                     u2391:
  4730  1E8D  1283               	bcf	3,5	;RP0=0, select bank0
  4731  1E8E  1303               	bcf	3,6	;RP1=0, select bank0
  4732  1E8F                     l504:	
  4733                           ;/Applications/microchip/xc8/v2.32/pic/sources/c90/pic/__eeread.c: 6: eeprom_read(unsign
      +                          ed char addr);/Applications/microchip/xc8/v2.32/pic/sources/c90/pic/__eeread.c: 7: {;/Ap
      +                          plications/microchip/xc8/v2.32/pic/sources/c90/pic/__eeread.c: 8:  do
  4734                           
  4735  1E8F  0064               	clrwdt	;# 
  4736  1E90  1683               	bsf	3,5	;RP0=1, select bank3
  4737  1E91  1703               	bsf	3,6	;RP1=1, select bank3
  4738  1E92  188C               	btfsc	12,1	;volsfr
  4739  1E93  2E8D               	goto	u2391
  4740                           
  4741                           ;/Applications/microchip/xc8/v2.32/pic/sources/c90/pic/__eeread.c: 18:  return ( EEADR =
      +                           addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  4742  1E94  1283               	bcf	3,5	;RP0=0, select bank0
  4743  1E95  1303               	bcf	3,6	;RP1=0, select bank0
  4744  1E96  0831               	movf	eeprom_read@addr,w
  4745  1E97  1703               	bsf	3,6	;RP1=1, select bank2
  4746  1E98  008D               	movwf	13	;volatile
  4747  1E99  303F               	movlw	63
  4748  1E9A  1303               	bcf	3,6	;RP1=0, select bank0
  4749  1E9B  00B0               	movwf	??_eeprom_read
  4750  1E9C  0830               	movf	??_eeprom_read,w
  4751  1E9D  1683               	bsf	3,5	;RP0=1, select bank3
  4752  1E9E  1703               	bsf	3,6	;RP1=1, select bank3
  4753  1E9F  058C               	andwf	12,f	;volsfr
  4754  1EA0  140C               	bsf	12,0	;volsfr
  4755  1EA1  1283               	bcf	3,5	;RP0=0, select bank2
  4756  1EA2  080C               	movf	12,w	;volatile
  4757  1EA3  0008               	return
  4758  1EA4                     __end_of_eeprom_read:
  4759                           
  4760                           	psect	text9
  4761  1EC2                     __ptext9:	
  4762 ;; *************** function ___wmul *****************
  4763 ;; Defined at:
  4764 ;;		line 15 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/common/Umul16.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;  multiplier      2   18[BANK0 ] unsigned int 
  4767 ;;  multiplicand    2   20[BANK0 ] unsigned int 
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;  product         2   22[BANK0 ] unsigned int 
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  2   18[BANK0 ] unsigned int 
  4772 ;; Registers used:
  4773 ;;		wreg, status,2, status,0
  4774 ;; Tracked objects:
  4775 ;;		On entry : 300/0
  4776 ;;		On exit  : 300/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4779 ;;      Params:         0       4       0       0       0
  4780 ;;      Locals:         0       2       0       0       0
  4781 ;;      Temps:          0       0       0       0       0
  4782 ;;      Totals:         0       6       0       0       0
  4783 ;;Total ram usage:        6 bytes
  4784 ;; Hardware stack levels used: 1
  4785 ;; Hardware stack levels required when called: 2
  4786 ;; This function calls:
  4787 ;;		Nothing
  4788 ;; This function is called by:
  4789 ;;		_eepromRead
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           
  4794                           ;psect for function ___wmul
  4795  1EC2                     ___wmul:
  4796                           
  4797                           ;incstack = 0
  4798                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4799  1EC2  01B6               	clrf	___wmul@product
  4800  1EC3  01B7               	clrf	___wmul@product+1
  4801  1EC4                     l2502:
  4802  1EC4  1C32               	btfss	___wmul@multiplier,0
  4803  1EC5  2ECC               	goto	l534
  4804  1EC6  0834               	movf	___wmul@multiplicand,w
  4805  1EC7  07B6               	addwf	___wmul@product,f
  4806  1EC8  1803               	skipnc
  4807  1EC9  0AB7               	incf	___wmul@product+1,f
  4808  1ECA  0835               	movf	___wmul@multiplicand+1,w
  4809  1ECB  07B7               	addwf	___wmul@product+1,f
  4810  1ECC                     l534:
  4811  1ECC  3001               	movlw	1
  4812  1ECD                     u2825:
  4813  1ECD  1003               	clrc
  4814  1ECE  0DB4               	rlf	___wmul@multiplicand,f
  4815  1ECF  0DB5               	rlf	___wmul@multiplicand+1,f
  4816  1ED0  3EFF               	addlw	-1
  4817  1ED1  1D03               	skipz
  4818  1ED2  2ECD               	goto	u2825
  4819  1ED3  3001               	movlw	1
  4820  1ED4                     u2835:
  4821  1ED4  1003               	clrc
  4822  1ED5  0CB3               	rrf	___wmul@multiplier+1,f
  4823  1ED6  0CB2               	rrf	___wmul@multiplier,f
  4824  1ED7  3EFF               	addlw	-1
  4825  1ED8  1D03               	skipz
  4826  1ED9  2ED4               	goto	u2835
  4827  1EDA  0832               	movf	___wmul@multiplier,w
  4828  1EDB  0433               	iorwf	___wmul@multiplier+1,w
  4829  1EDC  1D03               	btfss	3,2
  4830  1EDD  2EC4               	goto	l2502
  4831  1EDE  0837               	movf	___wmul@product+1,w
  4832  1EDF  00B3               	movwf	?___wmul+1
  4833  1EE0  0836               	movf	___wmul@product,w
  4834  1EE1  00B2               	movwf	?___wmul
  4835  1EE2  0008               	return
  4836  1EE3                     __end_of___wmul:
  4837                           
  4838                           	psect	text10
  4839  1F75                     __ptext10:	
  4840 ;; *************** function ___lmul *****************
  4841 ;; Defined at:
  4842 ;;		line 15 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/common/Umul32.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;  multiplier      4   18[BANK0 ] unsigned long 
  4845 ;;  multiplicand    4   22[BANK0 ] unsigned long 
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;  product         4   27[BANK0 ] unsigned long 
  4848 ;; Return value:  Size  Location     Type
  4849 ;;                  4   18[BANK0 ] unsigned long 
  4850 ;; Registers used:
  4851 ;;		wreg, status,2, status,0
  4852 ;; Tracked objects:
  4853 ;;		On entry : 300/0
  4854 ;;		On exit  : 300/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4857 ;;      Params:         0       8       0       0       0
  4858 ;;      Locals:         0       4       0       0       0
  4859 ;;      Temps:          0       1       0       0       0
  4860 ;;      Totals:         0      13       0       0       0
  4861 ;;Total ram usage:       13 bytes
  4862 ;; Hardware stack levels used: 1
  4863 ;; Hardware stack levels required when called: 2
  4864 ;; This function calls:
  4865 ;;		Nothing
  4866 ;; This function is called by:
  4867 ;;		_main
  4868 ;;		_eepromRead
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           
  4873                           ;psect for function ___lmul
  4874  1F75                     ___lmul:
  4875                           
  4876                           ;incstack = 0
  4877                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4878  1F75  3000               	movlw	0
  4879  1F76  00BE               	movwf	___lmul@product+3
  4880  1F77  3000               	movlw	0
  4881  1F78  00BD               	movwf	___lmul@product+2
  4882  1F79  3000               	movlw	0
  4883  1F7A  00BC               	movwf	___lmul@product+1
  4884  1F7B  3000               	movlw	0
  4885  1F7C  00BB               	movwf	___lmul@product
  4886  1F7D                     l2516:
  4887  1F7D  1C32               	btfss	___lmul@multiplier,0
  4888  1F7E  2F93               	goto	l2520
  4889  1F7F  0836               	movf	___lmul@multiplicand,w
  4890  1F80  07BB               	addwf	___lmul@product,f
  4891  1F81  0837               	movf	___lmul@multiplicand+1,w
  4892  1F82  1103               	clrz
  4893  1F83  1803               	skipnc
  4894  1F84  3E01               	addlw	1
  4895  1F85  1D03               	btfss	3,2
  4896  1F86  07BC               	addwf	___lmul@product+1,f
  4897  1F87  0838               	movf	___lmul@multiplicand+2,w
  4898  1F88  1103               	clrz
  4899  1F89  1803               	skipnc
  4900  1F8A  3E01               	addlw	1
  4901  1F8B  1D03               	btfss	3,2
  4902  1F8C  07BD               	addwf	___lmul@product+2,f
  4903  1F8D  0839               	movf	___lmul@multiplicand+3,w
  4904  1F8E  1103               	clrz
  4905  1F8F  1803               	skipnc
  4906  1F90  3E01               	addlw	1
  4907  1F91  1D03               	btfss	3,2
  4908  1F92  07BE               	addwf	___lmul@product+3,f
  4909  1F93                     l2520:
  4910  1F93  3001               	movlw	1
  4911  1F94  00BA               	movwf	??___lmul
  4912  1F95                     u2875:
  4913  1F95  1003               	clrc
  4914  1F96  0DB6               	rlf	___lmul@multiplicand,f
  4915  1F97  0DB7               	rlf	___lmul@multiplicand+1,f
  4916  1F98  0DB8               	rlf	___lmul@multiplicand+2,f
  4917  1F99  0DB9               	rlf	___lmul@multiplicand+3,f
  4918  1F9A  0BBA               	decfsz	??___lmul,f
  4919  1F9B  2F95               	goto	u2875
  4920  1F9C  3001               	movlw	1
  4921  1F9D                     u2885:
  4922  1F9D  1003               	clrc
  4923  1F9E  0CB5               	rrf	___lmul@multiplier+3,f
  4924  1F9F  0CB4               	rrf	___lmul@multiplier+2,f
  4925  1FA0  0CB3               	rrf	___lmul@multiplier+1,f
  4926  1FA1  0CB2               	rrf	___lmul@multiplier,f
  4927  1FA2  3EFF               	addlw	-1
  4928  1FA3  1D03               	skipz
  4929  1FA4  2F9D               	goto	u2885
  4930  1FA5  0835               	movf	___lmul@multiplier+3,w
  4931  1FA6  0434               	iorwf	___lmul@multiplier+2,w
  4932  1FA7  0433               	iorwf	___lmul@multiplier+1,w
  4933  1FA8  0432               	iorwf	___lmul@multiplier,w
  4934  1FA9  1D03               	skipz
  4935  1FAA  2F7D               	goto	l2516
  4936  1FAB  083E               	movf	___lmul@product+3,w
  4937  1FAC  00B5               	movwf	?___lmul+3
  4938  1FAD  083D               	movf	___lmul@product+2,w
  4939  1FAE  00B4               	movwf	?___lmul+2
  4940  1FAF  083C               	movf	___lmul@product+1,w
  4941  1FB0  00B3               	movwf	?___lmul+1
  4942  1FB1  083B               	movf	___lmul@product,w
  4943  1FB2  00B2               	movwf	?___lmul
  4944  1FB3  0008               	return
  4945  1FB4                     __end_of___lmul:
  4946                           
  4947                           	psect	text11
  4948  09DC                     __ptext11:	
  4949 ;; *************** function _editValues *****************
  4950 ;; Defined at:
  4951 ;;		line 326 in file "newmain.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;		None
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;		None
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      void 
  4958 ;; Registers used:
  4959 ;;		wreg, status,2, status,0, pclath, cstack
  4960 ;; Tracked objects:
  4961 ;;		On entry : 300/100
  4962 ;;		On exit  : 200/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4965 ;;      Params:         0       0       0       0       0
  4966 ;;      Locals:         0       0       0       0       0
  4967 ;;      Temps:          0       1       0       0       0
  4968 ;;      Totals:         0       1       0       0       0
  4969 ;;Total ram usage:        1 bytes
  4970 ;; Hardware stack levels used: 1
  4971 ;; Hardware stack levels required when called: 3
  4972 ;; This function calls:
  4973 ;;		___lldiv
  4974 ;;		___llmod
  4975 ;;		_eeprom_write
  4976 ;;		_enterSwitch
  4977 ;; This function is called by:
  4978 ;;		_main
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982                           
  4983                           ;psect for function _editValues
  4984  09DC                     _editValues:
  4985                           
  4986                           ;newmain.c: 327:     if(editMenuPointer && enterSwitch()){
  4987                           
  4988                           ;incstack = 0
  4989                           ; Regs used in _editValues: [wreg+status,2+status,0+pclath+cstack]
  4990  09DC  083C               	movf	_editMenuPointer^(0+128),w	;volatile
  4991  09DD  1903               	btfsc	3,2
  4992  09DE  0008               	return
  4993  09DF  160A  158A  263E  120A  158A  	fcall	_enterSwitch
  4994  09E4  3A00               	xorlw	0
  4995  09E5  1903               	skipnz
  4996  09E6  0008               	return
  4997                           
  4998                           ;newmain.c: 328:         if(editValue){
  4999  09E7  1683               	bsf	3,5	;RP0=1, select bank1
  5000  09E8  083B               	movf	_editValue^(0+128),w	;volatile
  5001  09E9  1903               	btfsc	3,2
  5002  09EA  2CBC               	goto	l3572
  5003                           
  5004                           ;newmain.c: 330:             if(editValue == 3 && password != 9876){
  5005  09EB  3003               	movlw	3
  5006  09EC  063B               	xorwf	_editValue^(0+128),w	;volatile
  5007  09ED  1D03               	btfss	3,2
  5008  09EE  2A08               	goto	l3530
  5009  09EF  3094               	movlw	148
  5010  09F0  062C               	xorwf	_password^(0+128),w	;volatile
  5011  09F1  3026               	movlw	38
  5012  09F2  1903               	skipnz
  5013  09F3  062D               	xorwf	(_password+1)^(0+128),w	;volatile
  5014  09F4  042E               	iorwf	(_password+2)^(0+128),w	;volatile
  5015  09F5  042F               	iorwf	(_password+3)^(0+128),w	;volatile
  5016  09F6  1903               	btfsc	3,2
  5017  09F7  2A08               	goto	l3530
  5018                           
  5019                           ;newmain.c: 331:                 editMenuPointer = 0;
  5020  09F8  1683               	bsf	3,5	;RP0=1, select bank1
  5021  09F9  1303               	bcf	3,6	;RP1=0, select bank1
  5022  09FA  01BC               	clrf	_editMenuPointer^(0+128)	;volatile
  5023                           
  5024                           ;newmain.c: 332:                 editValue = 0;
  5025  09FB  01BB               	clrf	_editValue^(0+128)	;volatile
  5026                           
  5027                           ;newmain.c: 333:                 currentDisplay = 0;
  5028  09FC  1283               	bcf	3,5	;RP0=0, select bank0
  5029  09FD  01DB               	clrf	_currentDisplay	;volatile
  5030                           
  5031                           ;newmain.c: 334:                 password = 0;
  5032  09FE  3000               	movlw	0
  5033  09FF  1683               	bsf	3,5	;RP0=1, select bank1
  5034  0A00  00AF               	movwf	(_password+3)^(0+128)	;volatile
  5035  0A01  3000               	movlw	0
  5036  0A02  00AE               	movwf	(_password+2)^(0+128)	;volatile
  5037  0A03  3000               	movlw	0
  5038  0A04  00AD               	movwf	(_password+1)^(0+128)	;volatile
  5039  0A05  3000               	movlw	0
  5040  0A06  00AC               	movwf	_password^(0+128)	;volatile
  5041  0A07  0008               	return
  5042  0A08                     l3530:
  5043                           
  5044                           ;newmain.c: 338:         if(actualClothLength == 0){
  5045  0A08  1683               	bsf	3,5	;RP0=1, select bank1
  5046  0A09  1303               	bcf	3,6	;RP1=0, select bank1
  5047  0A0A  0853               	movf	(_actualClothLength+3)^(0+128),w	;volatile
  5048  0A0B  0452               	iorwf	(_actualClothLength+2)^(0+128),w	;volatile
  5049  0A0C  0451               	iorwf	(_actualClothLength+1)^(0+128),w	;volatile
  5050  0A0D  0450               	iorwf	_actualClothLength^(0+128),w	;volatile
  5051  0A0E  1D03               	skipz
  5052  0A0F  2A18               	goto	l294
  5053                           
  5054                           ;newmain.c: 339:             actualClothLength = 999;
  5055  0A10  3000               	movlw	0
  5056  0A11  00D3               	movwf	(_actualClothLength+3)^(0+128)	;volatile
  5057  0A12  3000               	movlw	0
  5058  0A13  00D2               	movwf	(_actualClothLength+2)^(0+128)	;volatile
  5059  0A14  3003               	movlw	3
  5060  0A15  00D1               	movwf	(_actualClothLength+1)^(0+128)	;volatile
  5061  0A16  30E7               	movlw	231
  5062  0A17  00D0               	movwf	_actualClothLength^(0+128)	;volatile
  5063  0A18                     l294:	
  5064                           ;newmain.c: 340:         }
  5065                           
  5066                           
  5067                           ;newmain.c: 341:         if(warningClothLength == 0){
  5068  0A18  084B               	movf	(_warningClothLength+3)^(0+128),w	;volatile
  5069  0A19  044A               	iorwf	(_warningClothLength+2)^(0+128),w	;volatile
  5070  0A1A  0449               	iorwf	(_warningClothLength+1)^(0+128),w	;volatile
  5071  0A1B  0448               	iorwf	_warningClothLength^(0+128),w	;volatile
  5072  0A1C  1D03               	skipz
  5073  0A1D  2A26               	goto	l295
  5074                           
  5075                           ;newmain.c: 342:             warningClothLength = 989;
  5076  0A1E  3000               	movlw	0
  5077  0A1F  00CB               	movwf	(_warningClothLength+3)^(0+128)	;volatile
  5078  0A20  3000               	movlw	0
  5079  0A21  00CA               	movwf	(_warningClothLength+2)^(0+128)	;volatile
  5080  0A22  3003               	movlw	3
  5081  0A23  00C9               	movwf	(_warningClothLength+1)^(0+128)	;volatile
  5082  0A24  30DD               	movlw	221
  5083  0A25  00C8               	movwf	_warningClothLength^(0+128)	;volatile
  5084  0A26                     l295:	
  5085                           ;newmain.c: 343:         }
  5086                           
  5087                           
  5088                           ;newmain.c: 344:         if(circumference == 0){
  5089  0A26  085B               	movf	(_circumference+3)^(0+128),w	;volatile
  5090  0A27  045A               	iorwf	(_circumference+2)^(0+128),w	;volatile
  5091  0A28  0459               	iorwf	(_circumference+1)^(0+128),w	;volatile
  5092  0A29  0458               	iorwf	_circumference^(0+128),w	;volatile
  5093  0A2A  1D03               	skipz
  5094  0A2B  2A34               	goto	l296
  5095                           
  5096                           ;newmain.c: 345:             circumference = 500;
  5097  0A2C  3000               	movlw	0
  5098  0A2D  00DB               	movwf	(_circumference+3)^(0+128)	;volatile
  5099  0A2E  3000               	movlw	0
  5100  0A2F  00DA               	movwf	(_circumference+2)^(0+128)	;volatile
  5101  0A30  3001               	movlw	1
  5102  0A31  00D9               	movwf	(_circumference+1)^(0+128)	;volatile
  5103  0A32  30F4               	movlw	244
  5104  0A33  00D8               	movwf	_circumference^(0+128)	;volatile
  5105  0A34                     l296:	
  5106                           ;newmain.c: 346:         }
  5107                           
  5108                           
  5109                           ;newmain.c: 347:         if(pulse == 0){
  5110  0A34  084F               	movf	(_pulse+3)^(0+128),w	;volatile
  5111  0A35  044E               	iorwf	(_pulse+2)^(0+128),w	;volatile
  5112  0A36  044D               	iorwf	(_pulse+1)^(0+128),w	;volatile
  5113  0A37  044C               	iorwf	_pulse^(0+128),w	;volatile
  5114  0A38  1D03               	skipz
  5115  0A39  2A42               	goto	l3540
  5116                           
  5117                           ;newmain.c: 348:             pulse = 4;
  5118  0A3A  3000               	movlw	0
  5119  0A3B  00CF               	movwf	(_pulse+3)^(0+128)	;volatile
  5120  0A3C  3000               	movlw	0
  5121  0A3D  00CE               	movwf	(_pulse+2)^(0+128)	;volatile
  5122  0A3E  3000               	movlw	0
  5123  0A3F  00CD               	movwf	(_pulse+1)^(0+128)	;volatile
  5124  0A40  3004               	movlw	4
  5125  0A41  00CC               	movwf	_pulse^(0+128)	;volatile
  5126  0A42                     l3540:
  5127                           
  5128                           ;newmain.c: 351:             editValue = 0;
  5129  0A42  01BB               	clrf	_editValue^(0+128)	;volatile
  5130                           
  5131                           ;newmain.c: 352:             currentDisplay = 0;
  5132  0A43  1283               	bcf	3,5	;RP0=0, select bank0
  5133  0A44  01DB               	clrf	_currentDisplay	;volatile
  5134                           
  5135                           ;newmain.c: 354:             eeprom_write(0x00,actualClothLength/(10000UL));
  5136  0A45  3000               	movlw	0
  5137  0A46  00C2               	movwf	___lldiv@divisor+3
  5138  0A47  3000               	movlw	0
  5139  0A48  00C1               	movwf	___lldiv@divisor+2
  5140  0A49  3027               	movlw	39
  5141  0A4A  00C0               	movwf	___lldiv@divisor+1
  5142  0A4B  3010               	movlw	16
  5143  0A4C  00BF               	movwf	___lldiv@divisor
  5144  0A4D  1683               	bsf	3,5	;RP0=1, select bank1
  5145  0A4E  0853               	movf	(_actualClothLength+3)^(0+128),w	;volatile
  5146  0A4F  1283               	bcf	3,5	;RP0=0, select bank0
  5147  0A50  00C6               	movwf	___lldiv@dividend+3
  5148  0A51  1683               	bsf	3,5	;RP0=1, select bank1
  5149  0A52  0852               	movf	(_actualClothLength+2)^(0+128),w	;volatile
  5150  0A53  1283               	bcf	3,5	;RP0=0, select bank0
  5151  0A54  00C5               	movwf	___lldiv@dividend+2
  5152  0A55  1683               	bsf	3,5	;RP0=1, select bank1
  5153  0A56  0851               	movf	(_actualClothLength+1)^(0+128),w	;volatile
  5154  0A57  1283               	bcf	3,5	;RP0=0, select bank0
  5155  0A58  00C4               	movwf	___lldiv@dividend+1
  5156  0A59  1683               	bsf	3,5	;RP0=1, select bank1
  5157  0A5A  0850               	movf	_actualClothLength^(0+128),w	;volatile
  5158  0A5B  1283               	bcf	3,5	;RP0=0, select bank0
  5159  0A5C  00C3               	movwf	___lldiv@dividend
  5160  0A5D  160A  118A  218F  120A  158A  	fcall	___lldiv
  5161  0A62  083F               	movf	?___lldiv,w
  5162  0A63  00D2               	movwf	??_editValues
  5163  0A64  0852               	movf	??_editValues,w
  5164  0A65  00CF               	movwf	eeprom_write@value
  5165  0A66  3000               	movlw	0
  5166  0A67  160A  158A  2729  120A  158A  	fcall	_eeprom_write
  5167                           
  5168                           ;newmain.c: 355:             eeprom_write(0x01,(actualClothLength/100)%100);
  5169  0A6C  3000               	movlw	0
  5170  0A6D  1303               	bcf	3,6	;RP1=0, select bank1
  5171  0A6E  00DF               	movwf	(___llmod@divisor+3)^(0+128)
  5172  0A6F  3000               	movlw	0
  5173  0A70  00DE               	movwf	(___llmod@divisor+2)^(0+128)
  5174  0A71  3000               	movlw	0
  5175  0A72  00DD               	movwf	(___llmod@divisor+1)^(0+128)
  5176  0A73  3064               	movlw	100
  5177  0A74  00DC               	movwf	___llmod@divisor^(0+128)
  5178  0A75  3000               	movlw	0
  5179  0A76  1283               	bcf	3,5	;RP0=0, select bank0
  5180  0A77  00C2               	movwf	___lldiv@divisor+3
  5181  0A78  3000               	movlw	0
  5182  0A79  00C1               	movwf	___lldiv@divisor+2
  5183  0A7A  3000               	movlw	0
  5184  0A7B  00C0               	movwf	___lldiv@divisor+1
  5185  0A7C  3064               	movlw	100
  5186  0A7D  00BF               	movwf	___lldiv@divisor
  5187  0A7E  1683               	bsf	3,5	;RP0=1, select bank1
  5188  0A7F  0853               	movf	(_actualClothLength+3)^(0+128),w	;volatile
  5189  0A80  1283               	bcf	3,5	;RP0=0, select bank0
  5190  0A81  00C6               	movwf	___lldiv@dividend+3
  5191  0A82  1683               	bsf	3,5	;RP0=1, select bank1
  5192  0A83  0852               	movf	(_actualClothLength+2)^(0+128),w	;volatile
  5193  0A84  1283               	bcf	3,5	;RP0=0, select bank0
  5194  0A85  00C5               	movwf	___lldiv@dividend+2
  5195  0A86  1683               	bsf	3,5	;RP0=1, select bank1
  5196  0A87  0851               	movf	(_actualClothLength+1)^(0+128),w	;volatile
  5197  0A88  1283               	bcf	3,5	;RP0=0, select bank0
  5198  0A89  00C4               	movwf	___lldiv@dividend+1
  5199  0A8A  1683               	bsf	3,5	;RP0=1, select bank1
  5200  0A8B  0850               	movf	_actualClothLength^(0+128),w	;volatile
  5201  0A8C  1283               	bcf	3,5	;RP0=0, select bank0
  5202  0A8D  00C3               	movwf	___lldiv@dividend
  5203  0A8E  160A  118A  218F  120A  158A  	fcall	___lldiv
  5204  0A93  0842               	movf	?___lldiv+3,w
  5205  0A94  1683               	bsf	3,5	;RP0=1, select bank1
  5206  0A95  00E3               	movwf	(___llmod@dividend+3)^(0+128)
  5207  0A96  1283               	bcf	3,5	;RP0=0, select bank0
  5208  0A97  0841               	movf	?___lldiv+2,w
  5209  0A98  1683               	bsf	3,5	;RP0=1, select bank1
  5210  0A99  00E2               	movwf	(___llmod@dividend+2)^(0+128)
  5211  0A9A  1283               	bcf	3,5	;RP0=0, select bank0
  5212  0A9B  0840               	movf	?___lldiv+1,w
  5213  0A9C  1683               	bsf	3,5	;RP0=1, select bank1
  5214  0A9D  00E1               	movwf	(___llmod@dividend+1)^(0+128)
  5215  0A9E  1283               	bcf	3,5	;RP0=0, select bank0
  5216  0A9F  083F               	movf	?___lldiv,w
  5217  0AA0  1683               	bsf	3,5	;RP0=1, select bank1
  5218  0AA1  00E0               	movwf	___llmod@dividend^(0+128)
  5219  0AA2  160A  118A  2087  120A  158A  	fcall	___llmod
  5220  0AA7  085C               	movf	?___llmod^(0+128),w
  5221  0AA8  1283               	bcf	3,5	;RP0=0, select bank0
  5222  0AA9  00D2               	movwf	??_editValues
  5223  0AAA  0852               	movf	??_editValues,w
  5224  0AAB  00CF               	movwf	eeprom_write@value
  5225  0AAC  3001               	movlw	1
  5226  0AAD  160A  158A  2729  120A  158A  	fcall	_eeprom_write
  5227                           
  5228                           ;newmain.c: 356:             eeprom_write(0x02,actualClothLength%100);
  5229  0AB2  3000               	movlw	0
  5230  0AB3  1303               	bcf	3,6	;RP1=0, select bank1
  5231  0AB4  00DF               	movwf	(___llmod@divisor+3)^(0+128)
  5232  0AB5  3000               	movlw	0
  5233  0AB6  00DE               	movwf	(___llmod@divisor+2)^(0+128)
  5234  0AB7  3000               	movlw	0
  5235  0AB8  00DD               	movwf	(___llmod@divisor+1)^(0+128)
  5236  0AB9  3064               	movlw	100
  5237  0ABA  00DC               	movwf	___llmod@divisor^(0+128)
  5238  0ABB  0853               	movf	(_actualClothLength+3)^(0+128),w	;volatile
  5239  0ABC  00E3               	movwf	(___llmod@dividend+3)^(0+128)
  5240  0ABD  0852               	movf	(_actualClothLength+2)^(0+128),w	;volatile
  5241  0ABE  00E2               	movwf	(___llmod@dividend+2)^(0+128)
  5242  0ABF  0851               	movf	(_actualClothLength+1)^(0+128),w	;volatile
  5243  0AC0  00E1               	movwf	(___llmod@dividend+1)^(0+128)
  5244  0AC1  0850               	movf	_actualClothLength^(0+128),w	;volatile
  5245  0AC2  00E0               	movwf	___llmod@dividend^(0+128)
  5246  0AC3  160A  118A  2087  120A  158A  	fcall	___llmod
  5247  0AC8  085C               	movf	?___llmod^(0+128),w
  5248  0AC9  1283               	bcf	3,5	;RP0=0, select bank0
  5249  0ACA  00D2               	movwf	??_editValues
  5250  0ACB  0852               	movf	??_editValues,w
  5251  0ACC  00CF               	movwf	eeprom_write@value
  5252  0ACD  3002               	movlw	2
  5253  0ACE  160A  158A  2729  120A  158A  	fcall	_eeprom_write
  5254                           
  5255                           ;newmain.c: 358:             eeprom_write(0x03,warningClothLength/(10000UL));
  5256  0AD3  3000               	movlw	0
  5257  0AD4  1283               	bcf	3,5	;RP0=0, select bank0
  5258  0AD5  1303               	bcf	3,6	;RP1=0, select bank0
  5259  0AD6  00C2               	movwf	___lldiv@divisor+3
  5260  0AD7  3000               	movlw	0
  5261  0AD8  00C1               	movwf	___lldiv@divisor+2
  5262  0AD9  3027               	movlw	39
  5263  0ADA  00C0               	movwf	___lldiv@divisor+1
  5264  0ADB  3010               	movlw	16
  5265  0ADC  00BF               	movwf	___lldiv@divisor
  5266  0ADD  1683               	bsf	3,5	;RP0=1, select bank1
  5267  0ADE  084B               	movf	(_warningClothLength+3)^(0+128),w	;volatile
  5268  0ADF  1283               	bcf	3,5	;RP0=0, select bank0
  5269  0AE0  00C6               	movwf	___lldiv@dividend+3
  5270  0AE1  1683               	bsf	3,5	;RP0=1, select bank1
  5271  0AE2  084A               	movf	(_warningClothLength+2)^(0+128),w	;volatile
  5272  0AE3  1283               	bcf	3,5	;RP0=0, select bank0
  5273  0AE4  00C5               	movwf	___lldiv@dividend+2
  5274  0AE5  1683               	bsf	3,5	;RP0=1, select bank1
  5275  0AE6  0849               	movf	(_warningClothLength+1)^(0+128),w	;volatile
  5276  0AE7  1283               	bcf	3,5	;RP0=0, select bank0
  5277  0AE8  00C4               	movwf	___lldiv@dividend+1
  5278  0AE9  1683               	bsf	3,5	;RP0=1, select bank1
  5279  0AEA  0848               	movf	_warningClothLength^(0+128),w	;volatile
  5280  0AEB  1283               	bcf	3,5	;RP0=0, select bank0
  5281  0AEC  00C3               	movwf	___lldiv@dividend
  5282  0AED  160A  118A  218F  120A  158A  	fcall	___lldiv
  5283  0AF2  083F               	movf	?___lldiv,w
  5284  0AF3  00D2               	movwf	??_editValues
  5285  0AF4  0852               	movf	??_editValues,w
  5286  0AF5  00CF               	movwf	eeprom_write@value
  5287  0AF6  3003               	movlw	3
  5288  0AF7  160A  158A  2729  120A  158A  	fcall	_eeprom_write
  5289                           
  5290                           ;newmain.c: 359:             eeprom_write(0x04,(warningClothLength/100)%100);
  5291  0AFC  3000               	movlw	0
  5292  0AFD  1303               	bcf	3,6	;RP1=0, select bank1
  5293  0AFE  00DF               	movwf	(___llmod@divisor+3)^(0+128)
  5294  0AFF  3000               	movlw	0
  5295  0B00  00DE               	movwf	(___llmod@divisor+2)^(0+128)
  5296  0B01  3000               	movlw	0
  5297  0B02  00DD               	movwf	(___llmod@divisor+1)^(0+128)
  5298  0B03  3064               	movlw	100
  5299  0B04  00DC               	movwf	___llmod@divisor^(0+128)
  5300  0B05  3000               	movlw	0
  5301  0B06  1283               	bcf	3,5	;RP0=0, select bank0
  5302  0B07  00C2               	movwf	___lldiv@divisor+3
  5303  0B08  3000               	movlw	0
  5304  0B09  00C1               	movwf	___lldiv@divisor+2
  5305  0B0A  3000               	movlw	0
  5306  0B0B  00C0               	movwf	___lldiv@divisor+1
  5307  0B0C  3064               	movlw	100
  5308  0B0D  00BF               	movwf	___lldiv@divisor
  5309  0B0E  1683               	bsf	3,5	;RP0=1, select bank1
  5310  0B0F  084B               	movf	(_warningClothLength+3)^(0+128),w	;volatile
  5311  0B10  1283               	bcf	3,5	;RP0=0, select bank0
  5312  0B11  00C6               	movwf	___lldiv@dividend+3
  5313  0B12  1683               	bsf	3,5	;RP0=1, select bank1
  5314  0B13  084A               	movf	(_warningClothLength+2)^(0+128),w	;volatile
  5315  0B14  1283               	bcf	3,5	;RP0=0, select bank0
  5316  0B15  00C5               	movwf	___lldiv@dividend+2
  5317  0B16  1683               	bsf	3,5	;RP0=1, select bank1
  5318  0B17  0849               	movf	(_warningClothLength+1)^(0+128),w	;volatile
  5319  0B18  1283               	bcf	3,5	;RP0=0, select bank0
  5320  0B19  00C4               	movwf	___lldiv@dividend+1
  5321  0B1A  1683               	bsf	3,5	;RP0=1, select bank1
  5322  0B1B  0848               	movf	_warningClothLength^(0+128),w	;volatile
  5323  0B1C  1283               	bcf	3,5	;RP0=0, select bank0
  5324  0B1D  00C3               	movwf	___lldiv@dividend
  5325  0B1E  160A  118A  218F  120A  158A  	fcall	___lldiv
  5326  0B23  0842               	movf	?___lldiv+3,w
  5327  0B24  1683               	bsf	3,5	;RP0=1, select bank1
  5328  0B25  00E3               	movwf	(___llmod@dividend+3)^(0+128)
  5329  0B26  1283               	bcf	3,5	;RP0=0, select bank0
  5330  0B27  0841               	movf	?___lldiv+2,w
  5331  0B28  1683               	bsf	3,5	;RP0=1, select bank1
  5332  0B29  00E2               	movwf	(___llmod@dividend+2)^(0+128)
  5333  0B2A  1283               	bcf	3,5	;RP0=0, select bank0
  5334  0B2B  0840               	movf	?___lldiv+1,w
  5335  0B2C  1683               	bsf	3,5	;RP0=1, select bank1
  5336  0B2D  00E1               	movwf	(___llmod@dividend+1)^(0+128)
  5337  0B2E  1283               	bcf	3,5	;RP0=0, select bank0
  5338  0B2F  083F               	movf	?___lldiv,w
  5339  0B30  1683               	bsf	3,5	;RP0=1, select bank1
  5340  0B31  00E0               	movwf	___llmod@dividend^(0+128)
  5341  0B32  160A  118A  2087  120A  158A  	fcall	___llmod
  5342  0B37  085C               	movf	?___llmod^(0+128),w
  5343  0B38  1283               	bcf	3,5	;RP0=0, select bank0
  5344  0B39  00D2               	movwf	??_editValues
  5345  0B3A  0852               	movf	??_editValues,w
  5346  0B3B  00CF               	movwf	eeprom_write@value
  5347  0B3C  3004               	movlw	4
  5348  0B3D  160A  158A  2729  120A  158A  	fcall	_eeprom_write
  5349                           
  5350                           ;newmain.c: 360:             eeprom_write(0x05,warningClothLength%100);
  5351  0B42  3000               	movlw	0
  5352  0B43  1303               	bcf	3,6	;RP1=0, select bank1
  5353  0B44  00DF               	movwf	(___llmod@divisor+3)^(0+128)
  5354  0B45  3000               	movlw	0
  5355  0B46  00DE               	movwf	(___llmod@divisor+2)^(0+128)
  5356  0B47  3000               	movlw	0
  5357  0B48  00DD               	movwf	(___llmod@divisor+1)^(0+128)
  5358  0B49  3064               	movlw	100
  5359  0B4A  00DC               	movwf	___llmod@divisor^(0+128)
  5360  0B4B  084B               	movf	(_warningClothLength+3)^(0+128),w	;volatile
  5361  0B4C  00E3               	movwf	(___llmod@dividend+3)^(0+128)
  5362  0B4D  084A               	movf	(_warningClothLength+2)^(0+128),w	;volatile
  5363  0B4E  00E2               	movwf	(___llmod@dividend+2)^(0+128)
  5364  0B4F  0849               	movf	(_warningClothLength+1)^(0+128),w	;volatile
  5365  0B50  00E1               	movwf	(___llmod@dividend+1)^(0+128)
  5366  0B51  0848               	movf	_warningClothLength^(0+128),w	;volatile
  5367  0B52  00E0               	movwf	___llmod@dividend^(0+128)
  5368  0B53  160A  118A  2087  120A  158A  	fcall	___llmod
  5369  0B58  085C               	movf	?___llmod^(0+128),w
  5370  0B59  1283               	bcf	3,5	;RP0=0, select bank0
  5371  0B5A  00D2               	movwf	??_editValues
  5372  0B5B  0852               	movf	??_editValues,w
  5373  0B5C  00CF               	movwf	eeprom_write@value
  5374  0B5D  3005               	movlw	5
  5375  0B5E  160A  158A  2729  120A  158A  	fcall	_eeprom_write
  5376                           
  5377                           ;newmain.c: 362:             eeprom_write(0x06,circumference/(10000UL));
  5378  0B63  3000               	movlw	0
  5379  0B64  1283               	bcf	3,5	;RP0=0, select bank0
  5380  0B65  1303               	bcf	3,6	;RP1=0, select bank0
  5381  0B66  00C2               	movwf	___lldiv@divisor+3
  5382  0B67  3000               	movlw	0
  5383  0B68  00C1               	movwf	___lldiv@divisor+2
  5384  0B69  3027               	movlw	39
  5385  0B6A  00C0               	movwf	___lldiv@divisor+1
  5386  0B6B  3010               	movlw	16
  5387  0B6C  00BF               	movwf	___lldiv@divisor
  5388  0B6D  1683               	bsf	3,5	;RP0=1, select bank1
  5389  0B6E  085B               	movf	(_circumference+3)^(0+128),w	;volatile
  5390  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  5391  0B70  00C6               	movwf	___lldiv@dividend+3
  5392  0B71  1683               	bsf	3,5	;RP0=1, select bank1
  5393  0B72  085A               	movf	(_circumference+2)^(0+128),w	;volatile
  5394  0B73  1283               	bcf	3,5	;RP0=0, select bank0
  5395  0B74  00C5               	movwf	___lldiv@dividend+2
  5396  0B75  1683               	bsf	3,5	;RP0=1, select bank1
  5397  0B76  0859               	movf	(_circumference+1)^(0+128),w	;volatile
  5398  0B77  1283               	bcf	3,5	;RP0=0, select bank0
  5399  0B78  00C4               	movwf	___lldiv@dividend+1
  5400  0B79  1683               	bsf	3,5	;RP0=1, select bank1
  5401  0B7A  0858               	movf	_circumference^(0+128),w	;volatile
  5402  0B7B  1283               	bcf	3,5	;RP0=0, select bank0
  5403  0B7C  00C3               	movwf	___lldiv@dividend
  5404  0B7D  160A  118A  218F  120A  158A  	fcall	___lldiv
  5405  0B82  083F               	movf	?___lldiv,w
  5406  0B83  00D2               	movwf	??_editValues
  5407  0B84  0852               	movf	??_editValues,w
  5408  0B85  00CF               	movwf	eeprom_write@value
  5409  0B86  3006               	movlw	6
  5410  0B87  160A  158A  2729  120A  158A  	fcall	_eeprom_write
  5411                           
  5412                           ;newmain.c: 363:             eeprom_write(0x07,(circumference/100)%100);
  5413  0B8C  3000               	movlw	0
  5414  0B8D  1303               	bcf	3,6	;RP1=0, select bank1
  5415  0B8E  00DF               	movwf	(___llmod@divisor+3)^(0+128)
  5416  0B8F  3000               	movlw	0
  5417  0B90  00DE               	movwf	(___llmod@divisor+2)^(0+128)
  5418  0B91  3000               	movlw	0
  5419  0B92  00DD               	movwf	(___llmod@divisor+1)^(0+128)
  5420  0B93  3064               	movlw	100
  5421  0B94  00DC               	movwf	___llmod@divisor^(0+128)
  5422  0B95  3000               	movlw	0
  5423  0B96  1283               	bcf	3,5	;RP0=0, select bank0
  5424  0B97  00C2               	movwf	___lldiv@divisor+3
  5425  0B98  3000               	movlw	0
  5426  0B99  00C1               	movwf	___lldiv@divisor+2
  5427  0B9A  3000               	movlw	0
  5428  0B9B  00C0               	movwf	___lldiv@divisor+1
  5429  0B9C  3064               	movlw	100
  5430  0B9D  00BF               	movwf	___lldiv@divisor
  5431  0B9E  1683               	bsf	3,5	;RP0=1, select bank1
  5432  0B9F  085B               	movf	(_circumference+3)^(0+128),w	;volatile
  5433  0BA0  1283               	bcf	3,5	;RP0=0, select bank0
  5434  0BA1  00C6               	movwf	___lldiv@dividend+3
  5435  0BA2  1683               	bsf	3,5	;RP0=1, select bank1
  5436  0BA3  085A               	movf	(_circumference+2)^(0+128),w	;volatile
  5437  0BA4  1283               	bcf	3,5	;RP0=0, select bank0
  5438  0BA5  00C5               	movwf	___lldiv@dividend+2
  5439  0BA6  1683               	bsf	3,5	;RP0=1, select bank1
  5440  0BA7  0859               	movf	(_circumference+1)^(0+128),w	;volatile
  5441  0BA8  1283               	bcf	3,5	;RP0=0, select bank0
  5442  0BA9  00C4               	movwf	___lldiv@dividend+1
  5443  0BAA  1683               	bsf	3,5	;RP0=1, select bank1
  5444  0BAB  0858               	movf	_circumference^(0+128),w	;volatile
  5445  0BAC  1283               	bcf	3,5	;RP0=0, select bank0
  5446  0BAD  00C3               	movwf	___lldiv@dividend
  5447  0BAE  160A  118A  218F  120A  158A  	fcall	___lldiv
  5448  0BB3  0842               	movf	?___lldiv+3,w
  5449  0BB4  1683               	bsf	3,5	;RP0=1, select bank1
  5450  0BB5  00E3               	movwf	(___llmod@dividend+3)^(0+128)
  5451  0BB6  1283               	bcf	3,5	;RP0=0, select bank0
  5452  0BB7  0841               	movf	?___lldiv+2,w
  5453  0BB8  1683               	bsf	3,5	;RP0=1, select bank1
  5454  0BB9  00E2               	movwf	(___llmod@dividend+2)^(0+128)
  5455  0BBA  1283               	bcf	3,5	;RP0=0, select bank0
  5456  0BBB  0840               	movf	?___lldiv+1,w
  5457  0BBC  1683               	bsf	3,5	;RP0=1, select bank1
  5458  0BBD  00E1               	movwf	(___llmod@dividend+1)^(0+128)
  5459  0BBE  1283               	bcf	3,5	;RP0=0, select bank0
  5460  0BBF  083F               	movf	?___lldiv,w
  5461  0BC0  1683               	bsf	3,5	;RP0=1, select bank1
  5462  0BC1  00E0               	movwf	___llmod@dividend^(0+128)
  5463  0BC2  160A  118A  2087  120A  158A  	fcall	___llmod
  5464  0BC7  085C               	movf	?___llmod^(0+128),w
  5465  0BC8  1283               	bcf	3,5	;RP0=0, select bank0
  5466  0BC9  00D2               	movwf	??_editValues
  5467  0BCA  0852               	movf	??_editValues,w
  5468  0BCB  00CF               	movwf	eeprom_write@value
  5469  0BCC  3007               	movlw	7
  5470  0BCD  160A  158A  2729  120A  158A  	fcall	_eeprom_write
  5471                           
  5472                           ;newmain.c: 364:             eeprom_write(0x08,circumference%100);
  5473  0BD2  3000               	movlw	0
  5474  0BD3  1303               	bcf	3,6	;RP1=0, select bank1
  5475  0BD4  00DF               	movwf	(___llmod@divisor+3)^(0+128)
  5476  0BD5  3000               	movlw	0
  5477  0BD6  00DE               	movwf	(___llmod@divisor+2)^(0+128)
  5478  0BD7  3000               	movlw	0
  5479  0BD8  00DD               	movwf	(___llmod@divisor+1)^(0+128)
  5480  0BD9  3064               	movlw	100
  5481  0BDA  00DC               	movwf	___llmod@divisor^(0+128)
  5482  0BDB  085B               	movf	(_circumference+3)^(0+128),w	;volatile
  5483  0BDC  00E3               	movwf	(___llmod@dividend+3)^(0+128)
  5484  0BDD  085A               	movf	(_circumference+2)^(0+128),w	;volatile
  5485  0BDE  00E2               	movwf	(___llmod@dividend+2)^(0+128)
  5486  0BDF  0859               	movf	(_circumference+1)^(0+128),w	;volatile
  5487  0BE0  00E1               	movwf	(___llmod@dividend+1)^(0+128)
  5488  0BE1  0858               	movf	_circumference^(0+128),w	;volatile
  5489  0BE2  00E0               	movwf	___llmod@dividend^(0+128)
  5490  0BE3  160A  118A  2087  120A  158A  	fcall	___llmod
  5491  0BE8  085C               	movf	?___llmod^(0+128),w
  5492  0BE9  1283               	bcf	3,5	;RP0=0, select bank0
  5493  0BEA  00D2               	movwf	??_editValues
  5494  0BEB  0852               	movf	??_editValues,w
  5495  0BEC  00CF               	movwf	eeprom_write@value
  5496  0BED  3008               	movlw	8
  5497  0BEE  160A  158A  2729  120A  158A  	fcall	_eeprom_write
  5498                           
  5499                           ;newmain.c: 366:             eeprom_write(0x09,pulse/(10000UL));
  5500  0BF3  3000               	movlw	0
  5501  0BF4  1283               	bcf	3,5	;RP0=0, select bank0
  5502  0BF5  1303               	bcf	3,6	;RP1=0, select bank0
  5503  0BF6  00C2               	movwf	___lldiv@divisor+3
  5504  0BF7  3000               	movlw	0
  5505  0BF8  00C1               	movwf	___lldiv@divisor+2
  5506  0BF9  3027               	movlw	39
  5507  0BFA  00C0               	movwf	___lldiv@divisor+1
  5508  0BFB  3010               	movlw	16
  5509  0BFC  00BF               	movwf	___lldiv@divisor
  5510  0BFD  1683               	bsf	3,5	;RP0=1, select bank1
  5511  0BFE  084F               	movf	(_pulse+3)^(0+128),w	;volatile
  5512  0BFF  1283               	bcf	3,5	;RP0=0, select bank0
  5513  0C00  00C6               	movwf	___lldiv@dividend+3
  5514  0C01  1683               	bsf	3,5	;RP0=1, select bank1
  5515  0C02  084E               	movf	(_pulse+2)^(0+128),w	;volatile
  5516  0C03  1283               	bcf	3,5	;RP0=0, select bank0
  5517  0C04  00C5               	movwf	___lldiv@dividend+2
  5518  0C05  1683               	bsf	3,5	;RP0=1, select bank1
  5519  0C06  084D               	movf	(_pulse+1)^(0+128),w	;volatile
  5520  0C07  1283               	bcf	3,5	;RP0=0, select bank0
  5521  0C08  00C4               	movwf	___lldiv@dividend+1
  5522  0C09  1683               	bsf	3,5	;RP0=1, select bank1
  5523  0C0A  084C               	movf	_pulse^(0+128),w	;volatile
  5524  0C0B  1283               	bcf	3,5	;RP0=0, select bank0
  5525  0C0C  00C3               	movwf	___lldiv@dividend
  5526  0C0D  160A  118A  218F  120A  158A  	fcall	___lldiv
  5527  0C12  083F               	movf	?___lldiv,w
  5528  0C13  00D2               	movwf	??_editValues
  5529  0C14  0852               	movf	??_editValues,w
  5530  0C15  00CF               	movwf	eeprom_write@value
  5531  0C16  3009               	movlw	9
  5532  0C17  160A  158A  2729  120A  158A  	fcall	_eeprom_write
  5533                           
  5534                           ;newmain.c: 367:             eeprom_write(0x0A,(pulse/100)%100);
  5535  0C1C  3000               	movlw	0
  5536  0C1D  1303               	bcf	3,6	;RP1=0, select bank1
  5537  0C1E  00DF               	movwf	(___llmod@divisor+3)^(0+128)
  5538  0C1F  3000               	movlw	0
  5539  0C20  00DE               	movwf	(___llmod@divisor+2)^(0+128)
  5540  0C21  3000               	movlw	0
  5541  0C22  00DD               	movwf	(___llmod@divisor+1)^(0+128)
  5542  0C23  3064               	movlw	100
  5543  0C24  00DC               	movwf	___llmod@divisor^(0+128)
  5544  0C25  3000               	movlw	0
  5545  0C26  1283               	bcf	3,5	;RP0=0, select bank0
  5546  0C27  00C2               	movwf	___lldiv@divisor+3
  5547  0C28  3000               	movlw	0
  5548  0C29  00C1               	movwf	___lldiv@divisor+2
  5549  0C2A  3000               	movlw	0
  5550  0C2B  00C0               	movwf	___lldiv@divisor+1
  5551  0C2C  3064               	movlw	100
  5552  0C2D  00BF               	movwf	___lldiv@divisor
  5553  0C2E  1683               	bsf	3,5	;RP0=1, select bank1
  5554  0C2F  084F               	movf	(_pulse+3)^(0+128),w	;volatile
  5555  0C30  1283               	bcf	3,5	;RP0=0, select bank0
  5556  0C31  00C6               	movwf	___lldiv@dividend+3
  5557  0C32  1683               	bsf	3,5	;RP0=1, select bank1
  5558  0C33  084E               	movf	(_pulse+2)^(0+128),w	;volatile
  5559  0C34  1283               	bcf	3,5	;RP0=0, select bank0
  5560  0C35  00C5               	movwf	___lldiv@dividend+2
  5561  0C36  1683               	bsf	3,5	;RP0=1, select bank1
  5562  0C37  084D               	movf	(_pulse+1)^(0+128),w	;volatile
  5563  0C38  1283               	bcf	3,5	;RP0=0, select bank0
  5564  0C39  00C4               	movwf	___lldiv@dividend+1
  5565  0C3A  1683               	bsf	3,5	;RP0=1, select bank1
  5566  0C3B  084C               	movf	_pulse^(0+128),w	;volatile
  5567  0C3C  1283               	bcf	3,5	;RP0=0, select bank0
  5568  0C3D  00C3               	movwf	___lldiv@dividend
  5569  0C3E  160A  118A  218F  120A  158A  	fcall	___lldiv
  5570  0C43  0842               	movf	?___lldiv+3,w
  5571  0C44  1683               	bsf	3,5	;RP0=1, select bank1
  5572  0C45  00E3               	movwf	(___llmod@dividend+3)^(0+128)
  5573  0C46  1283               	bcf	3,5	;RP0=0, select bank0
  5574  0C47  0841               	movf	?___lldiv+2,w
  5575  0C48  1683               	bsf	3,5	;RP0=1, select bank1
  5576  0C49  00E2               	movwf	(___llmod@dividend+2)^(0+128)
  5577  0C4A  1283               	bcf	3,5	;RP0=0, select bank0
  5578  0C4B  0840               	movf	?___lldiv+1,w
  5579  0C4C  1683               	bsf	3,5	;RP0=1, select bank1
  5580  0C4D  00E1               	movwf	(___llmod@dividend+1)^(0+128)
  5581  0C4E  1283               	bcf	3,5	;RP0=0, select bank0
  5582  0C4F  083F               	movf	?___lldiv,w
  5583  0C50  1683               	bsf	3,5	;RP0=1, select bank1
  5584  0C51  00E0               	movwf	___llmod@dividend^(0+128)
  5585  0C52  160A  118A  2087  120A  158A  	fcall	___llmod
  5586  0C57  085C               	movf	?___llmod^(0+128),w
  5587  0C58  1283               	bcf	3,5	;RP0=0, select bank0
  5588  0C59  00D2               	movwf	??_editValues
  5589  0C5A  0852               	movf	??_editValues,w
  5590  0C5B  00CF               	movwf	eeprom_write@value
  5591  0C5C  300A               	movlw	10
  5592  0C5D  160A  158A  2729  120A  158A  	fcall	_eeprom_write
  5593                           
  5594                           ;newmain.c: 368:             eeprom_write(0x0B,pulse%100);
  5595  0C62  3000               	movlw	0
  5596  0C63  1303               	bcf	3,6	;RP1=0, select bank1
  5597  0C64  00DF               	movwf	(___llmod@divisor+3)^(0+128)
  5598  0C65  3000               	movlw	0
  5599  0C66  00DE               	movwf	(___llmod@divisor+2)^(0+128)
  5600  0C67  3000               	movlw	0
  5601  0C68  00DD               	movwf	(___llmod@divisor+1)^(0+128)
  5602  0C69  3064               	movlw	100
  5603  0C6A  00DC               	movwf	___llmod@divisor^(0+128)
  5604  0C6B  084F               	movf	(_pulse+3)^(0+128),w	;volatile
  5605  0C6C  00E3               	movwf	(___llmod@dividend+3)^(0+128)
  5606  0C6D  084E               	movf	(_pulse+2)^(0+128),w	;volatile
  5607  0C6E  00E2               	movwf	(___llmod@dividend+2)^(0+128)
  5608  0C6F  084D               	movf	(_pulse+1)^(0+128),w	;volatile
  5609  0C70  00E1               	movwf	(___llmod@dividend+1)^(0+128)
  5610  0C71  084C               	movf	_pulse^(0+128),w	;volatile
  5611  0C72  00E0               	movwf	___llmod@dividend^(0+128)
  5612  0C73  160A  118A  2087  120A  158A  	fcall	___llmod
  5613  0C78  085C               	movf	?___llmod^(0+128),w
  5614  0C79  1283               	bcf	3,5	;RP0=0, select bank0
  5615  0C7A  00D2               	movwf	??_editValues
  5616  0C7B  0852               	movf	??_editValues,w
  5617  0C7C  00CF               	movwf	eeprom_write@value
  5618  0C7D  300B               	movlw	11
  5619  0C7E  160A  158A  2729  120A  158A  	fcall	_eeprom_write
  5620                           
  5621                           ;newmain.c: 370:             editMenuPointer += 1;
  5622  0C83  3001               	movlw	1
  5623  0C84  1283               	bcf	3,5	;RP0=0, select bank0
  5624  0C85  1303               	bcf	3,6	;RP1=0, select bank0
  5625  0C86  00D2               	movwf	??_editValues
  5626  0C87  0852               	movf	??_editValues,w
  5627  0C88  1683               	bsf	3,5	;RP0=1, select bank1
  5628  0C89  07BC               	addwf	_editMenuPointer^(0+128),f	;volatile
  5629                           
  5630                           ;newmain.c: 372:             countingPulse = (circumference)/pulse;
  5631  0C8A  084F               	movf	(_pulse+3)^(0+128),w	;volatile
  5632  0C8B  1283               	bcf	3,5	;RP0=0, select bank0
  5633  0C8C  00C2               	movwf	___lldiv@divisor+3
  5634  0C8D  1683               	bsf	3,5	;RP0=1, select bank1
  5635  0C8E  084E               	movf	(_pulse+2)^(0+128),w	;volatile
  5636  0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  5637  0C90  00C1               	movwf	___lldiv@divisor+2
  5638  0C91  1683               	bsf	3,5	;RP0=1, select bank1
  5639  0C92  084D               	movf	(_pulse+1)^(0+128),w	;volatile
  5640  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  5641  0C94  00C0               	movwf	___lldiv@divisor+1
  5642  0C95  1683               	bsf	3,5	;RP0=1, select bank1
  5643  0C96  084C               	movf	_pulse^(0+128),w	;volatile
  5644  0C97  1283               	bcf	3,5	;RP0=0, select bank0
  5645  0C98  00BF               	movwf	___lldiv@divisor
  5646  0C99  1683               	bsf	3,5	;RP0=1, select bank1
  5647  0C9A  085B               	movf	(_circumference+3)^(0+128),w	;volatile
  5648  0C9B  1283               	bcf	3,5	;RP0=0, select bank0
  5649  0C9C  00C6               	movwf	___lldiv@dividend+3
  5650  0C9D  1683               	bsf	3,5	;RP0=1, select bank1
  5651  0C9E  085A               	movf	(_circumference+2)^(0+128),w	;volatile
  5652  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  5653  0CA0  00C5               	movwf	___lldiv@dividend+2
  5654  0CA1  1683               	bsf	3,5	;RP0=1, select bank1
  5655  0CA2  0859               	movf	(_circumference+1)^(0+128),w	;volatile
  5656  0CA3  1283               	bcf	3,5	;RP0=0, select bank0
  5657  0CA4  00C4               	movwf	___lldiv@dividend+1
  5658  0CA5  1683               	bsf	3,5	;RP0=1, select bank1
  5659  0CA6  0858               	movf	_circumference^(0+128),w	;volatile
  5660  0CA7  1283               	bcf	3,5	;RP0=0, select bank0
  5661  0CA8  00C3               	movwf	___lldiv@dividend
  5662  0CA9  160A  118A  218F   	fcall	___lldiv
  5663  0CAC  0842               	movf	?___lldiv+3,w
  5664  0CAD  1683               	bsf	3,5	;RP0=1, select bank1
  5665  0CAE  00A3               	movwf	(_countingPulse+3)^(0+128)	;volatile
  5666  0CAF  1283               	bcf	3,5	;RP0=0, select bank0
  5667  0CB0  0841               	movf	?___lldiv+2,w
  5668  0CB1  1683               	bsf	3,5	;RP0=1, select bank1
  5669  0CB2  00A2               	movwf	(_countingPulse+2)^(0+128)	;volatile
  5670  0CB3  1283               	bcf	3,5	;RP0=0, select bank0
  5671  0CB4  0840               	movf	?___lldiv+1,w
  5672  0CB5  1683               	bsf	3,5	;RP0=1, select bank1
  5673  0CB6  00A1               	movwf	(_countingPulse+1)^(0+128)	;volatile
  5674  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  5675  0CB8  083F               	movf	?___lldiv,w
  5676  0CB9  1683               	bsf	3,5	;RP0=1, select bank1
  5677  0CBA  00A0               	movwf	_countingPulse^(0+128)	;volatile
  5678                           
  5679                           ;newmain.c: 374:         }
  5680  0CBB  0008               	return
  5681  0CBC                     l3572:
  5682  0CBC  083B               	movf	_editValue^(0+128),w	;volatile
  5683  0CBD  1D03               	btfss	3,2
  5684  0CBE  0008               	return
  5685                           
  5686                           ;newmain.c: 376:             editValue = editMenuPointer;
  5687  0CBF  083C               	movf	_editMenuPointer^(0+128),w	;volatile
  5688  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  5689  0CC1  00D2               	movwf	??_editValues
  5690  0CC2  0852               	movf	??_editValues,w
  5691  0CC3  1683               	bsf	3,5	;RP0=1, select bank1
  5692  0CC4  00BB               	movwf	_editValue^(0+128)	;volatile
  5693                           
  5694                           ;newmain.c: 377:             currentDisplay = 1;
  5695  0CC5  3001               	movlw	1
  5696  0CC6  1283               	bcf	3,5	;RP0=0, select bank0
  5697  0CC7  00D2               	movwf	??_editValues
  5698  0CC8  0852               	movf	??_editValues,w
  5699  0CC9  00DB               	movwf	_currentDisplay	;volatile
  5700  0CCA  0008               	return
  5701  0CCB                     __end_of_editValues:
  5702                           
  5703                           	psect	text12
  5704  1E3E                     __ptext12:	
  5705 ;; *************** function _enterSwitch *****************
  5706 ;; Defined at:
  5707 ;;		line 583 in file "newmain.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;		None
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;		None
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  1    wreg      unsigned char 
  5714 ;; Registers used:
  5715 ;;		wreg, status,2
  5716 ;; Tracked objects:
  5717 ;;		On entry : 300/100
  5718 ;;		On exit  : 200/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5721 ;;      Params:         0       0       0       0       0
  5722 ;;      Locals:         0       0       0       0       0
  5723 ;;      Temps:          0       0       0       0       0
  5724 ;;      Totals:         0       0       0       0       0
  5725 ;;Total ram usage:        0 bytes
  5726 ;; Hardware stack levels used: 1
  5727 ;; Hardware stack levels required when called: 2
  5728 ;; This function calls:
  5729 ;;		Nothing
  5730 ;; This function is called by:
  5731 ;;		_editValues
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           
  5736                           ;psect for function _enterSwitch
  5737  1E3E                     _enterSwitch:
  5738                           
  5739                           ;newmain.c: 585:     if(RD3 == 1 && enterFlag == 1){
  5740                           
  5741                           ;incstack = 0
  5742                           ; Regs used in _enterSwitch: [wreg+status,2]
  5743  1E3E  1283               	bcf	3,5	;RP0=0, select bank0
  5744  1E3F  1988               	btfsc	8,3	;volatile
  5745  1E40  1FD3               	btfss	_enterFlag/(0+8),_enterFlag& (0+7)	;volatile
  5746  1E41  2E45               	goto	l357
  5747                           
  5748                           ;newmain.c: 586:         enterFlag = 0;
  5749  1E42  13D3               	bcf	_enterFlag/(0+8),_enterFlag& (0+7)	;volatile
  5750                           
  5751                           ;newmain.c: 587:         return 1;
  5752  1E43  3001               	movlw	1
  5753  1E44  0008               	return
  5754  1E45                     l357:	
  5755                           ;newmain.c: 588:     }
  5756                           
  5757                           
  5758                           ;newmain.c: 589:     if(RD3 == 0){
  5759  1E45  1988               	btfsc	8,3	;volatile
  5760  1E46  2E4A               	goto	l2496
  5761                           
  5762                           ;newmain.c: 590:         enterFlag = 1;
  5763  1E47  17D3               	bsf	_enterFlag/(0+8),_enterFlag& (0+7)	;volatile
  5764                           
  5765                           ;newmain.c: 591:         skipCount = 0;
  5766  1E48  1683               	bsf	3,5	;RP0=1, select bank1
  5767  1E49  01B8               	clrf	_skipCount^(0+128)	;volatile
  5768  1E4A                     l2496:
  5769                           
  5770                           ;newmain.c: 593:     return 0;
  5771  1E4A  3000               	movlw	0
  5772  1E4B  0008               	return
  5773  1E4C                     __end_of_enterSwitch:
  5774                           
  5775                           	psect	text13
  5776  1F29                     __ptext13:	
  5777 ;; *************** function _eeprom_write *****************
  5778 ;; Defined at:
  5779 ;;		line 6 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/pic/__eewrite.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;  addr            1    wreg     unsigned char 
  5782 ;;  value           1   47[BANK0 ] unsigned char 
  5783 ;; Auto vars:     Size  Location     Type
  5784 ;;  addr            1   49[BANK0 ] unsigned char 
  5785 ;; Return value:  Size  Location     Type
  5786 ;;                  1    wreg      void 
  5787 ;; Registers used:
  5788 ;;		wreg, status,2, status,0
  5789 ;; Tracked objects:
  5790 ;;		On entry : 300/0
  5791 ;;		On exit  : 300/300
  5792 ;;		Unchanged: 0/0
  5793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5794 ;;      Params:         0       1       0       0       0
  5795 ;;      Locals:         0       1       0       0       0
  5796 ;;      Temps:          0       1       0       0       0
  5797 ;;      Totals:         0       3       0       0       0
  5798 ;;Total ram usage:        3 bytes
  5799 ;; Hardware stack levels used: 1
  5800 ;; Hardware stack levels required when called: 2
  5801 ;; This function calls:
  5802 ;;		Nothing
  5803 ;; This function is called by:
  5804 ;;		_main
  5805 ;;		_editValues
  5806 ;; This function uses a non-reentrant model
  5807 ;;
  5808                           
  5809                           
  5810                           ;psect for function _eeprom_write
  5811  1F29                     _eeprom_write:
  5812                           
  5813                           ;incstack = 0
  5814                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  5815                           ;eeprom_write@addr stored from wreg
  5816  1F29  00D1               	movwf	eeprom_write@addr
  5817  1F2A                     l524:	
  5818                           ;/Applications/microchip/xc8/v2.32/pic/sources/c90/pic/__eewrite.c: 6: eeprom_write(unsi
      +                          gned char addr, unsigned char value);/Applications/microchip/xc8/v2.32/pic/sources/c90/p
      +                          ic/__eewrite.c: 7: {;/Applications/microchip/xc8/v2.32/pic/sources/c90/pic/__eewrite.c: 
      +                          8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); EECON1 &= 
      +                          0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCONbits.GIE
      +                           = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EECON1bits.W
      +                          REN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  5819                           
  5820  1F2A  1683               	bsf	3,5	;RP0=1, select bank3
  5821  1F2B  1703               	bsf	3,6	;RP1=1, select bank3
  5822  1F2C  188C               	btfsc	12,1	;volsfr
  5823  1F2D  2F2A               	goto	l524
  5824  1F2E  1283               	bcf	3,5	;RP0=0, select bank0
  5825  1F2F  1303               	bcf	3,6	;RP1=0, select bank0
  5826  1F30  0851               	movf	eeprom_write@addr,w
  5827  1F31  1703               	bsf	3,6	;RP1=1, select bank2
  5828  1F32  008D               	movwf	13	;volatile
  5829  1F33  1303               	bcf	3,6	;RP1=0, select bank0
  5830  1F34  084F               	movf	eeprom_write@value,w
  5831  1F35  1703               	bsf	3,6	;RP1=1, select bank2
  5832  1F36  008C               	movwf	12	;volatile
  5833  1F37  303F               	movlw	63
  5834  1F38  1303               	bcf	3,6	;RP1=0, select bank0
  5835  1F39  00D0               	movwf	??_eeprom_write
  5836  1F3A  0850               	movf	??_eeprom_write,w
  5837  1F3B  1683               	bsf	3,5	;RP0=1, select bank3
  5838  1F3C  1703               	bsf	3,6	;RP1=1, select bank3
  5839  1F3D  058C               	andwf	12,f	;volsfr
  5840  1F3E  1003               	bcf	3,0	;volatile
  5841  1F3F  1B8B               	btfsc	11,7	;volatile
  5842  1F40  1403               	bsf	3,0	;volatile
  5843  1F41  138B               	bcf	11,7	;volatile
  5844  1F42  150C               	bsf	12,2	;volsfr
  5845  1F43  3055               	movlw	85
  5846  1F44  008D               	movwf	13	;volsfr
  5847  1F45  30AA               	movlw	170
  5848  1F46  008D               	movwf	13	;volsfr
  5849  1F47  148C               	bsf	12,1	;volsfr
  5850  1F48  110C               	bcf	12,2	;volsfr
  5851  1F49  1C03               	btfss	3,0	;volatile
  5852  1F4A  0008               	return
  5853  1F4B  178B               	bsf	11,7	;volatile
  5854  1F4C  0008               	return
  5855  1F4D                     __end_of_eeprom_write:
  5856                           
  5857                           	psect	text14
  5858  146D                     __ptext14:	
  5859 ;; *************** function _editMenu *****************
  5860 ;; Defined at:
  5861 ;;		line 261 in file "newmain.c"
  5862 ;; Parameters:    Size  Location     Type
  5863 ;;		None
  5864 ;; Auto vars:     Size  Location     Type
  5865 ;;		None
  5866 ;; Return value:  Size  Location     Type
  5867 ;;                  1    wreg      void 
  5868 ;; Registers used:
  5869 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5870 ;; Tracked objects:
  5871 ;;		On entry : 0/100
  5872 ;;		On exit  : 300/100
  5873 ;;		Unchanged: 0/0
  5874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5875 ;;      Params:         0       0       0       0       0
  5876 ;;      Locals:         0       0       0       0       0
  5877 ;;      Temps:          0       0       0       1       0
  5878 ;;      Totals:         0       0       0       1       0
  5879 ;;Total ram usage:        1 bytes
  5880 ;; Hardware stack levels used: 1
  5881 ;; Hardware stack levels required when called: 5
  5882 ;; This function calls:
  5883 ;;		_display1
  5884 ;;		_displayChange
  5885 ;;		_displayString
  5886 ;;		_menuSwitch
  5887 ;; This function is called by:
  5888 ;;		_main
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891                           
  5892                           
  5893                           ;psect for function _editMenu
  5894  146D                     _editMenu:
  5895                           
  5896                           ;newmain.c: 263:     if(editMenuPointer == 1){
  5897                           
  5898                           ;incstack = 0
  5899                           ; Regs used in _editMenu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5900  146D  1683               	bsf	3,5	;RP0=1, select bank1
  5901  146E  1303               	bcf	3,6	;RP1=0, select bank1
  5902  146F  033C               	decf	_editMenuPointer^(0+128),w	;volatile
  5903  1470  1D03               	btfss	3,2
  5904  1471  2CB2               	goto	l3454
  5905                           
  5906                           ;newmain.c: 264:         if(editValue == 1){
  5907  1472  033B               	decf	_editValue^(0+128),w	;volatile
  5908  1473  1D03               	btfss	3,2
  5909  1474  2CB0               	goto	l3452
  5910                           
  5911                           ;newmain.c: 265:             display1(actualClothLength);
  5912  1475  0853               	movf	(_actualClothLength+3)^(0+128),w	;volatile
  5913  1476  1283               	bcf	3,5	;RP0=0, select bank0
  5914  1477  00D2               	movwf	display1@value+3
  5915  1478  1683               	bsf	3,5	;RP0=1, select bank1
  5916  1479  0852               	movf	(_actualClothLength+2)^(0+128),w	;volatile
  5917  147A  1283               	bcf	3,5	;RP0=0, select bank0
  5918  147B  00D1               	movwf	display1@value+2
  5919  147C  1683               	bsf	3,5	;RP0=1, select bank1
  5920  147D  0851               	movf	(_actualClothLength+1)^(0+128),w	;volatile
  5921  147E  1283               	bcf	3,5	;RP0=0, select bank0
  5922  147F  00D0               	movwf	display1@value+1
  5923  1480  1683               	bsf	3,5	;RP0=1, select bank1
  5924  1481  0850               	movf	_actualClothLength^(0+128),w	;volatile
  5925  1482  1283               	bcf	3,5	;RP0=0, select bank0
  5926  1483  00CF               	movwf	display1@value
  5927  1484  160A  118A  25FD  160A  118A  	fcall	_display1
  5928                           
  5929                           ;newmain.c: 266:             actualClothLength = displayChange(actualClothLength);
  5930  1489  1683               	bsf	3,5	;RP0=1, select bank1
  5931  148A  0853               	movf	(_actualClothLength+3)^(0+128),w	;volatile
  5932  148B  1703               	bsf	3,6	;RP1=1, select bank3
  5933  148C  0093               	movwf	(displayChange@value+3)^(0+384)
  5934  148D  1303               	bcf	3,6	;RP1=0, select bank1
  5935  148E  0852               	movf	(_actualClothLength+2)^(0+128),w	;volatile
  5936  148F  1703               	bsf	3,6	;RP1=1, select bank3
  5937  1490  0092               	movwf	(displayChange@value+2)^(0+384)
  5938  1491  1303               	bcf	3,6	;RP1=0, select bank1
  5939  1492  0851               	movf	(_actualClothLength+1)^(0+128),w	;volatile
  5940  1493  1703               	bsf	3,6	;RP1=1, select bank3
  5941  1494  0091               	movwf	(displayChange@value+1)^(0+384)
  5942  1495  1303               	bcf	3,6	;RP1=0, select bank1
  5943  1496  0850               	movf	_actualClothLength^(0+128),w	;volatile
  5944  1497  1703               	bsf	3,6	;RP1=1, select bank3
  5945  1498  0090               	movwf	displayChange@value^(0+384)
  5946  1499  160A  118A  20DB  160A  118A  	fcall	_displayChange
  5947  149E  1683               	bsf	3,5	;RP0=1, select bank3
  5948  149F  1703               	bsf	3,6	;RP1=1, select bank3
  5949  14A0  0813               	movf	(?_displayChange+3)^(0+384),w
  5950  14A1  1303               	bcf	3,6	;RP1=0, select bank1
  5951  14A2  00D3               	movwf	(_actualClothLength+3)^(0+128)	;volatile
  5952  14A3  1703               	bsf	3,6	;RP1=1, select bank3
  5953  14A4  0812               	movf	(?_displayChange+2)^(0+384),w
  5954  14A5  1303               	bcf	3,6	;RP1=0, select bank1
  5955  14A6  00D2               	movwf	(_actualClothLength+2)^(0+128)	;volatile
  5956  14A7  1703               	bsf	3,6	;RP1=1, select bank3
  5957  14A8  0811               	movf	(?_displayChange+1)^(0+384),w
  5958  14A9  1303               	bcf	3,6	;RP1=0, select bank1
  5959  14AA  00D1               	movwf	(_actualClothLength+1)^(0+128)	;volatile
  5960  14AB  1703               	bsf	3,6	;RP1=1, select bank3
  5961  14AC  0810               	movf	?_displayChange^(0+384),w
  5962  14AD  1303               	bcf	3,6	;RP1=0, select bank1
  5963  14AE  00D0               	movwf	_actualClothLength^(0+128)	;volatile
  5964                           
  5965                           ;newmain.c: 267:         }
  5966  14AF  2DCA               	goto	l3494
  5967  14B0                     l3452:
  5968                           
  5969                           ;newmain.c: 269:             displayString("F Set");
  5970  14B0  306C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  5971  14B1  2DC5               	goto	L1
  5972  14B2                     l3454:
  5973  14B2  3002               	movlw	2
  5974  14B3  063C               	xorwf	_editMenuPointer^(0+128),w	;volatile
  5975  14B4  1D03               	btfss	3,2
  5976  14B5  2CF7               	goto	l3464
  5977                           
  5978                           ;newmain.c: 273:         if(editValue == 2){
  5979  14B6  3002               	movlw	2
  5980  14B7  063B               	xorwf	_editValue^(0+128),w	;volatile
  5981  14B8  1D03               	btfss	3,2
  5982  14B9  2CF5               	goto	l3462
  5983                           
  5984                           ;newmain.c: 274:             display1(warningClothLength);
  5985  14BA  084B               	movf	(_warningClothLength+3)^(0+128),w	;volatile
  5986  14BB  1283               	bcf	3,5	;RP0=0, select bank0
  5987  14BC  00D2               	movwf	display1@value+3
  5988  14BD  1683               	bsf	3,5	;RP0=1, select bank1
  5989  14BE  084A               	movf	(_warningClothLength+2)^(0+128),w	;volatile
  5990  14BF  1283               	bcf	3,5	;RP0=0, select bank0
  5991  14C0  00D1               	movwf	display1@value+2
  5992  14C1  1683               	bsf	3,5	;RP0=1, select bank1
  5993  14C2  0849               	movf	(_warningClothLength+1)^(0+128),w	;volatile
  5994  14C3  1283               	bcf	3,5	;RP0=0, select bank0
  5995  14C4  00D0               	movwf	display1@value+1
  5996  14C5  1683               	bsf	3,5	;RP0=1, select bank1
  5997  14C6  0848               	movf	_warningClothLength^(0+128),w	;volatile
  5998  14C7  1283               	bcf	3,5	;RP0=0, select bank0
  5999  14C8  00CF               	movwf	display1@value
  6000  14C9  160A  118A  25FD  160A  118A  	fcall	_display1
  6001                           
  6002                           ;newmain.c: 275:             warningClothLength = displayChange(warningClothLength);
  6003  14CE  1683               	bsf	3,5	;RP0=1, select bank1
  6004  14CF  084B               	movf	(_warningClothLength+3)^(0+128),w	;volatile
  6005  14D0  1703               	bsf	3,6	;RP1=1, select bank3
  6006  14D1  0093               	movwf	(displayChange@value+3)^(0+384)
  6007  14D2  1303               	bcf	3,6	;RP1=0, select bank1
  6008  14D3  084A               	movf	(_warningClothLength+2)^(0+128),w	;volatile
  6009  14D4  1703               	bsf	3,6	;RP1=1, select bank3
  6010  14D5  0092               	movwf	(displayChange@value+2)^(0+384)
  6011  14D6  1303               	bcf	3,6	;RP1=0, select bank1
  6012  14D7  0849               	movf	(_warningClothLength+1)^(0+128),w	;volatile
  6013  14D8  1703               	bsf	3,6	;RP1=1, select bank3
  6014  14D9  0091               	movwf	(displayChange@value+1)^(0+384)
  6015  14DA  1303               	bcf	3,6	;RP1=0, select bank1
  6016  14DB  0848               	movf	_warningClothLength^(0+128),w	;volatile
  6017  14DC  1703               	bsf	3,6	;RP1=1, select bank3
  6018  14DD  0090               	movwf	displayChange@value^(0+384)
  6019  14DE  160A  118A  20DB  160A  118A  	fcall	_displayChange
  6020  14E3  1683               	bsf	3,5	;RP0=1, select bank3
  6021  14E4  1703               	bsf	3,6	;RP1=1, select bank3
  6022  14E5  0813               	movf	(?_displayChange+3)^(0+384),w
  6023  14E6  1303               	bcf	3,6	;RP1=0, select bank1
  6024  14E7  00CB               	movwf	(_warningClothLength+3)^(0+128)	;volatile
  6025  14E8  1703               	bsf	3,6	;RP1=1, select bank3
  6026  14E9  0812               	movf	(?_displayChange+2)^(0+384),w
  6027  14EA  1303               	bcf	3,6	;RP1=0, select bank1
  6028  14EB  00CA               	movwf	(_warningClothLength+2)^(0+128)	;volatile
  6029  14EC  1703               	bsf	3,6	;RP1=1, select bank3
  6030  14ED  0811               	movf	(?_displayChange+1)^(0+384),w
  6031  14EE  1303               	bcf	3,6	;RP1=0, select bank1
  6032  14EF  00C9               	movwf	(_warningClothLength+1)^(0+128)	;volatile
  6033  14F0  1703               	bsf	3,6	;RP1=1, select bank3
  6034  14F1  0810               	movf	?_displayChange^(0+384),w
  6035  14F2  1303               	bcf	3,6	;RP1=0, select bank1
  6036  14F3  00C8               	movwf	_warningClothLength^(0+128)	;volatile
  6037                           
  6038                           ;newmain.c: 276:         }
  6039  14F4  2DCA               	goto	l3494
  6040  14F5                     l3462:
  6041                           
  6042                           ;newmain.c: 278:             displayString("P Set");
  6043  14F5  3072               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  6044  14F6  2DC5               	goto	L1
  6045  14F7                     l3464:
  6046  14F7  3003               	movlw	3
  6047  14F8  063C               	xorwf	_editMenuPointer^(0+128),w	;volatile
  6048  14F9  1D03               	btfss	3,2
  6049  14FA  2D3C               	goto	l3474
  6050                           
  6051                           ;newmain.c: 282:         if(editValue == 3){
  6052  14FB  3003               	movlw	3
  6053  14FC  063B               	xorwf	_editValue^(0+128),w	;volatile
  6054  14FD  1D03               	btfss	3,2
  6055  14FE  2D3A               	goto	l3472
  6056                           
  6057                           ;newmain.c: 283:             display1(password);
  6058  14FF  082F               	movf	(_password+3)^(0+128),w	;volatile
  6059  1500  1283               	bcf	3,5	;RP0=0, select bank0
  6060  1501  00D2               	movwf	display1@value+3
  6061  1502  1683               	bsf	3,5	;RP0=1, select bank1
  6062  1503  082E               	movf	(_password+2)^(0+128),w	;volatile
  6063  1504  1283               	bcf	3,5	;RP0=0, select bank0
  6064  1505  00D1               	movwf	display1@value+2
  6065  1506  1683               	bsf	3,5	;RP0=1, select bank1
  6066  1507  082D               	movf	(_password+1)^(0+128),w	;volatile
  6067  1508  1283               	bcf	3,5	;RP0=0, select bank0
  6068  1509  00D0               	movwf	display1@value+1
  6069  150A  1683               	bsf	3,5	;RP0=1, select bank1
  6070  150B  082C               	movf	_password^(0+128),w	;volatile
  6071  150C  1283               	bcf	3,5	;RP0=0, select bank0
  6072  150D  00CF               	movwf	display1@value
  6073  150E  160A  118A  25FD  160A  118A  	fcall	_display1
  6074                           
  6075                           ;newmain.c: 284:             password = displayChange(password);
  6076  1513  1683               	bsf	3,5	;RP0=1, select bank1
  6077  1514  082F               	movf	(_password+3)^(0+128),w	;volatile
  6078  1515  1703               	bsf	3,6	;RP1=1, select bank3
  6079  1516  0093               	movwf	(displayChange@value+3)^(0+384)
  6080  1517  1303               	bcf	3,6	;RP1=0, select bank1
  6081  1518  082E               	movf	(_password+2)^(0+128),w	;volatile
  6082  1519  1703               	bsf	3,6	;RP1=1, select bank3
  6083  151A  0092               	movwf	(displayChange@value+2)^(0+384)
  6084  151B  1303               	bcf	3,6	;RP1=0, select bank1
  6085  151C  082D               	movf	(_password+1)^(0+128),w	;volatile
  6086  151D  1703               	bsf	3,6	;RP1=1, select bank3
  6087  151E  0091               	movwf	(displayChange@value+1)^(0+384)
  6088  151F  1303               	bcf	3,6	;RP1=0, select bank1
  6089  1520  082C               	movf	_password^(0+128),w	;volatile
  6090  1521  1703               	bsf	3,6	;RP1=1, select bank3
  6091  1522  0090               	movwf	displayChange@value^(0+384)
  6092  1523  160A  118A  20DB  160A  118A  	fcall	_displayChange
  6093  1528  1683               	bsf	3,5	;RP0=1, select bank3
  6094  1529  1703               	bsf	3,6	;RP1=1, select bank3
  6095  152A  0813               	movf	(?_displayChange+3)^(0+384),w
  6096  152B  1303               	bcf	3,6	;RP1=0, select bank1
  6097  152C  00AF               	movwf	(_password+3)^(0+128)	;volatile
  6098  152D  1703               	bsf	3,6	;RP1=1, select bank3
  6099  152E  0812               	movf	(?_displayChange+2)^(0+384),w
  6100  152F  1303               	bcf	3,6	;RP1=0, select bank1
  6101  1530  00AE               	movwf	(_password+2)^(0+128)	;volatile
  6102  1531  1703               	bsf	3,6	;RP1=1, select bank3
  6103  1532  0811               	movf	(?_displayChange+1)^(0+384),w
  6104  1533  1303               	bcf	3,6	;RP1=0, select bank1
  6105  1534  00AD               	movwf	(_password+1)^(0+128)	;volatile
  6106  1535  1703               	bsf	3,6	;RP1=1, select bank3
  6107  1536  0810               	movf	?_displayChange^(0+384),w
  6108  1537  1303               	bcf	3,6	;RP1=0, select bank1
  6109  1538  00AC               	movwf	_password^(0+128)	;volatile
  6110                           
  6111                           ;newmain.c: 285:         }
  6112  1539  2DCA               	goto	l3494
  6113  153A                     l3472:
  6114                           
  6115                           ;newmain.c: 287:             displayString("PASS ");
  6116  153A  3060               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  6117  153B  2DC5               	goto	L1
  6118  153C                     l3474:
  6119  153C  3004               	movlw	4
  6120  153D  063C               	xorwf	_editMenuPointer^(0+128),w	;volatile
  6121  153E  1D03               	btfss	3,2
  6122  153F  2D81               	goto	l3484
  6123                           
  6124                           ;newmain.c: 291:         if(editValue == 4){
  6125  1540  3004               	movlw	4
  6126  1541  063B               	xorwf	_editValue^(0+128),w	;volatile
  6127  1542  1D03               	btfss	3,2
  6128  1543  2D7F               	goto	l3482
  6129                           
  6130                           ;newmain.c: 292:             display1(circumference);
  6131  1544  085B               	movf	(_circumference+3)^(0+128),w	;volatile
  6132  1545  1283               	bcf	3,5	;RP0=0, select bank0
  6133  1546  00D2               	movwf	display1@value+3
  6134  1547  1683               	bsf	3,5	;RP0=1, select bank1
  6135  1548  085A               	movf	(_circumference+2)^(0+128),w	;volatile
  6136  1549  1283               	bcf	3,5	;RP0=0, select bank0
  6137  154A  00D1               	movwf	display1@value+2
  6138  154B  1683               	bsf	3,5	;RP0=1, select bank1
  6139  154C  0859               	movf	(_circumference+1)^(0+128),w	;volatile
  6140  154D  1283               	bcf	3,5	;RP0=0, select bank0
  6141  154E  00D0               	movwf	display1@value+1
  6142  154F  1683               	bsf	3,5	;RP0=1, select bank1
  6143  1550  0858               	movf	_circumference^(0+128),w	;volatile
  6144  1551  1283               	bcf	3,5	;RP0=0, select bank0
  6145  1552  00CF               	movwf	display1@value
  6146  1553  160A  118A  25FD  160A  118A  	fcall	_display1
  6147                           
  6148                           ;newmain.c: 293:             circumference = displayChange(circumference);
  6149  1558  1683               	bsf	3,5	;RP0=1, select bank1
  6150  1559  085B               	movf	(_circumference+3)^(0+128),w	;volatile
  6151  155A  1703               	bsf	3,6	;RP1=1, select bank3
  6152  155B  0093               	movwf	(displayChange@value+3)^(0+384)
  6153  155C  1303               	bcf	3,6	;RP1=0, select bank1
  6154  155D  085A               	movf	(_circumference+2)^(0+128),w	;volatile
  6155  155E  1703               	bsf	3,6	;RP1=1, select bank3
  6156  155F  0092               	movwf	(displayChange@value+2)^(0+384)
  6157  1560  1303               	bcf	3,6	;RP1=0, select bank1
  6158  1561  0859               	movf	(_circumference+1)^(0+128),w	;volatile
  6159  1562  1703               	bsf	3,6	;RP1=1, select bank3
  6160  1563  0091               	movwf	(displayChange@value+1)^(0+384)
  6161  1564  1303               	bcf	3,6	;RP1=0, select bank1
  6162  1565  0858               	movf	_circumference^(0+128),w	;volatile
  6163  1566  1703               	bsf	3,6	;RP1=1, select bank3
  6164  1567  0090               	movwf	displayChange@value^(0+384)
  6165  1568  160A  118A  20DB  160A  118A  	fcall	_displayChange
  6166  156D  1683               	bsf	3,5	;RP0=1, select bank3
  6167  156E  1703               	bsf	3,6	;RP1=1, select bank3
  6168  156F  0813               	movf	(?_displayChange+3)^(0+384),w
  6169  1570  1303               	bcf	3,6	;RP1=0, select bank1
  6170  1571  00DB               	movwf	(_circumference+3)^(0+128)	;volatile
  6171  1572  1703               	bsf	3,6	;RP1=1, select bank3
  6172  1573  0812               	movf	(?_displayChange+2)^(0+384),w
  6173  1574  1303               	bcf	3,6	;RP1=0, select bank1
  6174  1575  00DA               	movwf	(_circumference+2)^(0+128)	;volatile
  6175  1576  1703               	bsf	3,6	;RP1=1, select bank3
  6176  1577  0811               	movf	(?_displayChange+1)^(0+384),w
  6177  1578  1303               	bcf	3,6	;RP1=0, select bank1
  6178  1579  00D9               	movwf	(_circumference+1)^(0+128)	;volatile
  6179  157A  1703               	bsf	3,6	;RP1=1, select bank3
  6180  157B  0810               	movf	?_displayChange^(0+384),w
  6181  157C  1303               	bcf	3,6	;RP1=0, select bank1
  6182  157D  00D8               	movwf	_circumference^(0+128)	;volatile
  6183                           
  6184                           ;newmain.c: 294:         }
  6185  157E  2DCA               	goto	l3494
  6186  157F                     l3482:
  6187                           
  6188                           ;newmain.c: 296:             displayString("Circu");
  6189  157F  3078               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  6190  1580  2DC5               	goto	L1
  6191  1581                     l3484:
  6192  1581  3005               	movlw	5
  6193  1582  063C               	xorwf	_editMenuPointer^(0+128),w	;volatile
  6194  1583  1D03               	btfss	3,2
  6195  1584  2DCA               	goto	l3494
  6196                           
  6197                           ;newmain.c: 300:         if(editValue == 5){
  6198  1585  3005               	movlw	5
  6199  1586  063B               	xorwf	_editValue^(0+128),w	;volatile
  6200  1587  1D03               	btfss	3,2
  6201  1588  2DC4               	goto	l3492
  6202                           
  6203                           ;newmain.c: 301:             display1(pulse);
  6204  1589  084F               	movf	(_pulse+3)^(0+128),w	;volatile
  6205  158A  1283               	bcf	3,5	;RP0=0, select bank0
  6206  158B  00D2               	movwf	display1@value+3
  6207  158C  1683               	bsf	3,5	;RP0=1, select bank1
  6208  158D  084E               	movf	(_pulse+2)^(0+128),w	;volatile
  6209  158E  1283               	bcf	3,5	;RP0=0, select bank0
  6210  158F  00D1               	movwf	display1@value+2
  6211  1590  1683               	bsf	3,5	;RP0=1, select bank1
  6212  1591  084D               	movf	(_pulse+1)^(0+128),w	;volatile
  6213  1592  1283               	bcf	3,5	;RP0=0, select bank0
  6214  1593  00D0               	movwf	display1@value+1
  6215  1594  1683               	bsf	3,5	;RP0=1, select bank1
  6216  1595  084C               	movf	_pulse^(0+128),w	;volatile
  6217  1596  1283               	bcf	3,5	;RP0=0, select bank0
  6218  1597  00CF               	movwf	display1@value
  6219  1598  160A  118A  25FD  160A  118A  	fcall	_display1
  6220                           
  6221                           ;newmain.c: 302:             pulse = displayChange(pulse);
  6222  159D  1683               	bsf	3,5	;RP0=1, select bank1
  6223  159E  084F               	movf	(_pulse+3)^(0+128),w	;volatile
  6224  159F  1703               	bsf	3,6	;RP1=1, select bank3
  6225  15A0  0093               	movwf	(displayChange@value+3)^(0+384)
  6226  15A1  1303               	bcf	3,6	;RP1=0, select bank1
  6227  15A2  084E               	movf	(_pulse+2)^(0+128),w	;volatile
  6228  15A3  1703               	bsf	3,6	;RP1=1, select bank3
  6229  15A4  0092               	movwf	(displayChange@value+2)^(0+384)
  6230  15A5  1303               	bcf	3,6	;RP1=0, select bank1
  6231  15A6  084D               	movf	(_pulse+1)^(0+128),w	;volatile
  6232  15A7  1703               	bsf	3,6	;RP1=1, select bank3
  6233  15A8  0091               	movwf	(displayChange@value+1)^(0+384)
  6234  15A9  1303               	bcf	3,6	;RP1=0, select bank1
  6235  15AA  084C               	movf	_pulse^(0+128),w	;volatile
  6236  15AB  1703               	bsf	3,6	;RP1=1, select bank3
  6237  15AC  0090               	movwf	displayChange@value^(0+384)
  6238  15AD  160A  118A  20DB  160A  118A  	fcall	_displayChange
  6239  15B2  1683               	bsf	3,5	;RP0=1, select bank3
  6240  15B3  1703               	bsf	3,6	;RP1=1, select bank3
  6241  15B4  0813               	movf	(?_displayChange+3)^(0+384),w
  6242  15B5  1303               	bcf	3,6	;RP1=0, select bank1
  6243  15B6  00CF               	movwf	(_pulse+3)^(0+128)	;volatile
  6244  15B7  1703               	bsf	3,6	;RP1=1, select bank3
  6245  15B8  0812               	movf	(?_displayChange+2)^(0+384),w
  6246  15B9  1303               	bcf	3,6	;RP1=0, select bank1
  6247  15BA  00CE               	movwf	(_pulse+2)^(0+128)	;volatile
  6248  15BB  1703               	bsf	3,6	;RP1=1, select bank3
  6249  15BC  0811               	movf	(?_displayChange+1)^(0+384),w
  6250  15BD  1303               	bcf	3,6	;RP1=0, select bank1
  6251  15BE  00CD               	movwf	(_pulse+1)^(0+128)	;volatile
  6252  15BF  1703               	bsf	3,6	;RP1=1, select bank3
  6253  15C0  0810               	movf	?_displayChange^(0+384),w
  6254  15C1  1303               	bcf	3,6	;RP1=0, select bank1
  6255  15C2  00CC               	movwf	_pulse^(0+128)	;volatile
  6256                           
  6257                           ;newmain.c: 303:         }
  6258  15C3  2DCA               	goto	l3494
  6259  15C4                     l3492:
  6260                           
  6261                           ;newmain.c: 305:             displayString("PuLSe");
  6262  15C4  3066               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  6263  15C5                     L1:
  6264  15C5  160A  118A  22A2  160A  118A  	fcall	_displayString
  6265  15CA                     l3494:
  6266                           
  6267                           ;newmain.c: 309:     if(menuSwitch() == 1 && editValue == 0){
  6268  15CA  160A  158A  2669  160A  118A  	fcall	_menuSwitch
  6269  15CF  3A01               	xorlw	1
  6270  15D0  1D03               	skipz
  6271  15D1  2DEE               	goto	l3508
  6272  15D2  1683               	bsf	3,5	;RP0=1, select bank1
  6273  15D3  083B               	movf	_editValue^(0+128),w	;volatile
  6274  15D4  1D03               	btfss	3,2
  6275  15D5  2DEE               	goto	l3508
  6276                           
  6277                           ;newmain.c: 310:         if(editMenuPointer != 3){
  6278  15D6  3003               	movlw	3
  6279  15D7  063C               	xorwf	_editMenuPointer^(0+128),w	;volatile
  6280  15D8  1903               	btfsc	3,2
  6281  15D9  2DE2               	goto	l3502
  6282  15DA                     l3500:
  6283                           
  6284                           ;newmain.c: 311:             editMenuPointer += 1;
  6285  15DA  3001               	movlw	1
  6286  15DB  1683               	bsf	3,5	;RP0=1, select bank3
  6287  15DC  1703               	bsf	3,6	;RP1=1, select bank3
  6288  15DD  0095               	movwf	??_editMenu^(0+384)
  6289  15DE  0815               	movf	??_editMenu^(0+384),w
  6290  15DF  1303               	bcf	3,6	;RP1=0, select bank1
  6291  15E0  07BC               	addwf	_editMenuPointer^(0+128),f	;volatile
  6292                           
  6293                           ;newmain.c: 312:         }
  6294  15E1  2DEE               	goto	l3508
  6295  15E2                     l3502:
  6296  15E2  3094               	movlw	148
  6297  15E3  062C               	xorwf	_password^(0+128),w	;volatile
  6298  15E4  3026               	movlw	38
  6299  15E5  1903               	skipnz
  6300  15E6  062D               	xorwf	(_password+1)^(0+128),w	;volatile
  6301  15E7  042E               	iorwf	(_password+2)^(0+128),w	;volatile
  6302  15E8  042F               	iorwf	(_password+3)^(0+128),w	;volatile
  6303  15E9  1903               	btfsc	3,2
  6304  15EA  2DDA               	goto	l3500
  6305                           
  6306                           ;newmain.c: 317:             editMenuPointer = 0;
  6307  15EB  1683               	bsf	3,5	;RP0=1, select bank1
  6308  15EC  1303               	bcf	3,6	;RP1=0, select bank1
  6309  15ED  01BC               	clrf	_editMenuPointer^(0+128)	;volatile
  6310  15EE                     l3508:
  6311                           
  6312                           ;newmain.c: 320:     if(editMenuPointer == 6){
  6313  15EE  3006               	movlw	6
  6314  15EF  1683               	bsf	3,5	;RP0=1, select bank1
  6315  15F0  063C               	xorwf	_editMenuPointer^(0+128),w	;volatile
  6316  15F1  1D03               	btfss	3,2
  6317  15F2  0008               	return
  6318                           
  6319                           ;newmain.c: 321:         editMenuPointer = 0;
  6320  15F3  01BC               	clrf	_editMenuPointer^(0+128)	;volatile
  6321                           
  6322                           ;newmain.c: 322:         password = 0;
  6323  15F4  3000               	movlw	0
  6324  15F5  00AF               	movwf	(_password+3)^(0+128)	;volatile
  6325  15F6  3000               	movlw	0
  6326  15F7  00AE               	movwf	(_password+2)^(0+128)	;volatile
  6327  15F8  3000               	movlw	0
  6328  15F9  00AD               	movwf	(_password+1)^(0+128)	;volatile
  6329  15FA  3000               	movlw	0
  6330  15FB  00AC               	movwf	_password^(0+128)	;volatile
  6331  15FC  0008               	return
  6332  15FD                     __end_of_editMenu:
  6333                           
  6334                           	psect	text15
  6335  1E69                     __ptext15:	
  6336 ;; *************** function _menuSwitch *****************
  6337 ;; Defined at:
  6338 ;;		line 622 in file "newmain.c"
  6339 ;; Parameters:    Size  Location     Type
  6340 ;;		None
  6341 ;; Auto vars:     Size  Location     Type
  6342 ;;		None
  6343 ;; Return value:  Size  Location     Type
  6344 ;;                  1    wreg      unsigned char 
  6345 ;; Registers used:
  6346 ;;		wreg, status,2
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/100
  6349 ;;		On exit  : 200/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6352 ;;      Params:         0       0       0       0       0
  6353 ;;      Locals:         0       0       0       0       0
  6354 ;;      Temps:          0       0       0       0       0
  6355 ;;      Totals:         0       0       0       0       0
  6356 ;;Total ram usage:        0 bytes
  6357 ;; Hardware stack levels used: 1
  6358 ;; Hardware stack levels required when called: 2
  6359 ;; This function calls:
  6360 ;;		Nothing
  6361 ;; This function is called by:
  6362 ;;		_editMenu
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366                           
  6367                           ;psect for function _menuSwitch
  6368  1E69                     _menuSwitch:
  6369                           
  6370                           ;newmain.c: 624:     if(RA4 == 1 && menuFlag == 1){
  6371                           
  6372                           ;incstack = 0
  6373                           ; Regs used in _menuSwitch: [wreg+status,2]
  6374  1E69  1283               	bcf	3,5	;RP0=0, select bank0
  6375  1E6A  1303               	bcf	3,6	;RP1=0, select bank0
  6376  1E6B  1A05               	btfsc	5,4	;volatile
  6377  1E6C  1F53               	btfss	_menuFlag/(0+8),_menuFlag& (0+7)	;volatile
  6378  1E6D  2E71               	goto	l372
  6379                           
  6380                           ;newmain.c: 625:         menuFlag = 0;
  6381  1E6E  1353               	bcf	_menuFlag/(0+8),_menuFlag& (0+7)	;volatile
  6382                           
  6383                           ;newmain.c: 626:         return 1;
  6384  1E6F  3001               	movlw	1
  6385  1E70  0008               	return
  6386  1E71                     l372:	
  6387                           ;newmain.c: 627:     }
  6388                           
  6389                           
  6390                           ;newmain.c: 628:     if(RA4 == 0){
  6391  1E71  1A05               	btfsc	5,4	;volatile
  6392  1E72  2E76               	goto	l2478
  6393                           
  6394                           ;newmain.c: 629:         menuFlag = 1;
  6395  1E73  1753               	bsf	_menuFlag/(0+8),_menuFlag& (0+7)	;volatile
  6396                           
  6397                           ;newmain.c: 630:         skipCount = 0;
  6398  1E74  1683               	bsf	3,5	;RP0=1, select bank1
  6399  1E75  01B8               	clrf	_skipCount^(0+128)	;volatile
  6400  1E76                     l2478:
  6401                           
  6402                           ;newmain.c: 632:     return 0;
  6403  1E76  3000               	movlw	0
  6404  1E77  0008               	return
  6405  1E78                     __end_of_menuSwitch:
  6406                           
  6407                           	psect	text16
  6408  12A2                     __ptext16:	
  6409 ;; *************** function _displayString *****************
  6410 ;; Defined at:
  6411 ;;		line 544 in file "newmain.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;  string          1    wreg     PTR const unsigned char 
  6414 ;;		 -> STR_5(6), STR_4(6), STR_3(6), STR_2(6), 
  6415 ;;		 -> STR_1(6), 
  6416 ;; Auto vars:     Size  Location     Type
  6417 ;;  string          1   21[BANK0 ] PTR const unsigned char 
  6418 ;;		 -> STR_5(6), STR_4(6), STR_3(6), STR_2(6), 
  6419 ;;		 -> STR_1(6), 
  6420 ;; Return value:  Size  Location     Type
  6421 ;;                  1    wreg      void 
  6422 ;; Registers used:
  6423 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6424 ;; Tracked objects:
  6425 ;;		On entry : 300/100
  6426 ;;		On exit  : 0/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6429 ;;      Params:         0       0       0       0       0
  6430 ;;      Locals:         0       1       0       0       0
  6431 ;;      Temps:          0       2       0       0       0
  6432 ;;      Totals:         0       3       0       0       0
  6433 ;;Total ram usage:        3 bytes
  6434 ;; Hardware stack levels used: 1
  6435 ;; Hardware stack levels required when called: 3
  6436 ;; This function calls:
  6437 ;;		_dataPass
  6438 ;; This function is called by:
  6439 ;;		_editMenu
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442                           
  6443                           
  6444                           ;psect for function _displayString
  6445  12A2                     _displayString:
  6446                           
  6447                           ;incstack = 0
  6448                           ; Regs used in _displayString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6449                           ;displayString@string stored from wreg
  6450  12A2  1283               	bcf	3,5	;RP0=0, select bank0
  6451  12A3  00B5               	movwf	displayString@string
  6452                           
  6453                           ;newmain.c: 545:     dataPass(FONT_DEFAULT[string[0]-32]);
  6454  12A4  0835               	movf	displayString@string,w
  6455  12A5  0084               	movwf	4
  6456  12A6  160A  118A  2000  160A  118A  	fcall	stringdir
  6457  12AB  3EE1               	addlw	low (((_FONT_DEFAULT-__stringbase)| (0+32768)+224))
  6458  12AC  0084               	movwf	4
  6459  12AD  160A  118A  2000  160A  118A  	fcall	stringdir
  6460  12B2  160A  158A  26E3  160A  118A  	fcall	_dataPass
  6461                           
  6462                           ;newmain.c: 546:     RA2 = 0;
  6463  12B7  1105               	bcf	5,2	;volatile
  6464                           
  6465                           ;newmain.c: 547:     RA0 = 0;
  6466  12B8  1005               	bcf	5,0	;volatile
  6467                           
  6468                           ;newmain.c: 548:     RA1 = 1;
  6469  12B9  1485               	bsf	5,1	;volatile
  6470                           
  6471                           ;newmain.c: 549:     RA3 = 1;
  6472  12BA  1585               	bsf	5,3	;volatile
  6473                           
  6474                           ;newmain.c: 550:     _delay((unsigned long)((1)*(20000000/4000.0)));
  6475  12BB  3007               	movlw	7
  6476  12BC  1283               	bcf	3,5	;RP0=0, select bank0
  6477  12BD  1303               	bcf	3,6	;RP1=0, select bank0
  6478  12BE  00B4               	movwf	??_displayString+1
  6479  12BF  307C               	movlw	124
  6480  12C0  00B3               	movwf	??_displayString
  6481  12C1                     u5487:
  6482  12C1  0BB3               	decfsz	??_displayString,f
  6483  12C2  2AC1               	goto	u5487
  6484  12C3  0BB4               	decfsz	??_displayString+1,f
  6485  12C4  2AC1               	goto	u5487
  6486  12C5  0000               	nop
  6487                           
  6488                           ;newmain.c: 552:     dataPass(FONT_DEFAULT[string[1]-32]);
  6489  12C6  1283               	bcf	3,5	;RP0=0, select bank0
  6490  12C7  1303               	bcf	3,6	;RP1=0, select bank0
  6491  12C8  0835               	movf	displayString@string,w
  6492  12C9  3E01               	addlw	1
  6493  12CA  0084               	movwf	4
  6494  12CB  160A  118A  2000  160A  118A  	fcall	stringdir
  6495  12D0  3EE1               	addlw	low (((_FONT_DEFAULT-__stringbase)| (0+32768)+224))
  6496  12D1  0084               	movwf	4
  6497  12D2  160A  118A  2000  160A  118A  	fcall	stringdir
  6498  12D7  160A  158A  26E3  160A  118A  	fcall	_dataPass
  6499                           
  6500                           ;newmain.c: 553:     RA2 = 0;
  6501  12DC  1105               	bcf	5,2	;volatile
  6502                           
  6503                           ;newmain.c: 554:     RA0 = 0;
  6504  12DD  1005               	bcf	5,0	;volatile
  6505                           
  6506                           ;newmain.c: 555:     RA1 = 1;
  6507  12DE  1485               	bsf	5,1	;volatile
  6508                           
  6509                           ;newmain.c: 556:     RA3 = 0;
  6510  12DF  1185               	bcf	5,3	;volatile
  6511                           
  6512                           ;newmain.c: 557:     _delay((unsigned long)((1)*(20000000/4000.0)));
  6513  12E0  3007               	movlw	7
  6514  12E1  1283               	bcf	3,5	;RP0=0, select bank0
  6515  12E2  1303               	bcf	3,6	;RP1=0, select bank0
  6516  12E3  00B4               	movwf	??_displayString+1
  6517  12E4  307C               	movlw	124
  6518  12E5  00B3               	movwf	??_displayString
  6519  12E6                     u5497:
  6520  12E6  0BB3               	decfsz	??_displayString,f
  6521  12E7  2AE6               	goto	u5497
  6522  12E8  0BB4               	decfsz	??_displayString+1,f
  6523  12E9  2AE6               	goto	u5497
  6524  12EA  0000               	nop
  6525                           
  6526                           ;newmain.c: 559:     dataPass(FONT_DEFAULT[string[2]-32]);
  6527  12EB  1283               	bcf	3,5	;RP0=0, select bank0
  6528  12EC  1303               	bcf	3,6	;RP1=0, select bank0
  6529  12ED  0835               	movf	displayString@string,w
  6530  12EE  3E02               	addlw	2
  6531  12EF  0084               	movwf	4
  6532  12F0  160A  118A  2000  160A  118A  	fcall	stringdir
  6533  12F5  3EE1               	addlw	low (((_FONT_DEFAULT-__stringbase)| (0+32768)+224))
  6534  12F6  0084               	movwf	4
  6535  12F7  160A  118A  2000  160A  118A  	fcall	stringdir
  6536  12FC  160A  158A  26E3  160A  118A  	fcall	_dataPass
  6537                           
  6538                           ;newmain.c: 560:     RA2 = 0;
  6539  1301  1105               	bcf	5,2	;volatile
  6540                           
  6541                           ;newmain.c: 561:     RA0 = 0;
  6542  1302  1005               	bcf	5,0	;volatile
  6543                           
  6544                           ;newmain.c: 562:     RA1 = 0;
  6545  1303  1085               	bcf	5,1	;volatile
  6546                           
  6547                           ;newmain.c: 563:     RA3 = 1;
  6548  1304  1585               	bsf	5,3	;volatile
  6549                           
  6550                           ;newmain.c: 564:     _delay((unsigned long)((1)*(20000000/4000.0)));
  6551  1305  3007               	movlw	7
  6552  1306  1283               	bcf	3,5	;RP0=0, select bank0
  6553  1307  1303               	bcf	3,6	;RP1=0, select bank0
  6554  1308  00B4               	movwf	??_displayString+1
  6555  1309  307C               	movlw	124
  6556  130A  00B3               	movwf	??_displayString
  6557  130B                     u5507:
  6558  130B  0BB3               	decfsz	??_displayString,f
  6559  130C  2B0B               	goto	u5507
  6560  130D  0BB4               	decfsz	??_displayString+1,f
  6561  130E  2B0B               	goto	u5507
  6562  130F  0000               	nop
  6563                           
  6564                           ;newmain.c: 567:     dataPass(FONT_DEFAULT[string[3]-32]);
  6565  1310  1283               	bcf	3,5	;RP0=0, select bank0
  6566  1311  1303               	bcf	3,6	;RP1=0, select bank0
  6567  1312  0835               	movf	displayString@string,w
  6568  1313  3E03               	addlw	3
  6569  1314  0084               	movwf	4
  6570  1315  160A  118A  2000  160A  118A  	fcall	stringdir
  6571  131A  3EE1               	addlw	low (((_FONT_DEFAULT-__stringbase)| (0+32768)+224))
  6572  131B  0084               	movwf	4
  6573  131C  160A  118A  2000  160A  118A  	fcall	stringdir
  6574  1321  160A  158A  26E3  160A  118A  	fcall	_dataPass
  6575                           
  6576                           ;newmain.c: 568:     RA2 = 0;
  6577  1326  1105               	bcf	5,2	;volatile
  6578                           
  6579                           ;newmain.c: 569:     RA0 = 0;
  6580  1327  1005               	bcf	5,0	;volatile
  6581                           
  6582                           ;newmain.c: 570:     RA1 = 0;
  6583  1328  1085               	bcf	5,1	;volatile
  6584                           
  6585                           ;newmain.c: 571:     RA3 = 0;
  6586  1329  1185               	bcf	5,3	;volatile
  6587                           
  6588                           ;newmain.c: 572:     _delay((unsigned long)((1)*(20000000/4000.0)));
  6589  132A  3007               	movlw	7
  6590  132B  1283               	bcf	3,5	;RP0=0, select bank0
  6591  132C  1303               	bcf	3,6	;RP1=0, select bank0
  6592  132D  00B4               	movwf	??_displayString+1
  6593  132E  307C               	movlw	124
  6594  132F  00B3               	movwf	??_displayString
  6595  1330                     u5517:
  6596  1330  0BB3               	decfsz	??_displayString,f
  6597  1331  2B30               	goto	u5517
  6598  1332  0BB4               	decfsz	??_displayString+1,f
  6599  1333  2B30               	goto	u5517
  6600  1334  0000               	nop
  6601                           
  6602                           ;newmain.c: 574:     dataPass(FONT_DEFAULT[string[4]-32]);
  6603  1335  1283               	bcf	3,5	;RP0=0, select bank0
  6604  1336  1303               	bcf	3,6	;RP1=0, select bank0
  6605  1337  0835               	movf	displayString@string,w
  6606  1338  3E04               	addlw	4
  6607  1339  0084               	movwf	4
  6608  133A  160A  118A  2000  160A  118A  	fcall	stringdir
  6609  133F  3EE1               	addlw	low (((_FONT_DEFAULT-__stringbase)| (0+32768)+224))
  6610  1340  0084               	movwf	4
  6611  1341  160A  118A  2000  160A  118A  	fcall	stringdir
  6612  1346  160A  158A  26E3  160A  118A  	fcall	_dataPass
  6613                           
  6614                           ;newmain.c: 575:     RA2 = 1;
  6615  134B  1505               	bsf	5,2	;volatile
  6616                           
  6617                           ;newmain.c: 576:     RA0 = 1;
  6618  134C  1405               	bsf	5,0	;volatile
  6619                           
  6620                           ;newmain.c: 577:     RA1 = 0;
  6621  134D  1085               	bcf	5,1	;volatile
  6622                           
  6623                           ;newmain.c: 578:     RA3 = 1;
  6624  134E  1585               	bsf	5,3	;volatile
  6625                           
  6626                           ;newmain.c: 579:     _delay((unsigned long)((1)*(20000000/4000.0)));
  6627  134F  3007               	movlw	7
  6628  1350  1283               	bcf	3,5	;RP0=0, select bank0
  6629  1351  1303               	bcf	3,6	;RP1=0, select bank0
  6630  1352  00B4               	movwf	??_displayString+1
  6631  1353  307C               	movlw	124
  6632  1354  00B3               	movwf	??_displayString
  6633  1355                     u5527:
  6634  1355  0BB3               	decfsz	??_displayString,f
  6635  1356  2B55               	goto	u5527
  6636  1357  0BB4               	decfsz	??_displayString+1,f
  6637  1358  2B55               	goto	u5527
  6638  1359  0000               	nop
  6639  135A  0008               	return
  6640  135B                     __end_of_displayString:
  6641                           
  6642                           	psect	text17
  6643  10DB                     __ptext17:	
  6644 ;; *************** function _displayChange *****************
  6645 ;; Defined at:
  6646 ;;		line 648 in file "newmain.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;  value           4    0[BANK3 ] unsigned long 
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;		None
  6651 ;; Return value:  Size  Location     Type
  6652 ;;                  4    0[BANK3 ] unsigned long 
  6653 ;; Registers used:
  6654 ;;		wreg, status,2, status,0, pclath, cstack
  6655 ;; Tracked objects:
  6656 ;;		On entry : 300/300
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6660 ;;      Params:         0       0       0       4       0
  6661 ;;      Locals:         0       0       0       0       0
  6662 ;;      Temps:          0       0       0       1       0
  6663 ;;      Totals:         0       0       0       5       0
  6664 ;;Total ram usage:        5 bytes
  6665 ;; Hardware stack levels used: 1
  6666 ;; Hardware stack levels required when called: 4
  6667 ;; This function calls:
  6668 ;;		_increment
  6669 ;;		_selectSwitch
  6670 ;;		_upSwitch
  6671 ;; This function is called by:
  6672 ;;		_editMenu
  6673 ;; This function uses a non-reentrant model
  6674 ;;
  6675                           
  6676                           
  6677                           ;psect for function _displayChange
  6678  10DB                     _displayChange:
  6679                           
  6680                           ;newmain.c: 649:     if(selectSwitch() == 1){
  6681                           
  6682                           ;incstack = 0
  6683                           ; Regs used in _displayChange: [wreg+status,2+status,0+pclath+cstack]
  6684  10DB  160A  158A  265A  160A  118A  	fcall	_selectSwitch
  6685  10E0  3A01               	xorlw	1
  6686  10E1  1D03               	skipz
  6687  10E2  28F7               	goto	l3344
  6688                           
  6689                           ;newmain.c: 650:         currentDisplay += 1;
  6690  10E3  3001               	movlw	1
  6691  10E4  1683               	bsf	3,5	;RP0=1, select bank3
  6692  10E5  1703               	bsf	3,6	;RP1=1, select bank3
  6693  10E6  0094               	movwf	??_displayChange^(0+384)
  6694  10E7  0814               	movf	??_displayChange^(0+384),w
  6695  10E8  1283               	bcf	3,5	;RP0=0, select bank0
  6696  10E9  1303               	bcf	3,6	;RP1=0, select bank0
  6697  10EA  07DB               	addwf	_currentDisplay,f	;volatile
  6698                           
  6699                           ;newmain.c: 651:         if(currentDisplay == 5){
  6700  10EB  3005               	movlw	5
  6701  10EC  065B               	xorwf	_currentDisplay,w	;volatile
  6702  10ED  1D03               	btfss	3,2
  6703  10EE  28F7               	goto	l3344
  6704                           
  6705                           ;newmain.c: 652:         currentDisplay = 1;}
  6706  10EF  3001               	movlw	1
  6707  10F0  1683               	bsf	3,5	;RP0=1, select bank3
  6708  10F1  1703               	bsf	3,6	;RP1=1, select bank3
  6709  10F2  0094               	movwf	??_displayChange^(0+384)
  6710  10F3  0814               	movf	??_displayChange^(0+384),w
  6711  10F4  1283               	bcf	3,5	;RP0=0, select bank0
  6712  10F5  1303               	bcf	3,6	;RP1=0, select bank0
  6713  10F6  00DB               	movwf	_currentDisplay	;volatile
  6714  10F7                     l3344:
  6715                           
  6716                           ;newmain.c: 654:     if(upSwitch() == 1){
  6717  10F7  160A  158A  2630  160A  118A  	fcall	_upSwitch
  6718  10FC  3A01               	xorlw	1
  6719  10FD  1D03               	skipz
  6720  10FE  0008               	return
  6721                           
  6722                           ;newmain.c: 655:        value = increment(value);
  6723  10FF  1683               	bsf	3,5	;RP0=1, select bank3
  6724  1100  1703               	bsf	3,6	;RP1=1, select bank3
  6725  1101  0813               	movf	(displayChange@value+3)^(0+384),w
  6726  1102  1283               	bcf	3,5	;RP0=0, select bank0
  6727  1103  1303               	bcf	3,6	;RP1=0, select bank0
  6728  1104  00D2               	movwf	increment@value+3
  6729  1105  1683               	bsf	3,5	;RP0=1, select bank3
  6730  1106  1703               	bsf	3,6	;RP1=1, select bank3
  6731  1107  0812               	movf	(displayChange@value+2)^(0+384),w
  6732  1108  1283               	bcf	3,5	;RP0=0, select bank0
  6733  1109  1303               	bcf	3,6	;RP1=0, select bank0
  6734  110A  00D1               	movwf	increment@value+2
  6735  110B  1683               	bsf	3,5	;RP0=1, select bank3
  6736  110C  1703               	bsf	3,6	;RP1=1, select bank3
  6737  110D  0811               	movf	(displayChange@value+1)^(0+384),w
  6738  110E  1283               	bcf	3,5	;RP0=0, select bank0
  6739  110F  1303               	bcf	3,6	;RP1=0, select bank0
  6740  1110  00D0               	movwf	increment@value+1
  6741  1111  1683               	bsf	3,5	;RP0=1, select bank3
  6742  1112  1703               	bsf	3,6	;RP1=1, select bank3
  6743  1113  0810               	movf	displayChange@value^(0+384),w
  6744  1114  1283               	bcf	3,5	;RP0=0, select bank0
  6745  1115  1303               	bcf	3,6	;RP1=0, select bank0
  6746  1116  00CF               	movwf	increment@value
  6747  1117  120A  158A  2036   	fcall	_increment
  6748  111A  0852               	movf	?_increment+3,w
  6749  111B  1683               	bsf	3,5	;RP0=1, select bank3
  6750  111C  1703               	bsf	3,6	;RP1=1, select bank3
  6751  111D  0093               	movwf	(displayChange@value+3)^(0+384)
  6752  111E  1283               	bcf	3,5	;RP0=0, select bank0
  6753  111F  1303               	bcf	3,6	;RP1=0, select bank0
  6754  1120  0851               	movf	?_increment+2,w
  6755  1121  1683               	bsf	3,5	;RP0=1, select bank3
  6756  1122  1703               	bsf	3,6	;RP1=1, select bank3
  6757  1123  0092               	movwf	(displayChange@value+2)^(0+384)
  6758  1124  1283               	bcf	3,5	;RP0=0, select bank0
  6759  1125  1303               	bcf	3,6	;RP1=0, select bank0
  6760  1126  0850               	movf	?_increment+1,w
  6761  1127  1683               	bsf	3,5	;RP0=1, select bank3
  6762  1128  1703               	bsf	3,6	;RP1=1, select bank3
  6763  1129  0091               	movwf	(displayChange@value+1)^(0+384)
  6764  112A  1283               	bcf	3,5	;RP0=0, select bank0
  6765  112B  1303               	bcf	3,6	;RP1=0, select bank0
  6766  112C  084F               	movf	?_increment,w
  6767  112D  1683               	bsf	3,5	;RP0=1, select bank3
  6768  112E  1703               	bsf	3,6	;RP1=1, select bank3
  6769  112F  0090               	movwf	displayChange@value^(0+384)
  6770                           
  6771                           ;newmain.c: 657:     return value;
  6772  1130  0008               	return
  6773  1131                     __end_of_displayChange:
  6774                           
  6775                           	psect	text18
  6776  1E30                     __ptext18:	
  6777 ;; *************** function _upSwitch *****************
  6778 ;; Defined at:
  6779 ;;		line 609 in file "newmain.c"
  6780 ;; Parameters:    Size  Location     Type
  6781 ;;		None
  6782 ;; Auto vars:     Size  Location     Type
  6783 ;;		None
  6784 ;; Return value:  Size  Location     Type
  6785 ;;                  1    wreg      unsigned char 
  6786 ;; Registers used:
  6787 ;;		wreg, status,2
  6788 ;; Tracked objects:
  6789 ;;		On entry : 200/100
  6790 ;;		On exit  : 200/0
  6791 ;;		Unchanged: 0/0
  6792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6793 ;;      Params:         0       0       0       0       0
  6794 ;;      Locals:         0       0       0       0       0
  6795 ;;      Temps:          0       0       0       0       0
  6796 ;;      Totals:         0       0       0       0       0
  6797 ;;Total ram usage:        0 bytes
  6798 ;; Hardware stack levels used: 1
  6799 ;; Hardware stack levels required when called: 2
  6800 ;; This function calls:
  6801 ;;		Nothing
  6802 ;; This function is called by:
  6803 ;;		_viewMenu
  6804 ;;		_displayChange
  6805 ;; This function uses a non-reentrant model
  6806 ;;
  6807                           
  6808                           
  6809                           ;psect for function _upSwitch
  6810  1E30                     _upSwitch:
  6811                           
  6812                           ;newmain.c: 611:     if(RB5 == 1 && upFlag == 1){
  6813                           
  6814                           ;incstack = 0
  6815                           ; Regs used in _upSwitch: [wreg+status,2]
  6816  1E30  1283               	bcf	3,5	;RP0=0, select bank0
  6817  1E31  1A86               	btfsc	6,5	;volatile
  6818  1E32  1ED3               	btfss	_upFlag/(0+8),_upFlag& (0+7)	;volatile
  6819  1E33  2E37               	goto	l367
  6820                           
  6821                           ;newmain.c: 612:         upFlag = 0;
  6822  1E34  12D3               	bcf	_upFlag/(0+8),_upFlag& (0+7)	;volatile
  6823                           
  6824                           ;newmain.c: 613:         return 1;
  6825  1E35  3001               	movlw	1
  6826  1E36  0008               	return
  6827  1E37                     l367:	
  6828                           ;newmain.c: 614:     }
  6829                           
  6830                           
  6831                           ;newmain.c: 615:     if(RB5 == 0){
  6832  1E37  1A86               	btfsc	6,5	;volatile
  6833  1E38  2E3C               	goto	l3042
  6834                           
  6835                           ;newmain.c: 616:         upFlag = 1;
  6836  1E39  16D3               	bsf	_upFlag/(0+8),_upFlag& (0+7)	;volatile
  6837                           
  6838                           ;newmain.c: 617:         skipCount = 0;
  6839  1E3A  1683               	bsf	3,5	;RP0=1, select bank1
  6840  1E3B  01B8               	clrf	_skipCount^(0+128)	;volatile
  6841  1E3C                     l3042:
  6842                           
  6843                           ;newmain.c: 619:     return 0;
  6844  1E3C  3000               	movlw	0
  6845  1E3D  0008               	return
  6846  1E3E                     __end_of_upSwitch:
  6847                           
  6848                           	psect	text19
  6849  1E5A                     __ptext19:	
  6850 ;; *************** function _selectSwitch *****************
  6851 ;; Defined at:
  6852 ;;		line 596 in file "newmain.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;		None
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;		None
  6857 ;; Return value:  Size  Location     Type
  6858 ;;                  1    wreg      unsigned char 
  6859 ;; Registers used:
  6860 ;;		wreg, status,2
  6861 ;; Tracked objects:
  6862 ;;		On entry : 300/300
  6863 ;;		On exit  : 200/0
  6864 ;;		Unchanged: 0/0
  6865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6866 ;;      Params:         0       0       0       0       0
  6867 ;;      Locals:         0       0       0       0       0
  6868 ;;      Temps:          0       0       0       0       0
  6869 ;;      Totals:         0       0       0       0       0
  6870 ;;Total ram usage:        0 bytes
  6871 ;; Hardware stack levels used: 1
  6872 ;; Hardware stack levels required when called: 2
  6873 ;; This function calls:
  6874 ;;		Nothing
  6875 ;; This function is called by:
  6876 ;;		_displayChange
  6877 ;; This function uses a non-reentrant model
  6878 ;;
  6879                           
  6880                           
  6881                           ;psect for function _selectSwitch
  6882  1E5A                     _selectSwitch:
  6883                           
  6884                           ;newmain.c: 598:     if(RB4 == 1 && selectFlag == 1){
  6885                           
  6886                           ;incstack = 0
  6887                           ; Regs used in _selectSwitch: [wreg+status,2]
  6888  1E5A  1283               	bcf	3,5	;RP0=0, select bank0
  6889  1E5B  1303               	bcf	3,6	;RP1=0, select bank0
  6890  1E5C  1A06               	btfsc	6,4	;volatile
  6891  1E5D  1E53               	btfss	_selectFlag/(0+8),_selectFlag& (0+7)	;volatile
  6892  1E5E  2E62               	goto	l362
  6893                           
  6894                           ;newmain.c: 599:         selectFlag = 0;
  6895  1E5F  1253               	bcf	_selectFlag/(0+8),_selectFlag& (0+7)	;volatile
  6896                           
  6897                           ;newmain.c: 600:         return 1;
  6898  1E60  3001               	movlw	1
  6899  1E61  0008               	return
  6900  1E62                     l362:	
  6901                           ;newmain.c: 601:     }
  6902                           
  6903                           
  6904                           ;newmain.c: 602:     if(RB4 == 0){
  6905  1E62  1A06               	btfsc	6,4	;volatile
  6906  1E63  2E67               	goto	l2090
  6907                           
  6908                           ;newmain.c: 603:         selectFlag = 1;
  6909  1E64  1653               	bsf	_selectFlag/(0+8),_selectFlag& (0+7)	;volatile
  6910                           
  6911                           ;newmain.c: 604:         skipCount = 0;
  6912  1E65  1683               	bsf	3,5	;RP0=1, select bank1
  6913  1E66  01B8               	clrf	_skipCount^(0+128)	;volatile
  6914  1E67                     l2090:
  6915                           
  6916                           ;newmain.c: 606:     return 0;
  6917  1E67  3000               	movlw	0
  6918  1E68  0008               	return
  6919  1E69                     __end_of_selectSwitch:
  6920                           
  6921                           	psect	text20
  6922  0836                     __ptext20:	
  6923 ;; *************** function _increment *****************
  6924 ;; Defined at:
  6925 ;;		line 660 in file "newmain.c"
  6926 ;; Parameters:    Size  Location     Type
  6927 ;;  value           4   47[BANK0 ] unsigned long 
  6928 ;; Auto vars:     Size  Location     Type
  6929 ;;		None
  6930 ;; Return value:  Size  Location     Type
  6931 ;;                  4   47[BANK0 ] unsigned long 
  6932 ;; Registers used:
  6933 ;;		wreg, status,2, status,0, pclath, cstack
  6934 ;; Tracked objects:
  6935 ;;		On entry : 300/0
  6936 ;;		On exit  : 300/0
  6937 ;;		Unchanged: 0/0
  6938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6939 ;;      Params:         0       4       0       0       0
  6940 ;;      Locals:         0       0       0       0       0
  6941 ;;      Temps:          0       0       4       0       0
  6942 ;;      Totals:         0       4       4       0       0
  6943 ;;Total ram usage:        8 bytes
  6944 ;; Hardware stack levels used: 1
  6945 ;; Hardware stack levels required when called: 3
  6946 ;; This function calls:
  6947 ;;		___llmod
  6948 ;; This function is called by:
  6949 ;;		_displayChange
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           
  6953                           
  6954                           ;psect for function _increment
  6955  0836                     _increment:
  6956                           
  6957                           ;newmain.c: 670:     if(currentDisplay == 1){
  6958                           
  6959                           ;incstack = 0
  6960                           ; Regs used in _increment: [wreg+status,2+status,0+pclath+cstack]
  6961  0836  035B               	decf	_currentDisplay,w	;volatile
  6962  0837  1D03               	btfss	3,2
  6963  0838  289F               	goto	l3068
  6964                           
  6965                           ;newmain.c: 671:         if(value%10000>=9000){
  6966  0839  3000               	movlw	0
  6967  083A  1683               	bsf	3,5	;RP0=1, select bank1
  6968  083B  00DF               	movwf	(___llmod@divisor+3)^(0+128)
  6969  083C  3000               	movlw	0
  6970  083D  00DE               	movwf	(___llmod@divisor+2)^(0+128)
  6971  083E  3027               	movlw	39
  6972  083F  00DD               	movwf	(___llmod@divisor+1)^(0+128)
  6973  0840  3010               	movlw	16
  6974  0841  00DC               	movwf	___llmod@divisor^(0+128)
  6975  0842  1283               	bcf	3,5	;RP0=0, select bank0
  6976  0843  0852               	movf	increment@value+3,w
  6977  0844  1683               	bsf	3,5	;RP0=1, select bank1
  6978  0845  00E3               	movwf	(___llmod@dividend+3)^(0+128)
  6979  0846  1283               	bcf	3,5	;RP0=0, select bank0
  6980  0847  0851               	movf	increment@value+2,w
  6981  0848  1683               	bsf	3,5	;RP0=1, select bank1
  6982  0849  00E2               	movwf	(___llmod@dividend+2)^(0+128)
  6983  084A  1283               	bcf	3,5	;RP0=0, select bank0
  6984  084B  0850               	movf	increment@value+1,w
  6985  084C  1683               	bsf	3,5	;RP0=1, select bank1
  6986  084D  00E1               	movwf	(___llmod@dividend+1)^(0+128)
  6987  084E  1283               	bcf	3,5	;RP0=0, select bank0
  6988  084F  084F               	movf	increment@value,w
  6989  0850  1683               	bsf	3,5	;RP0=1, select bank1
  6990  0851  00E0               	movwf	___llmod@dividend^(0+128)
  6991  0852  160A  118A  2087  120A  158A  	fcall	___llmod
  6992  0857  085F               	movf	(?___llmod+3)^(0+128),w
  6993  0858  1D03               	btfss	3,2
  6994  0859  2867               	goto	l3064
  6995  085A  085E               	movf	(?___llmod+2)^(0+128),w
  6996  085B  1D03               	btfss	3,2
  6997  085C  2867               	goto	l3064
  6998  085D  3023               	movlw	35
  6999  085E  025D               	subwf	(?___llmod+1)^(0+128),w
  7000  085F  1D03               	skipz
  7001  0860  2865               	goto	u4153
  7002  0861  3028               	movlw	40
  7003  0862  025C               	subwf	?___llmod^(0+128),w
  7004  0863  1D03               	skipz
  7005  0864  2865               	goto	u4153
  7006  0865                     u4153:
  7007  0865  1C03               	btfss	3,0
  7008  0866  288F               	goto	l3066
  7009  0867                     l3064:
  7010                           
  7011                           ;newmain.c: 672:             value -= 9000;
  7012  0867  3028               	movlw	40
  7013  0868  1683               	bsf	3,5	;RP0=1, select bank1
  7014  0869  1303               	bcf	3,6	;RP1=0, select bank1
  7015  086A  00E4               	movwf	??_increment^(0+128)
  7016  086B  3023               	movlw	35
  7017  086C  00E5               	movwf	(??_increment^(0+128)+1)
  7018  086D  3000               	movlw	0
  7019  086E  00E6               	movwf	(??_increment^(0+128)+2)
  7020  086F  3000               	movlw	0
  7021  0870  00E7               	movwf	(??_increment^(0+128)+3)
  7022  0871  0864               	movf	??_increment^(0+128),w
  7023  0872  1283               	bcf	3,5	;RP0=0, select bank0
  7024  0873  02CF               	subwf	increment@value,f
  7025  0874  1683               	bsf	3,5	;RP0=1, select bank1
  7026  0875  0865               	movf	(??_increment+1)^(0+128),w
  7027  0876  1C03               	skipc
  7028  0877  0F65               	incfsz	(??_increment+1)^(0+128),w
  7029  0878  287A               	goto	u4165
  7030  0879  287C               	goto	u4166
  7031  087A                     u4165:
  7032  087A  1283               	bcf	3,5	;RP0=0, select bank0
  7033  087B  02D0               	subwf	increment@value+1,f
  7034  087C                     u4166:
  7035  087C  1683               	bsf	3,5	;RP0=1, select bank1
  7036  087D  0866               	movf	(??_increment+2)^(0+128),w
  7037  087E  1C03               	skipc
  7038  087F  0F66               	incfsz	(??_increment+2)^(0+128),w
  7039  0880  2882               	goto	u4167
  7040  0881  2884               	goto	u4168
  7041  0882                     u4167:
  7042  0882  1283               	bcf	3,5	;RP0=0, select bank0
  7043  0883  02D1               	subwf	increment@value+2,f
  7044  0884                     u4168:
  7045  0884  1683               	bsf	3,5	;RP0=1, select bank1
  7046  0885  0867               	movf	(??_increment+3)^(0+128),w
  7047  0886  1C03               	skipc
  7048  0887  0F67               	incfsz	(??_increment+3)^(0+128),w
  7049  0888  288A               	goto	u4169
  7050  0889  288C               	goto	u4160
  7051  088A                     u4169:
  7052  088A  1283               	bcf	3,5	;RP0=0, select bank0
  7053  088B  02D2               	subwf	increment@value+3,f
  7054  088C                     u4160:
  7055  088C  1683               	bsf	3,5	;RP0=1, select bank1
  7056  088D  1283               	bcf	3,5	;RP0=0, select bank0
  7057                           
  7058                           ;newmain.c: 673:         }
  7059  088E  289F               	goto	l3068
  7060  088F                     l3066:
  7061                           
  7062                           ;newmain.c: 675:             value += 1000;
  7063  088F  30E8               	movlw	232
  7064  0890  1283               	bcf	3,5	;RP0=0, select bank0
  7065  0891  1303               	bcf	3,6	;RP1=0, select bank0
  7066  0892  07CF               	addwf	increment@value,f
  7067  0893  3003               	movlw	3
  7068  0894  1803               	skipnc
  7069  0895  3004               	movlw	4
  7070  0896  07D0               	addwf	increment@value+1,f
  7071  0897  3000               	movlw	0
  7072  0898  1803               	skipnc
  7073  0899  3001               	movlw	1
  7074  089A  07D1               	addwf	increment@value+2,f
  7075  089B  3000               	movlw	0
  7076  089C  1803               	skipnc
  7077  089D  3001               	movlw	1
  7078  089E  07D2               	addwf	increment@value+3,f
  7079  089F                     l3068:
  7080                           
  7081                           ;newmain.c: 679:     if(currentDisplay == 2){
  7082  089F  3002               	movlw	2
  7083  08A0  065B               	xorwf	_currentDisplay,w	;volatile
  7084  08A1  1D03               	btfss	3,2
  7085  08A2  2909               	goto	l3076
  7086                           
  7087                           ;newmain.c: 680:         if(value%1000>=900){
  7088  08A3  3000               	movlw	0
  7089  08A4  1683               	bsf	3,5	;RP0=1, select bank1
  7090  08A5  00DF               	movwf	(___llmod@divisor+3)^(0+128)
  7091  08A6  3000               	movlw	0
  7092  08A7  00DE               	movwf	(___llmod@divisor+2)^(0+128)
  7093  08A8  3003               	movlw	3
  7094  08A9  00DD               	movwf	(___llmod@divisor+1)^(0+128)
  7095  08AA  30E8               	movlw	232
  7096  08AB  00DC               	movwf	___llmod@divisor^(0+128)
  7097  08AC  1283               	bcf	3,5	;RP0=0, select bank0
  7098  08AD  0852               	movf	increment@value+3,w
  7099  08AE  1683               	bsf	3,5	;RP0=1, select bank1
  7100  08AF  00E3               	movwf	(___llmod@dividend+3)^(0+128)
  7101  08B0  1283               	bcf	3,5	;RP0=0, select bank0
  7102  08B1  0851               	movf	increment@value+2,w
  7103  08B2  1683               	bsf	3,5	;RP0=1, select bank1
  7104  08B3  00E2               	movwf	(___llmod@dividend+2)^(0+128)
  7105  08B4  1283               	bcf	3,5	;RP0=0, select bank0
  7106  08B5  0850               	movf	increment@value+1,w
  7107  08B6  1683               	bsf	3,5	;RP0=1, select bank1
  7108  08B7  00E1               	movwf	(___llmod@dividend+1)^(0+128)
  7109  08B8  1283               	bcf	3,5	;RP0=0, select bank0
  7110  08B9  084F               	movf	increment@value,w
  7111  08BA  1683               	bsf	3,5	;RP0=1, select bank1
  7112  08BB  00E0               	movwf	___llmod@dividend^(0+128)
  7113  08BC  160A  118A  2087  120A  158A  	fcall	___llmod
  7114  08C1  085F               	movf	(?___llmod+3)^(0+128),w
  7115  08C2  1D03               	btfss	3,2
  7116  08C3  28D1               	goto	l3072
  7117  08C4  085E               	movf	(?___llmod+2)^(0+128),w
  7118  08C5  1D03               	btfss	3,2
  7119  08C6  28D1               	goto	l3072
  7120  08C7  3003               	movlw	3
  7121  08C8  025D               	subwf	(?___llmod+1)^(0+128),w
  7122  08C9  1D03               	skipz
  7123  08CA  28CF               	goto	u4183
  7124  08CB  3084               	movlw	132
  7125  08CC  025C               	subwf	?___llmod^(0+128),w
  7126  08CD  1D03               	skipz
  7127  08CE  28CF               	goto	u4183
  7128  08CF                     u4183:
  7129  08CF  1C03               	btfss	3,0
  7130  08D0  28F9               	goto	l3074
  7131  08D1                     l3072:
  7132                           
  7133                           ;newmain.c: 681:             value -= 900;
  7134  08D1  3084               	movlw	132
  7135  08D2  1683               	bsf	3,5	;RP0=1, select bank1
  7136  08D3  1303               	bcf	3,6	;RP1=0, select bank1
  7137  08D4  00E4               	movwf	??_increment^(0+128)
  7138  08D5  3003               	movlw	3
  7139  08D6  00E5               	movwf	(??_increment^(0+128)+1)
  7140  08D7  3000               	movlw	0
  7141  08D8  00E6               	movwf	(??_increment^(0+128)+2)
  7142  08D9  3000               	movlw	0
  7143  08DA  00E7               	movwf	(??_increment^(0+128)+3)
  7144  08DB  0864               	movf	??_increment^(0+128),w
  7145  08DC  1283               	bcf	3,5	;RP0=0, select bank0
  7146  08DD  02CF               	subwf	increment@value,f
  7147  08DE  1683               	bsf	3,5	;RP0=1, select bank1
  7148  08DF  0865               	movf	(??_increment+1)^(0+128),w
  7149  08E0  1C03               	skipc
  7150  08E1  0F65               	incfsz	(??_increment+1)^(0+128),w
  7151  08E2  28E4               	goto	u4195
  7152  08E3  28E6               	goto	u4196
  7153  08E4                     u4195:
  7154  08E4  1283               	bcf	3,5	;RP0=0, select bank0
  7155  08E5  02D0               	subwf	increment@value+1,f
  7156  08E6                     u4196:
  7157  08E6  1683               	bsf	3,5	;RP0=1, select bank1
  7158  08E7  0866               	movf	(??_increment+2)^(0+128),w
  7159  08E8  1C03               	skipc
  7160  08E9  0F66               	incfsz	(??_increment+2)^(0+128),w
  7161  08EA  28EC               	goto	u4197
  7162  08EB  28EE               	goto	u4198
  7163  08EC                     u4197:
  7164  08EC  1283               	bcf	3,5	;RP0=0, select bank0
  7165  08ED  02D1               	subwf	increment@value+2,f
  7166  08EE                     u4198:
  7167  08EE  1683               	bsf	3,5	;RP0=1, select bank1
  7168  08EF  0867               	movf	(??_increment+3)^(0+128),w
  7169  08F0  1C03               	skipc
  7170  08F1  0F67               	incfsz	(??_increment+3)^(0+128),w
  7171  08F2  28F4               	goto	u4199
  7172  08F3  28F6               	goto	u4190
  7173  08F4                     u4199:
  7174  08F4  1283               	bcf	3,5	;RP0=0, select bank0
  7175  08F5  02D2               	subwf	increment@value+3,f
  7176  08F6                     u4190:
  7177  08F6  1683               	bsf	3,5	;RP0=1, select bank1
  7178  08F7  1283               	bcf	3,5	;RP0=0, select bank0
  7179                           
  7180                           ;newmain.c: 682:         }
  7181  08F8  2909               	goto	l3076
  7182  08F9                     l3074:
  7183                           
  7184                           ;newmain.c: 684:             value += 100;
  7185  08F9  3064               	movlw	100
  7186  08FA  1283               	bcf	3,5	;RP0=0, select bank0
  7187  08FB  1303               	bcf	3,6	;RP1=0, select bank0
  7188  08FC  07CF               	addwf	increment@value,f
  7189  08FD  3000               	movlw	0
  7190  08FE  1803               	skipnc
  7191  08FF  3001               	movlw	1
  7192  0900  07D0               	addwf	increment@value+1,f
  7193  0901  3000               	movlw	0
  7194  0902  1803               	skipnc
  7195  0903  3001               	movlw	1
  7196  0904  07D1               	addwf	increment@value+2,f
  7197  0905  3000               	movlw	0
  7198  0906  1803               	skipnc
  7199  0907  3001               	movlw	1
  7200  0908  07D2               	addwf	increment@value+3,f
  7201  0909                     l3076:
  7202                           
  7203                           ;newmain.c: 688:     if(currentDisplay == 3){
  7204  0909  3003               	movlw	3
  7205  090A  065B               	xorwf	_currentDisplay,w	;volatile
  7206  090B  1D03               	btfss	3,2
  7207  090C  2972               	goto	l3084
  7208                           
  7209                           ;newmain.c: 689:         if(value%100>=90){
  7210  090D  3000               	movlw	0
  7211  090E  1683               	bsf	3,5	;RP0=1, select bank1
  7212  090F  00DF               	movwf	(___llmod@divisor+3)^(0+128)
  7213  0910  3000               	movlw	0
  7214  0911  00DE               	movwf	(___llmod@divisor+2)^(0+128)
  7215  0912  3000               	movlw	0
  7216  0913  00DD               	movwf	(___llmod@divisor+1)^(0+128)
  7217  0914  3064               	movlw	100
  7218  0915  00DC               	movwf	___llmod@divisor^(0+128)
  7219  0916  1283               	bcf	3,5	;RP0=0, select bank0
  7220  0917  0852               	movf	increment@value+3,w
  7221  0918  1683               	bsf	3,5	;RP0=1, select bank1
  7222  0919  00E3               	movwf	(___llmod@dividend+3)^(0+128)
  7223  091A  1283               	bcf	3,5	;RP0=0, select bank0
  7224  091B  0851               	movf	increment@value+2,w
  7225  091C  1683               	bsf	3,5	;RP0=1, select bank1
  7226  091D  00E2               	movwf	(___llmod@dividend+2)^(0+128)
  7227  091E  1283               	bcf	3,5	;RP0=0, select bank0
  7228  091F  0850               	movf	increment@value+1,w
  7229  0920  1683               	bsf	3,5	;RP0=1, select bank1
  7230  0921  00E1               	movwf	(___llmod@dividend+1)^(0+128)
  7231  0922  1283               	bcf	3,5	;RP0=0, select bank0
  7232  0923  084F               	movf	increment@value,w
  7233  0924  1683               	bsf	3,5	;RP0=1, select bank1
  7234  0925  00E0               	movwf	___llmod@dividend^(0+128)
  7235  0926  160A  118A  2087  120A  158A  	fcall	___llmod
  7236  092B  085F               	movf	(?___llmod+3)^(0+128),w
  7237  092C  1D03               	btfss	3,2
  7238  092D  293A               	goto	l3080
  7239  092E  085E               	movf	(?___llmod+2)^(0+128),w
  7240  092F  1D03               	btfss	3,2
  7241  0930  293A               	goto	l3080
  7242  0931  085D               	movf	(?___llmod+1)^(0+128),w
  7243  0932  1D03               	btfss	3,2
  7244  0933  293A               	goto	l3080
  7245  0934  305A               	movlw	90
  7246  0935  025C               	subwf	?___llmod^(0+128),w
  7247  0936  1D03               	skipz
  7248  0937  2938               	goto	u4213
  7249  0938                     u4213:
  7250  0938  1C03               	btfss	3,0
  7251  0939  2962               	goto	l3082
  7252  093A                     l3080:
  7253                           
  7254                           ;newmain.c: 690:             value -= 90;
  7255  093A  305A               	movlw	90
  7256  093B  1683               	bsf	3,5	;RP0=1, select bank1
  7257  093C  1303               	bcf	3,6	;RP1=0, select bank1
  7258  093D  00E4               	movwf	??_increment^(0+128)
  7259  093E  3000               	movlw	0
  7260  093F  00E5               	movwf	(??_increment^(0+128)+1)
  7261  0940  3000               	movlw	0
  7262  0941  00E6               	movwf	(??_increment^(0+128)+2)
  7263  0942  3000               	movlw	0
  7264  0943  00E7               	movwf	(??_increment^(0+128)+3)
  7265  0944  0864               	movf	??_increment^(0+128),w
  7266  0945  1283               	bcf	3,5	;RP0=0, select bank0
  7267  0946  02CF               	subwf	increment@value,f
  7268  0947  1683               	bsf	3,5	;RP0=1, select bank1
  7269  0948  0865               	movf	(??_increment+1)^(0+128),w
  7270  0949  1C03               	skipc
  7271  094A  0F65               	incfsz	(??_increment+1)^(0+128),w
  7272  094B  294D               	goto	u4225
  7273  094C  294F               	goto	u4226
  7274  094D                     u4225:
  7275  094D  1283               	bcf	3,5	;RP0=0, select bank0
  7276  094E  02D0               	subwf	increment@value+1,f
  7277  094F                     u4226:
  7278  094F  1683               	bsf	3,5	;RP0=1, select bank1
  7279  0950  0866               	movf	(??_increment+2)^(0+128),w
  7280  0951  1C03               	skipc
  7281  0952  0F66               	incfsz	(??_increment+2)^(0+128),w
  7282  0953  2955               	goto	u4227
  7283  0954  2957               	goto	u4228
  7284  0955                     u4227:
  7285  0955  1283               	bcf	3,5	;RP0=0, select bank0
  7286  0956  02D1               	subwf	increment@value+2,f
  7287  0957                     u4228:
  7288  0957  1683               	bsf	3,5	;RP0=1, select bank1
  7289  0958  0867               	movf	(??_increment+3)^(0+128),w
  7290  0959  1C03               	skipc
  7291  095A  0F67               	incfsz	(??_increment+3)^(0+128),w
  7292  095B  295D               	goto	u4229
  7293  095C  295F               	goto	u4220
  7294  095D                     u4229:
  7295  095D  1283               	bcf	3,5	;RP0=0, select bank0
  7296  095E  02D2               	subwf	increment@value+3,f
  7297  095F                     u4220:
  7298  095F  1683               	bsf	3,5	;RP0=1, select bank1
  7299  0960  1283               	bcf	3,5	;RP0=0, select bank0
  7300                           
  7301                           ;newmain.c: 691:         }
  7302  0961  2972               	goto	l3084
  7303  0962                     l3082:
  7304                           
  7305                           ;newmain.c: 693:             value += 10;
  7306  0962  300A               	movlw	10
  7307  0963  1283               	bcf	3,5	;RP0=0, select bank0
  7308  0964  1303               	bcf	3,6	;RP1=0, select bank0
  7309  0965  07CF               	addwf	increment@value,f
  7310  0966  3000               	movlw	0
  7311  0967  1803               	skipnc
  7312  0968  3001               	movlw	1
  7313  0969  07D0               	addwf	increment@value+1,f
  7314  096A  3000               	movlw	0
  7315  096B  1803               	skipnc
  7316  096C  3001               	movlw	1
  7317  096D  07D1               	addwf	increment@value+2,f
  7318  096E  3000               	movlw	0
  7319  096F  1803               	skipnc
  7320  0970  3001               	movlw	1
  7321  0971  07D2               	addwf	increment@value+3,f
  7322  0972                     l3084:
  7323                           
  7324                           ;newmain.c: 697:     if(currentDisplay == 4){
  7325  0972  3004               	movlw	4
  7326  0973  065B               	xorwf	_currentDisplay,w	;volatile
  7327  0974  1D03               	btfss	3,2
  7328  0975  0008               	return
  7329                           
  7330                           ;newmain.c: 698:         if(value%10>=9){
  7331  0976  3000               	movlw	0
  7332  0977  1683               	bsf	3,5	;RP0=1, select bank1
  7333  0978  00DF               	movwf	(___llmod@divisor+3)^(0+128)
  7334  0979  3000               	movlw	0
  7335  097A  00DE               	movwf	(___llmod@divisor+2)^(0+128)
  7336  097B  3000               	movlw	0
  7337  097C  00DD               	movwf	(___llmod@divisor+1)^(0+128)
  7338  097D  300A               	movlw	10
  7339  097E  00DC               	movwf	___llmod@divisor^(0+128)
  7340  097F  1283               	bcf	3,5	;RP0=0, select bank0
  7341  0980  0852               	movf	increment@value+3,w
  7342  0981  1683               	bsf	3,5	;RP0=1, select bank1
  7343  0982  00E3               	movwf	(___llmod@dividend+3)^(0+128)
  7344  0983  1283               	bcf	3,5	;RP0=0, select bank0
  7345  0984  0851               	movf	increment@value+2,w
  7346  0985  1683               	bsf	3,5	;RP0=1, select bank1
  7347  0986  00E2               	movwf	(___llmod@dividend+2)^(0+128)
  7348  0987  1283               	bcf	3,5	;RP0=0, select bank0
  7349  0988  0850               	movf	increment@value+1,w
  7350  0989  1683               	bsf	3,5	;RP0=1, select bank1
  7351  098A  00E1               	movwf	(___llmod@dividend+1)^(0+128)
  7352  098B  1283               	bcf	3,5	;RP0=0, select bank0
  7353  098C  084F               	movf	increment@value,w
  7354  098D  1683               	bsf	3,5	;RP0=1, select bank1
  7355  098E  00E0               	movwf	___llmod@dividend^(0+128)
  7356  098F  160A  118A  2087  120A  158A  	fcall	___llmod
  7357  0994  085F               	movf	(?___llmod+3)^(0+128),w
  7358  0995  1D03               	btfss	3,2
  7359  0996  29A3               	goto	l3088
  7360  0997  085E               	movf	(?___llmod+2)^(0+128),w
  7361  0998  1D03               	btfss	3,2
  7362  0999  29A3               	goto	l3088
  7363  099A  085D               	movf	(?___llmod+1)^(0+128),w
  7364  099B  1D03               	btfss	3,2
  7365  099C  29A3               	goto	l3088
  7366  099D  3009               	movlw	9
  7367  099E  025C               	subwf	?___llmod^(0+128),w
  7368  099F  1D03               	skipz
  7369  09A0  29A1               	goto	u4243
  7370  09A1                     u4243:
  7371  09A1  1C03               	btfss	3,0
  7372  09A2  29CB               	goto	l3090
  7373  09A3                     l3088:
  7374                           
  7375                           ;newmain.c: 699:             value -= 9;
  7376  09A3  3009               	movlw	9
  7377  09A4  1683               	bsf	3,5	;RP0=1, select bank1
  7378  09A5  1303               	bcf	3,6	;RP1=0, select bank1
  7379  09A6  00E4               	movwf	??_increment^(0+128)
  7380  09A7  3000               	movlw	0
  7381  09A8  00E5               	movwf	(??_increment^(0+128)+1)
  7382  09A9  3000               	movlw	0
  7383  09AA  00E6               	movwf	(??_increment^(0+128)+2)
  7384  09AB  3000               	movlw	0
  7385  09AC  00E7               	movwf	(??_increment^(0+128)+3)
  7386  09AD  0864               	movf	??_increment^(0+128),w
  7387  09AE  1283               	bcf	3,5	;RP0=0, select bank0
  7388  09AF  02CF               	subwf	increment@value,f
  7389  09B0  1683               	bsf	3,5	;RP0=1, select bank1
  7390  09B1  0865               	movf	(??_increment+1)^(0+128),w
  7391  09B2  1C03               	skipc
  7392  09B3  0F65               	incfsz	(??_increment+1)^(0+128),w
  7393  09B4  29B6               	goto	u4255
  7394  09B5  29B8               	goto	u4256
  7395  09B6                     u4255:
  7396  09B6  1283               	bcf	3,5	;RP0=0, select bank0
  7397  09B7  02D0               	subwf	increment@value+1,f
  7398  09B8                     u4256:
  7399  09B8  1683               	bsf	3,5	;RP0=1, select bank1
  7400  09B9  0866               	movf	(??_increment+2)^(0+128),w
  7401  09BA  1C03               	skipc
  7402  09BB  0F66               	incfsz	(??_increment+2)^(0+128),w
  7403  09BC  29BE               	goto	u4257
  7404  09BD  29C0               	goto	u4258
  7405  09BE                     u4257:
  7406  09BE  1283               	bcf	3,5	;RP0=0, select bank0
  7407  09BF  02D1               	subwf	increment@value+2,f
  7408  09C0                     u4258:
  7409  09C0  1683               	bsf	3,5	;RP0=1, select bank1
  7410  09C1  0867               	movf	(??_increment+3)^(0+128),w
  7411  09C2  1C03               	skipc
  7412  09C3  0F67               	incfsz	(??_increment+3)^(0+128),w
  7413  09C4  29C6               	goto	u4259
  7414  09C5  29C8               	goto	u4250
  7415  09C6                     u4259:
  7416  09C6  1283               	bcf	3,5	;RP0=0, select bank0
  7417  09C7  02D2               	subwf	increment@value+3,f
  7418  09C8                     u4250:
  7419  09C8  1683               	bsf	3,5	;RP0=1, select bank1
  7420  09C9  1283               	bcf	3,5	;RP0=0, select bank0
  7421                           
  7422                           ;newmain.c: 700:         }
  7423  09CA  0008               	return
  7424  09CB                     l3090:
  7425                           
  7426                           ;newmain.c: 702:             value += 1;
  7427  09CB  3001               	movlw	1
  7428  09CC  1283               	bcf	3,5	;RP0=0, select bank0
  7429  09CD  1303               	bcf	3,6	;RP1=0, select bank0
  7430  09CE  07CF               	addwf	increment@value,f
  7431  09CF  3000               	movlw	0
  7432  09D0  1803               	skipnc
  7433  09D1  3001               	movlw	1
  7434  09D2  07D0               	addwf	increment@value+1,f
  7435  09D3  3000               	movlw	0
  7436  09D4  1803               	skipnc
  7437  09D5  3001               	movlw	1
  7438  09D6  07D1               	addwf	increment@value+2,f
  7439  09D7  3000               	movlw	0
  7440  09D8  1803               	skipnc
  7441  09D9  3001               	movlw	1
  7442  09DA  07D2               	addwf	increment@value+3,f
  7443                           
  7444                           ;newmain.c: 705:     return value;
  7445  09DB  0008               	return
  7446  09DC                     __end_of_increment:
  7447                           
  7448                           	psect	text21
  7449  15FD                     __ptext21:	
  7450 ;; *************** function _display1 *****************
  7451 ;; Defined at:
  7452 ;;		line 392 in file "newmain.c"
  7453 ;; Parameters:    Size  Location     Type
  7454 ;;  value           4   47[BANK0 ] unsigned long 
  7455 ;; Auto vars:     Size  Location     Type
  7456 ;;  dot1            1   10[BANK1 ] unsigned char 
  7457 ;;  dot             1   11[BANK1 ] unsigned char 
  7458 ;; Return value:  Size  Location     Type
  7459 ;;                  1    wreg      void 
  7460 ;; Registers used:
  7461 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7462 ;; Tracked objects:
  7463 ;;		On entry : 300/0
  7464 ;;		On exit  : 300/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7467 ;;      Params:         0       4       0       0       0
  7468 ;;      Locals:         0       0       2       0       0
  7469 ;;      Temps:          0       0       2       0       0
  7470 ;;      Totals:         0       4       4       0       0
  7471 ;;Total ram usage:        8 bytes
  7472 ;; Hardware stack levels used: 1
  7473 ;; Hardware stack levels required when called: 3
  7474 ;; This function calls:
  7475 ;;		___lldiv
  7476 ;;		___llmod
  7477 ;;		_dataPass
  7478 ;; This function is called by:
  7479 ;;		_viewMenu
  7480 ;;		_editMenu
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           
  7485                           ;psect for function _display1
  7486  15FD                     _display1:
  7487                           
  7488                           ;newmain.c: 394:     if(value/10000 == 0){
  7489                           
  7490                           ;incstack = 0
  7491                           ; Regs used in _display1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7492  15FD  3000               	movlw	0
  7493  15FE  00C2               	movwf	___lldiv@divisor+3
  7494  15FF  3000               	movlw	0
  7495  1600  00C1               	movwf	___lldiv@divisor+2
  7496  1601  3027               	movlw	39
  7497  1602  00C0               	movwf	___lldiv@divisor+1
  7498  1603  3010               	movlw	16
  7499  1604  00BF               	movwf	___lldiv@divisor
  7500  1605  0852               	movf	display1@value+3,w
  7501  1606  00C6               	movwf	___lldiv@dividend+3
  7502  1607  0851               	movf	display1@value+2,w
  7503  1608  00C5               	movwf	___lldiv@dividend+2
  7504  1609  0850               	movf	display1@value+1,w
  7505  160A  00C4               	movwf	___lldiv@dividend+1
  7506  160B  084F               	movf	display1@value,w
  7507  160C  00C3               	movwf	___lldiv@dividend
  7508  160D  160A  118A  218F  160A  118A  	fcall	___lldiv
  7509  1612  0842               	movf	?___lldiv+3,w
  7510  1613  0441               	iorwf	?___lldiv+2,w
  7511  1614  0440               	iorwf	?___lldiv+1,w
  7512  1615  043F               	iorwf	?___lldiv,w
  7513  1616  1D03               	skipz
  7514  1617  2E5B               	goto	l3166
  7515                           
  7516                           ;newmain.c: 395:         if(viewMenuPointer == 0 && editMenuPointer == 0){
  7517  1618  1683               	bsf	3,5	;RP0=1, select bank1
  7518  1619  083D               	movf	_viewMenuPointer^(0+128),w	;volatile
  7519  161A  1D03               	btfss	3,2
  7520  161B  2E21               	goto	l3128
  7521  161C  083C               	movf	_editMenuPointer^(0+128),w	;volatile
  7522  161D  1D03               	btfss	3,2
  7523  161E  2E21               	goto	l3128
  7524                           
  7525                           ;newmain.c: 396:             dataPass(FONT_DEFAULT[44] | 0x20);
  7526  161F  302D               	movlw	low (((_FONT_DEFAULT+44)-__stringbase)| (0+32768))
  7527  1620  2E53               	goto	L15
  7528  1621                     l3128:	
  7529                           ;newmain.c: 397:         }
  7530                           
  7531  1621  033D               	decf	_viewMenuPointer^(0+128),w	;volatile
  7532  1622  1D03               	btfss	3,2
  7533  1623  2E29               	goto	l3134
  7534  1624  083C               	movf	_editMenuPointer^(0+128),w	;volatile
  7535  1625  1D03               	btfss	3,2
  7536  1626  2E29               	goto	l3134
  7537                           
  7538                           ;newmain.c: 399:             dataPass(FONT_DEFAULT[82] | 0x20);
  7539  1627  3053               	movlw	low (((_FONT_DEFAULT+82)-__stringbase)| (0+32768))
  7540  1628  2E53               	goto	L15
  7541  1629                     l3134:	
  7542                           ;newmain.c: 400:         }
  7543                           
  7544  1629  3002               	movlw	2
  7545  162A  063D               	xorwf	_viewMenuPointer^(0+128),w	;volatile
  7546  162B  1D03               	btfss	3,2
  7547  162C  2E32               	goto	l3140
  7548  162D  083C               	movf	_editMenuPointer^(0+128),w	;volatile
  7549  162E  1D03               	btfss	3,2
  7550  162F  2E32               	goto	l3140
  7551                           
  7552                           ;newmain.c: 402:             dataPass(FONT_DEFAULT['d' - 32] | 0x20);
  7553  1630  3045               	movlw	low (((_FONT_DEFAULT+68)-__stringbase)| (0+32768))
  7554  1631  2E53               	goto	L15
  7555  1632                     l3140:	
  7556                           ;newmain.c: 403:         }
  7557                           
  7558  1632  3003               	movlw	3
  7559  1633  063D               	xorwf	_viewMenuPointer^(0+128),w	;volatile
  7560  1634  1D03               	btfss	3,2
  7561  1635  2E3B               	goto	l3146
  7562  1636  083C               	movf	_editMenuPointer^(0+128),w	;volatile
  7563  1637  1D03               	btfss	3,2
  7564  1638  2E3B               	goto	l3146
  7565                           
  7566                           ;newmain.c: 405:             dataPass(FONT_DEFAULT['H' - 32] | 0x20);
  7567  1639  3029               	movlw	low (((_FONT_DEFAULT+40)-__stringbase)| (0+32768))
  7568  163A  2E53               	goto	L15
  7569  163B                     l3146:	
  7570                           ;newmain.c: 406:         }
  7571                           
  7572  163B  033C               	decf	_editMenuPointer^(0+128),w	;volatile
  7573  163C  1D03               	btfss	3,2
  7574  163D  2E40               	goto	l3150
  7575                           
  7576                           ;newmain.c: 408:             dataPass(FONT_DEFAULT['F' - 32] | 0x20);
  7577  163E  3027               	movlw	low (((_FONT_DEFAULT+38)-__stringbase)| (0+32768))
  7578  163F  2E53               	goto	L15
  7579  1640                     l3150:	
  7580                           ;newmain.c: 409:         }
  7581                           
  7582  1640  3002               	movlw	2
  7583  1641  063C               	xorwf	_editMenuPointer^(0+128),w	;volatile
  7584  1642  1903               	btfsc	3,2
  7585  1643  2E52               	goto	L16
  7586                           
  7587                           ;newmain.c: 412:         }
  7588                           
  7589                           ;newmain.c: 411:             dataPass(FONT_DEFAULT['P'- 32] | 0x20);
  7590  1644  3003               	movlw	3
  7591  1645  063C               	xorwf	_editMenuPointer^(0+128),w	;volatile
  7592  1646  1903               	btfsc	3,2
  7593  1647  2E52               	goto	L16
  7594                           
  7595                           ;newmain.c: 415:         }
  7596                           
  7597                           ;newmain.c: 414:             dataPass(FONT_DEFAULT['P'- 32] | 0x20);
  7598  1648  3004               	movlw	4
  7599  1649  063C               	xorwf	_editMenuPointer^(0+128),w	;volatile
  7600  164A  1D03               	btfss	3,2
  7601  164B  2E4E               	goto	l3162
  7602                           
  7603                           ;newmain.c: 417:             dataPass(FONT_DEFAULT['C'- 32] | 0x20);
  7604  164C  3024               	movlw	low (((_FONT_DEFAULT+35)-__stringbase)| (0+32768))
  7605  164D  2E53               	goto	L15
  7606  164E                     l3162:	
  7607                           ;newmain.c: 418:         }
  7608                           
  7609  164E  3005               	movlw	5
  7610  164F  063C               	xorwf	_editMenuPointer^(0+128),w	;volatile
  7611  1650  1D03               	btfss	3,2
  7612  1651  2E7A               	goto	l3168
  7613  1652                     L16:
  7614                           
  7615                           ;newmain.c: 420:             dataPass(FONT_DEFAULT['P'- 32] | 0x20);
  7616  1652  3031               	movlw	low (((_FONT_DEFAULT+48)-__stringbase)| (0+32768))
  7617  1653                     L15:
  7618  1653  0084               	movwf	4
  7619  1654  160A  118A  2000  160A  118A  	fcall	stringdir
  7620  1659  3820               	iorlw	32
  7621  165A  2E75               	goto	L2
  7622  165B                     l3166:
  7623                           
  7624                           ;newmain.c: 424:         dataPass(segCode[value/10000]);
  7625  165B  3000               	movlw	0
  7626  165C  00C2               	movwf	___lldiv@divisor+3
  7627  165D  3000               	movlw	0
  7628  165E  00C1               	movwf	___lldiv@divisor+2
  7629  165F  3027               	movlw	39
  7630  1660  00C0               	movwf	___lldiv@divisor+1
  7631  1661  3010               	movlw	16
  7632  1662  00BF               	movwf	___lldiv@divisor
  7633  1663  0852               	movf	display1@value+3,w
  7634  1664  00C6               	movwf	___lldiv@dividend+3
  7635  1665  0851               	movf	display1@value+2,w
  7636  1666  00C5               	movwf	___lldiv@dividend+2
  7637  1667  0850               	movf	display1@value+1,w
  7638  1668  00C4               	movwf	___lldiv@dividend+1
  7639  1669  084F               	movf	display1@value,w
  7640  166A  00C3               	movwf	___lldiv@dividend
  7641  166B  160A  118A  218F  160A  118A  	fcall	___lldiv
  7642  1670  083F               	movf	?___lldiv,w
  7643  1671  3EBE               	addlw	(low (_segCode| 0))& (0+255)
  7644  1672  0084               	movwf	4
  7645  1673  1383               	bcf	3,7	;select IRP bank1
  7646  1674  0800               	movf	0,w
  7647  1675                     L2:
  7648  1675  160A  158A  26E3  160A  118A  	fcall	_dataPass
  7649  167A                     l3168:
  7650                           
  7651                           ;newmain.c: 426:     RA2 = 0;
  7652  167A  1283               	bcf	3,5	;RP0=0, select bank0
  7653  167B  1105               	bcf	5,2	;volatile
  7654                           
  7655                           ;newmain.c: 427:     RA0 = 0;
  7656  167C  1005               	bcf	5,0	;volatile
  7657                           
  7658                           ;newmain.c: 428:     RA1 = 1;
  7659  167D  1485               	bsf	5,1	;volatile
  7660                           
  7661                           ;newmain.c: 429:     RA3 = 1;
  7662  167E  1585               	bsf	5,3	;volatile
  7663                           
  7664                           ;newmain.c: 430:     _delay((unsigned long)((1)*(20000000/4000.0)));
  7665  167F  3007               	movlw	7
  7666  1680  1683               	bsf	3,5	;RP0=1, select bank1
  7667  1681  1303               	bcf	3,6	;RP1=0, select bank1
  7668  1682  00E5               	movwf	(??_display1^(0+128)+1)
  7669  1683  307C               	movlw	124
  7670  1684  00E4               	movwf	??_display1^(0+128)
  7671  1685                     u5537:
  7672  1685  0BE4               	decfsz	??_display1^(0+128),f
  7673  1686  2E85               	goto	u5537
  7674  1687  0BE5               	decfsz	(??_display1^(0+128)+1),f
  7675  1688  2E85               	goto	u5537
  7676  1689  0000               	nop
  7677                           
  7678                           ;newmain.c: 432:     if(currentDisplay == 1 && blinkValue > 10){
  7679  168A  1283               	bcf	3,5	;RP0=0, select bank0
  7680  168B  1303               	bcf	3,6	;RP1=0, select bank0
  7681  168C  035B               	decf	_currentDisplay,w	;volatile
  7682  168D  1D03               	btfss	3,2
  7683  168E  2E95               	goto	l3184
  7684  168F  300B               	movlw	11
  7685  1690  0257               	subwf	_blinkValue,w	;volatile
  7686  1691  1C03               	skipc
  7687  1692  2E95               	goto	l3184
  7688                           
  7689                           ;newmain.c: 433:         dataPass (0x00);
  7690  1693  3000               	movlw	0
  7691  1694  2ECD               	goto	L3
  7692  1695                     l3184:	
  7693                           ;newmain.c: 434:     }
  7694                           
  7695                           
  7696                           ;newmain.c: 436:         dataPass(segCode[(value/1000)%10]);
  7697  1695  3000               	movlw	0
  7698  1696  1683               	bsf	3,5	;RP0=1, select bank1
  7699  1697  00DF               	movwf	(___llmod@divisor+3)^(0+128)
  7700  1698  3000               	movlw	0
  7701  1699  00DE               	movwf	(___llmod@divisor+2)^(0+128)
  7702  169A  3000               	movlw	0
  7703  169B  00DD               	movwf	(___llmod@divisor+1)^(0+128)
  7704  169C  300A               	movlw	10
  7705  169D  00DC               	movwf	___llmod@divisor^(0+128)
  7706  169E  3000               	movlw	0
  7707  169F  1283               	bcf	3,5	;RP0=0, select bank0
  7708  16A0  00C2               	movwf	___lldiv@divisor+3
  7709  16A1  3000               	movlw	0
  7710  16A2  00C1               	movwf	___lldiv@divisor+2
  7711  16A3  3003               	movlw	3
  7712  16A4  00C0               	movwf	___lldiv@divisor+1
  7713  16A5  30E8               	movlw	232
  7714  16A6  00BF               	movwf	___lldiv@divisor
  7715  16A7  0852               	movf	display1@value+3,w
  7716  16A8  00C6               	movwf	___lldiv@dividend+3
  7717  16A9  0851               	movf	display1@value+2,w
  7718  16AA  00C5               	movwf	___lldiv@dividend+2
  7719  16AB  0850               	movf	display1@value+1,w
  7720  16AC  00C4               	movwf	___lldiv@dividend+1
  7721  16AD  084F               	movf	display1@value,w
  7722  16AE  00C3               	movwf	___lldiv@dividend
  7723  16AF  160A  118A  218F  160A  118A  	fcall	___lldiv
  7724  16B4  0842               	movf	?___lldiv+3,w
  7725  16B5  1683               	bsf	3,5	;RP0=1, select bank1
  7726  16B6  00E3               	movwf	(___llmod@dividend+3)^(0+128)
  7727  16B7  1283               	bcf	3,5	;RP0=0, select bank0
  7728  16B8  0841               	movf	?___lldiv+2,w
  7729  16B9  1683               	bsf	3,5	;RP0=1, select bank1
  7730  16BA  00E2               	movwf	(___llmod@dividend+2)^(0+128)
  7731  16BB  1283               	bcf	3,5	;RP0=0, select bank0
  7732  16BC  0840               	movf	?___lldiv+1,w
  7733  16BD  1683               	bsf	3,5	;RP0=1, select bank1
  7734  16BE  00E1               	movwf	(___llmod@dividend+1)^(0+128)
  7735  16BF  1283               	bcf	3,5	;RP0=0, select bank0
  7736  16C0  083F               	movf	?___lldiv,w
  7737  16C1  1683               	bsf	3,5	;RP0=1, select bank1
  7738  16C2  00E0               	movwf	___llmod@dividend^(0+128)
  7739  16C3  160A  118A  2087  160A  118A  	fcall	___llmod
  7740  16C8  085C               	movf	?___llmod^(0+128),w
  7741  16C9  3EBE               	addlw	(low (_segCode| 0))& (0+255)
  7742  16CA  0084               	movwf	4
  7743  16CB  1383               	bcf	3,7	;select IRP bank1
  7744  16CC  0800               	movf	0,w
  7745  16CD                     L3:
  7746  16CD  160A  158A  26E3  160A  118A  	fcall	_dataPass
  7747                           
  7748                           ;newmain.c: 438:     RA2 = 0;
  7749  16D2  1105               	bcf	5,2	;volatile
  7750                           
  7751                           ;newmain.c: 439:     RA0 = 0;
  7752  16D3  1005               	bcf	5,0	;volatile
  7753                           
  7754                           ;newmain.c: 440:     RA1 = 1;
  7755  16D4  1485               	bsf	5,1	;volatile
  7756                           
  7757                           ;newmain.c: 441:     RA3 = 0;
  7758  16D5  1185               	bcf	5,3	;volatile
  7759                           
  7760                           ;newmain.c: 442:     _delay((unsigned long)((1)*(20000000/4000.0)));
  7761  16D6  3007               	movlw	7
  7762  16D7  1683               	bsf	3,5	;RP0=1, select bank1
  7763  16D8  1303               	bcf	3,6	;RP1=0, select bank1
  7764  16D9  00E5               	movwf	(??_display1^(0+128)+1)
  7765  16DA  307C               	movlw	124
  7766  16DB  00E4               	movwf	??_display1^(0+128)
  7767  16DC                     u5547:
  7768  16DC  0BE4               	decfsz	??_display1^(0+128),f
  7769  16DD  2EDC               	goto	u5547
  7770  16DE  0BE5               	decfsz	(??_display1^(0+128)+1),f
  7771  16DF  2EDC               	goto	u5547
  7772  16E0  0000               	nop
  7773                           
  7774                           ;newmain.c: 444:     if(currentDisplay == 2 && blinkValue > 10){
  7775  16E1  3002               	movlw	2
  7776  16E2  1283               	bcf	3,5	;RP0=0, select bank0
  7777  16E3  1303               	bcf	3,6	;RP1=0, select bank0
  7778  16E4  065B               	xorwf	_currentDisplay,w	;volatile
  7779  16E5  1D03               	btfss	3,2
  7780  16E6  2EED               	goto	l3202
  7781  16E7  300B               	movlw	11
  7782  16E8  0257               	subwf	_blinkValue,w	;volatile
  7783  16E9  1C03               	skipc
  7784  16EA  2EED               	goto	l3202
  7785                           
  7786                           ;newmain.c: 445:         dataPass (0x00);
  7787  16EB  3000               	movlw	0
  7788  16EC  2F33               	goto	L4
  7789  16ED                     l3202:	
  7790                           ;newmain.c: 446:     }
  7791                           
  7792                           
  7793                           ;newmain.c: 448:         uint8_t dot = 0;
  7794  16ED  1683               	bsf	3,5	;RP0=1, select bank1
  7795  16EE  01E7               	clrf	display1@dot^(0+128)
  7796                           
  7797                           ;newmain.c: 449:         if(viewMenuPointer == 1 || viewMenuPointer == 0){
  7798  16EF  033D               	decf	_viewMenuPointer^(0+128),w	;volatile
  7799  16F0  1D03               	btfss	3,2
  7800  16F1  083D               	movf	_viewMenuPointer^(0+128),w	;volatile
  7801  16F2  1D03               	btfss	3,2
  7802  16F3  2EF8               	goto	l3210
  7803                           
  7804                           ;newmain.c: 450:             dot = 0x20;
  7805  16F4  3020               	movlw	32
  7806  16F5  00E4               	movwf	??_display1^(0+128)
  7807  16F6  0864               	movf	??_display1^(0+128),w
  7808  16F7  00E7               	movwf	display1@dot^(0+128)
  7809  16F8                     l3210:
  7810                           
  7811                           ;newmain.c: 452:         if(editMenuPointer){
  7812  16F8  083C               	movf	_editMenuPointer^(0+128),w	;volatile
  7813  16F9  1D03               	btfss	3,2
  7814                           
  7815                           ;newmain.c: 453:             dot = 0;
  7816  16FA  01E7               	clrf	display1@dot^(0+128)
  7817                           
  7818                           ;newmain.c: 455:         dataPass(segCode[(value/100)%10] | dot);
  7819  16FB  3000               	movlw	0
  7820  16FC  00DF               	movwf	(___llmod@divisor+3)^(0+128)
  7821  16FD  3000               	movlw	0
  7822  16FE  00DE               	movwf	(___llmod@divisor+2)^(0+128)
  7823  16FF  3000               	movlw	0
  7824  1700  00DD               	movwf	(___llmod@divisor+1)^(0+128)
  7825  1701  300A               	movlw	10
  7826  1702  00DC               	movwf	___llmod@divisor^(0+128)
  7827  1703  3000               	movlw	0
  7828  1704  1283               	bcf	3,5	;RP0=0, select bank0
  7829  1705  00C2               	movwf	___lldiv@divisor+3
  7830  1706  3000               	movlw	0
  7831  1707  00C1               	movwf	___lldiv@divisor+2
  7832  1708  3000               	movlw	0
  7833  1709  00C0               	movwf	___lldiv@divisor+1
  7834  170A  3064               	movlw	100
  7835  170B  00BF               	movwf	___lldiv@divisor
  7836  170C  0852               	movf	display1@value+3,w
  7837  170D  00C6               	movwf	___lldiv@dividend+3
  7838  170E  0851               	movf	display1@value+2,w
  7839  170F  00C5               	movwf	___lldiv@dividend+2
  7840  1710  0850               	movf	display1@value+1,w
  7841  1711  00C4               	movwf	___lldiv@dividend+1
  7842  1712  084F               	movf	display1@value,w
  7843  1713  00C3               	movwf	___lldiv@dividend
  7844  1714  160A  118A  218F  160A  118A  	fcall	___lldiv
  7845  1719  0842               	movf	?___lldiv+3,w
  7846  171A  1683               	bsf	3,5	;RP0=1, select bank1
  7847  171B  00E3               	movwf	(___llmod@dividend+3)^(0+128)
  7848  171C  1283               	bcf	3,5	;RP0=0, select bank0
  7849  171D  0841               	movf	?___lldiv+2,w
  7850  171E  1683               	bsf	3,5	;RP0=1, select bank1
  7851  171F  00E2               	movwf	(___llmod@dividend+2)^(0+128)
  7852  1720  1283               	bcf	3,5	;RP0=0, select bank0
  7853  1721  0840               	movf	?___lldiv+1,w
  7854  1722  1683               	bsf	3,5	;RP0=1, select bank1
  7855  1723  00E1               	movwf	(___llmod@dividend+1)^(0+128)
  7856  1724  1283               	bcf	3,5	;RP0=0, select bank0
  7857  1725  083F               	movf	?___lldiv,w
  7858  1726  1683               	bsf	3,5	;RP0=1, select bank1
  7859  1727  00E0               	movwf	___llmod@dividend^(0+128)
  7860  1728  160A  118A  2087  160A  118A  	fcall	___llmod
  7861  172D  085C               	movf	?___llmod^(0+128),w
  7862  172E  3EBE               	addlw	(low (_segCode| 0))& (0+255)
  7863  172F  0084               	movwf	4
  7864  1730  1383               	bcf	3,7	;select IRP bank1
  7865  1731  0800               	movf	0,w
  7866  1732  0467               	iorwf	display1@dot^(0+128),w
  7867  1733                     L4:
  7868  1733  160A  158A  26E3  160A  118A  	fcall	_dataPass
  7869                           
  7870                           ;newmain.c: 457:     RA2 = 0;
  7871  1738  1105               	bcf	5,2	;volatile
  7872                           
  7873                           ;newmain.c: 458:     RA0 = 0;
  7874  1739  1005               	bcf	5,0	;volatile
  7875                           
  7876                           ;newmain.c: 459:     RA1 = 0;
  7877  173A  1085               	bcf	5,1	;volatile
  7878                           
  7879                           ;newmain.c: 460:     RA3 = 1;
  7880  173B  1585               	bsf	5,3	;volatile
  7881                           
  7882                           ;newmain.c: 461:     _delay((unsigned long)((1)*(20000000/4000.0)));
  7883  173C  3007               	movlw	7
  7884  173D  1683               	bsf	3,5	;RP0=1, select bank1
  7885  173E  1303               	bcf	3,6	;RP1=0, select bank1
  7886  173F  00E5               	movwf	(??_display1^(0+128)+1)
  7887  1740  307C               	movlw	124
  7888  1741  00E4               	movwf	??_display1^(0+128)
  7889  1742                     u5557:
  7890  1742  0BE4               	decfsz	??_display1^(0+128),f
  7891  1743  2F42               	goto	u5557
  7892  1744  0BE5               	decfsz	(??_display1^(0+128)+1),f
  7893  1745  2F42               	goto	u5557
  7894  1746  0000               	nop
  7895                           
  7896                           ;newmain.c: 463:     if(currentDisplay == 3 && blinkValue > 10){
  7897  1747  3003               	movlw	3
  7898  1748  1283               	bcf	3,5	;RP0=0, select bank0
  7899  1749  1303               	bcf	3,6	;RP1=0, select bank0
  7900  174A  065B               	xorwf	_currentDisplay,w	;volatile
  7901  174B  1D03               	btfss	3,2
  7902  174C  2F53               	goto	l3232
  7903  174D  300B               	movlw	11
  7904  174E  0257               	subwf	_blinkValue,w	;volatile
  7905  174F  1C03               	skipc
  7906  1750  2F53               	goto	l3232
  7907                           
  7908                           ;newmain.c: 464:         dataPass (0x00);
  7909  1751  3000               	movlw	0
  7910  1752  2F9C               	goto	L5
  7911  1753                     l3232:	
  7912                           ;newmain.c: 465:     }
  7913                           
  7914                           
  7915                           ;newmain.c: 467:         uint8_t dot1 = 0;
  7916  1753  1683               	bsf	3,5	;RP0=1, select bank1
  7917  1754  01E6               	clrf	display1@dot1^(0+128)
  7918                           
  7919                           ;newmain.c: 468:         if(editMenuPointer == 1 || editMenuPointer == 2 || viewMenuPoin
      +                          ter == 3){
  7920  1755  033C               	decf	_editMenuPointer^(0+128),w	;volatile
  7921  1756  1903               	btfsc	3,2
  7922  1757  2F60               	goto	l3240
  7923  1758  3002               	movlw	2
  7924  1759  063C               	xorwf	_editMenuPointer^(0+128),w	;volatile
  7925  175A  1903               	btfsc	3,2
  7926  175B  2F60               	goto	l3240
  7927  175C  3003               	movlw	3
  7928  175D  063D               	xorwf	_viewMenuPointer^(0+128),w	;volatile
  7929  175E  1D03               	btfss	3,2
  7930  175F  2F64               	goto	l3242
  7931  1760                     l3240:
  7932                           
  7933                           ;newmain.c: 469:             dot1 = 0x20;
  7934  1760  3020               	movlw	32
  7935  1761  00E4               	movwf	??_display1^(0+128)
  7936  1762  0864               	movf	??_display1^(0+128),w
  7937  1763  00E6               	movwf	display1@dot1^(0+128)
  7938  1764                     l3242:
  7939                           
  7940                           ;newmain.c: 471:         dataPass(segCode[(value/10)%10] | dot1);
  7941  1764  3000               	movlw	0
  7942  1765  00DF               	movwf	(___llmod@divisor+3)^(0+128)
  7943  1766  3000               	movlw	0
  7944  1767  00DE               	movwf	(___llmod@divisor+2)^(0+128)
  7945  1768  3000               	movlw	0
  7946  1769  00DD               	movwf	(___llmod@divisor+1)^(0+128)
  7947  176A  300A               	movlw	10
  7948  176B  00DC               	movwf	___llmod@divisor^(0+128)
  7949  176C  3000               	movlw	0
  7950  176D  1283               	bcf	3,5	;RP0=0, select bank0
  7951  176E  00C2               	movwf	___lldiv@divisor+3
  7952  176F  3000               	movlw	0
  7953  1770  00C1               	movwf	___lldiv@divisor+2
  7954  1771  3000               	movlw	0
  7955  1772  00C0               	movwf	___lldiv@divisor+1
  7956  1773  300A               	movlw	10
  7957  1774  00BF               	movwf	___lldiv@divisor
  7958  1775  0852               	movf	display1@value+3,w
  7959  1776  00C6               	movwf	___lldiv@dividend+3
  7960  1777  0851               	movf	display1@value+2,w
  7961  1778  00C5               	movwf	___lldiv@dividend+2
  7962  1779  0850               	movf	display1@value+1,w
  7963  177A  00C4               	movwf	___lldiv@dividend+1
  7964  177B  084F               	movf	display1@value,w
  7965  177C  00C3               	movwf	___lldiv@dividend
  7966  177D  160A  118A  218F  160A  118A  	fcall	___lldiv
  7967  1782  0842               	movf	?___lldiv+3,w
  7968  1783  1683               	bsf	3,5	;RP0=1, select bank1
  7969  1784  00E3               	movwf	(___llmod@dividend+3)^(0+128)
  7970  1785  1283               	bcf	3,5	;RP0=0, select bank0
  7971  1786  0841               	movf	?___lldiv+2,w
  7972  1787  1683               	bsf	3,5	;RP0=1, select bank1
  7973  1788  00E2               	movwf	(___llmod@dividend+2)^(0+128)
  7974  1789  1283               	bcf	3,5	;RP0=0, select bank0
  7975  178A  0840               	movf	?___lldiv+1,w
  7976  178B  1683               	bsf	3,5	;RP0=1, select bank1
  7977  178C  00E1               	movwf	(___llmod@dividend+1)^(0+128)
  7978  178D  1283               	bcf	3,5	;RP0=0, select bank0
  7979  178E  083F               	movf	?___lldiv,w
  7980  178F  1683               	bsf	3,5	;RP0=1, select bank1
  7981  1790  00E0               	movwf	___llmod@dividend^(0+128)
  7982  1791  160A  118A  2087  160A  118A  	fcall	___llmod
  7983  1796  085C               	movf	?___llmod^(0+128),w
  7984  1797  3EBE               	addlw	(low (_segCode| 0))& (0+255)
  7985  1798  0084               	movwf	4
  7986  1799  1383               	bcf	3,7	;select IRP bank1
  7987  179A  0800               	movf	0,w
  7988  179B  0466               	iorwf	display1@dot1^(0+128),w
  7989  179C                     L5:
  7990  179C  160A  158A  26E3  160A  118A  	fcall	_dataPass
  7991                           
  7992                           ;newmain.c: 473:     RA2 = 0;
  7993  17A1  1105               	bcf	5,2	;volatile
  7994                           
  7995                           ;newmain.c: 474:     RA0 = 0;
  7996  17A2  1005               	bcf	5,0	;volatile
  7997                           
  7998                           ;newmain.c: 475:     RA1 = 0;
  7999  17A3  1085               	bcf	5,1	;volatile
  8000                           
  8001                           ;newmain.c: 476:     RA3 = 0;
  8002  17A4  1185               	bcf	5,3	;volatile
  8003                           
  8004                           ;newmain.c: 477:     _delay((unsigned long)((1)*(20000000/4000.0)));
  8005  17A5  3007               	movlw	7
  8006  17A6  1683               	bsf	3,5	;RP0=1, select bank1
  8007  17A7  1303               	bcf	3,6	;RP1=0, select bank1
  8008  17A8  00E5               	movwf	(??_display1^(0+128)+1)
  8009  17A9  307C               	movlw	124
  8010  17AA  00E4               	movwf	??_display1^(0+128)
  8011  17AB                     u5567:
  8012  17AB  0BE4               	decfsz	??_display1^(0+128),f
  8013  17AC  2FAB               	goto	u5567
  8014  17AD  0BE5               	decfsz	(??_display1^(0+128)+1),f
  8015  17AE  2FAB               	goto	u5567
  8016  17AF  0000               	nop
  8017                           
  8018                           ;newmain.c: 479:     if(currentDisplay == 4 && blinkValue > 10){
  8019  17B0  3004               	movlw	4
  8020  17B1  1283               	bcf	3,5	;RP0=0, select bank0
  8021  17B2  1303               	bcf	3,6	;RP1=0, select bank0
  8022  17B3  065B               	xorwf	_currentDisplay,w	;volatile
  8023  17B4  1D03               	btfss	3,2
  8024  17B5  2FBC               	goto	l3260
  8025  17B6  300B               	movlw	11
  8026  17B7  0257               	subwf	_blinkValue,w	;volatile
  8027  17B8  1C03               	skipc
  8028  17B9  2FBC               	goto	l3260
  8029                           
  8030                           ;newmain.c: 480:         dataPass (0x00);
  8031  17BA  3000               	movlw	0
  8032  17BB  2FDF               	goto	L6
  8033  17BC                     l3260:	
  8034                           ;newmain.c: 481:     }
  8035                           
  8036                           
  8037                           ;newmain.c: 483:         dataPass(segCode[value%10]);
  8038  17BC  3000               	movlw	0
  8039  17BD  1683               	bsf	3,5	;RP0=1, select bank1
  8040  17BE  00DF               	movwf	(___llmod@divisor+3)^(0+128)
  8041  17BF  3000               	movlw	0
  8042  17C0  00DE               	movwf	(___llmod@divisor+2)^(0+128)
  8043  17C1  3000               	movlw	0
  8044  17C2  00DD               	movwf	(___llmod@divisor+1)^(0+128)
  8045  17C3  300A               	movlw	10
  8046  17C4  00DC               	movwf	___llmod@divisor^(0+128)
  8047  17C5  1283               	bcf	3,5	;RP0=0, select bank0
  8048  17C6  0852               	movf	display1@value+3,w
  8049  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  8050  17C8  00E3               	movwf	(___llmod@dividend+3)^(0+128)
  8051  17C9  1283               	bcf	3,5	;RP0=0, select bank0
  8052  17CA  0851               	movf	display1@value+2,w
  8053  17CB  1683               	bsf	3,5	;RP0=1, select bank1
  8054  17CC  00E2               	movwf	(___llmod@dividend+2)^(0+128)
  8055  17CD  1283               	bcf	3,5	;RP0=0, select bank0
  8056  17CE  0850               	movf	display1@value+1,w
  8057  17CF  1683               	bsf	3,5	;RP0=1, select bank1
  8058  17D0  00E1               	movwf	(___llmod@dividend+1)^(0+128)
  8059  17D1  1283               	bcf	3,5	;RP0=0, select bank0
  8060  17D2  084F               	movf	display1@value,w
  8061  17D3  1683               	bsf	3,5	;RP0=1, select bank1
  8062  17D4  00E0               	movwf	___llmod@dividend^(0+128)
  8063  17D5  160A  118A  2087  160A  118A  	fcall	___llmod
  8064  17DA  085C               	movf	?___llmod^(0+128),w
  8065  17DB  3EBE               	addlw	(low (_segCode| 0))& (0+255)
  8066  17DC  0084               	movwf	4
  8067  17DD  1383               	bcf	3,7	;select IRP bank1
  8068  17DE  0800               	movf	0,w
  8069  17DF                     L6:
  8070  17DF  160A  158A  26E3  160A  118A  	fcall	_dataPass
  8071                           
  8072                           ;newmain.c: 485:     RA2 = 1;
  8073  17E4  1505               	bsf	5,2	;volatile
  8074                           
  8075                           ;newmain.c: 486:     RA0 = 1;
  8076  17E5  1405               	bsf	5,0	;volatile
  8077                           
  8078                           ;newmain.c: 487:     RA1 = 0;
  8079  17E6  1085               	bcf	5,1	;volatile
  8080                           
  8081                           ;newmain.c: 488:     RA3 = 1;
  8082  17E7  1585               	bsf	5,3	;volatile
  8083                           
  8084                           ;newmain.c: 489:     _delay((unsigned long)((1)*(20000000/4000.0)));
  8085  17E8  3007               	movlw	7
  8086  17E9  1683               	bsf	3,5	;RP0=1, select bank1
  8087  17EA  1303               	bcf	3,6	;RP1=0, select bank1
  8088  17EB  00E5               	movwf	(??_display1^(0+128)+1)
  8089  17EC  307C               	movlw	124
  8090  17ED  00E4               	movwf	??_display1^(0+128)
  8091  17EE                     u5577:
  8092  17EE  0BE4               	decfsz	??_display1^(0+128),f
  8093  17EF  2FEE               	goto	u5577
  8094  17F0  0BE5               	decfsz	(??_display1^(0+128)+1),f
  8095  17F1  2FEE               	goto	u5577
  8096  17F2  0000               	nop
  8097                           
  8098                           ;newmain.c: 491:     blinkValue += 1;
  8099  17F3  3001               	movlw	1
  8100  17F4  1683               	bsf	3,5	;RP0=1, select bank1
  8101  17F5  1303               	bcf	3,6	;RP1=0, select bank1
  8102  17F6  00E4               	movwf	??_display1^(0+128)
  8103  17F7  0864               	movf	??_display1^(0+128),w
  8104  17F8  1283               	bcf	3,5	;RP0=0, select bank0
  8105  17F9  07D7               	addwf	_blinkValue,f	;volatile
  8106                           
  8107                           ;newmain.c: 492:     if(blinkValue > 20){
  8108  17FA  3015               	movlw	21
  8109  17FB  0257               	subwf	_blinkValue,w	;volatile
  8110  17FC  1C03               	skipc
  8111  17FD  0008               	return
  8112                           
  8113                           ;newmain.c: 493:         blinkValue = 0;
  8114  17FE  01D7               	clrf	_blinkValue	;volatile
  8115  17FF  0008               	return
  8116  1800                     __end_of_display1:
  8117                           
  8118                           	psect	text22
  8119  1EE3                     __ptext22:	
  8120 ;; *************** function _dataPass *****************
  8121 ;; Defined at:
  8122 ;;		line 382 in file "newmain.c"
  8123 ;; Parameters:    Size  Location     Type
  8124 ;;  data            1    wreg     unsigned char 
  8125 ;; Auto vars:     Size  Location     Type
  8126 ;;  data            1   17[BANK0 ] unsigned char 
  8127 ;;  i               1   18[BANK0 ] unsigned char 
  8128 ;; Return value:  Size  Location     Type
  8129 ;;                  1    wreg      void 
  8130 ;; Registers used:
  8131 ;;		wreg, status,2, status,0
  8132 ;; Tracked objects:
  8133 ;;		On entry : 200/0
  8134 ;;		On exit  : 300/0
  8135 ;;		Unchanged: 0/0
  8136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8137 ;;      Params:         0       0       0       0       0
  8138 ;;      Locals:         0       2       0       0       0
  8139 ;;      Temps:          0       1       0       0       0
  8140 ;;      Totals:         0       3       0       0       0
  8141 ;;Total ram usage:        3 bytes
  8142 ;; Hardware stack levels used: 1
  8143 ;; Hardware stack levels required when called: 2
  8144 ;; This function calls:
  8145 ;;		Nothing
  8146 ;; This function is called by:
  8147 ;;		_display1
  8148 ;;		_display2
  8149 ;;		_led
  8150 ;;		_displayString
  8151 ;; This function uses a non-reentrant model
  8152 ;;
  8153                           
  8154                           
  8155                           ;psect for function _dataPass
  8156  1EE3                     _dataPass:
  8157                           
  8158                           ;incstack = 0
  8159                           ; Regs used in _dataPass: [wreg+status,2+status,0]
  8160                           ;dataPass@data stored from wreg
  8161  1EE3  1283               	bcf	3,5	;RP0=0, select bank0
  8162  1EE4  00B1               	movwf	dataPass@data
  8163                           
  8164                           ;newmain.c: 383:     for (uint8_t i=0 ; i<8 ; i++){
  8165  1EE5  01B2               	clrf	dataPass@i
  8166  1EE6                     l3052:
  8167                           
  8168                           ;newmain.c: 384:         RB1 = (data >> i) & 0x01;
  8169  1EE6  0831               	movf	dataPass@data,w
  8170  1EE7  00B0               	movwf	??_dataPass
  8171  1EE8  0A32               	incf	dataPass@i,w
  8172  1EE9  2EEC               	goto	u4104
  8173  1EEA                     u4105:
  8174  1EEA  1003               	clrc
  8175  1EEB  0CB0               	rrf	??_dataPass,f
  8176  1EEC                     u4104:
  8177  1EEC  3EFF               	addlw	-1
  8178  1EED  1D03               	skipz
  8179  1EEE  2EEA               	goto	u4105
  8180  1EEF  1C30               	btfss	??_dataPass,0
  8181  1EF0  2EF5               	goto	u4110
  8182  1EF1  1283               	bcf	3,5	;RP0=0, select bank0
  8183  1EF2  1303               	bcf	3,6	;RP1=0, select bank0
  8184  1EF3  1486               	bsf	6,1	;volatile
  8185  1EF4  2EF8               	goto	l3054
  8186  1EF5                     u4110:
  8187  1EF5  1283               	bcf	3,5	;RP0=0, select bank0
  8188  1EF6  1303               	bcf	3,6	;RP1=0, select bank0
  8189  1EF7  1086               	bcf	6,1	;volatile
  8190  1EF8                     l3054:
  8191                           
  8192                           ;newmain.c: 385:         RB3 = 1;
  8193  1EF8  1586               	bsf	6,3	;volatile
  8194                           
  8195                           ;newmain.c: 386:         RB3 = 0;
  8196  1EF9  1186               	bcf	6,3	;volatile
  8197                           
  8198                           ;newmain.c: 387:     }
  8199  1EFA  3001               	movlw	1
  8200  1EFB  00B0               	movwf	??_dataPass
  8201  1EFC  0830               	movf	??_dataPass,w
  8202  1EFD  07B2               	addwf	dataPass@i,f
  8203  1EFE  3008               	movlw	8
  8204  1EFF  0232               	subwf	dataPass@i,w
  8205  1F00  1C03               	skipc
  8206  1F01  2EE6               	goto	l3052
  8207                           
  8208                           ;newmain.c: 388:     RB2 = 1;
  8209  1F02  1506               	bsf	6,2	;volatile
  8210                           
  8211                           ;newmain.c: 389:     RB2 = 0;
  8212  1F03  1106               	bcf	6,2	;volatile
  8213  1F04  0008               	return
  8214  1F05                     __end_of_dataPass:
  8215                           
  8216                           	psect	text23
  8217  1087                     __ptext23:	
  8218 ;; *************** function ___llmod *****************
  8219 ;; Defined at:
  8220 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/common/llmod.c"
  8221 ;; Parameters:    Size  Location     Type
  8222 ;;  divisor         4    0[BANK1 ] unsigned long 
  8223 ;;  dividend        4    4[BANK1 ] unsigned long 
  8224 ;; Auto vars:     Size  Location     Type
  8225 ;;  counter         1   46[BANK0 ] unsigned char 
  8226 ;; Return value:  Size  Location     Type
  8227 ;;                  4    0[BANK1 ] unsigned long 
  8228 ;; Registers used:
  8229 ;;		wreg, status,2, status,0
  8230 ;; Tracked objects:
  8231 ;;		On entry : 300/100
  8232 ;;		On exit  : 300/100
  8233 ;;		Unchanged: 0/0
  8234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8235 ;;      Params:         0       0       8       0       0
  8236 ;;      Locals:         0       1       0       0       0
  8237 ;;      Temps:          0       1       0       0       0
  8238 ;;      Totals:         0       2       8       0       0
  8239 ;;Total ram usage:       10 bytes
  8240 ;; Hardware stack levels used: 1
  8241 ;; Hardware stack levels required when called: 2
  8242 ;; This function calls:
  8243 ;;		Nothing
  8244 ;; This function is called by:
  8245 ;;		_main
  8246 ;;		_editValues
  8247 ;;		_display1
  8248 ;;		_display2
  8249 ;;		_increment
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           
  8254                           ;psect for function ___llmod
  8255  1087                     ___llmod:
  8256                           
  8257                           ;incstack = 0
  8258                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  8259  1087  085F               	movf	(___llmod@divisor+3)^(0+128),w
  8260  1088  045E               	iorwf	(___llmod@divisor+2)^(0+128),w
  8261  1089  045D               	iorwf	(___llmod@divisor+1)^(0+128),w
  8262  108A  045C               	iorwf	___llmod@divisor^(0+128),w
  8263  108B  1903               	skipnz
  8264  108C  28D1               	goto	l3024
  8265  108D  1283               	bcf	3,5	;RP0=0, select bank0
  8266  108E  01CE               	clrf	___llmod@counter
  8267  108F  0ACE               	incf	___llmod@counter,f
  8268  1090                     l3014:
  8269  1090  1683               	bsf	3,5	;RP0=1, select bank1
  8270  1091  1BDF               	btfsc	(___llmod@divisor+3)^(0+128),7
  8271  1092  28A4               	goto	l3016
  8272  1093  3001               	movlw	1
  8273  1094  1283               	bcf	3,5	;RP0=0, select bank0
  8274  1095  00CD               	movwf	??___llmod
  8275  1096                     u4025:
  8276  1096  1003               	clrc
  8277  1097  1683               	bsf	3,5	;RP0=1, select bank1
  8278  1098  0DDC               	rlf	___llmod@divisor^(0+128),f
  8279  1099  0DDD               	rlf	(___llmod@divisor+1)^(0+128),f
  8280  109A  0DDE               	rlf	(___llmod@divisor+2)^(0+128),f
  8281  109B  0DDF               	rlf	(___llmod@divisor+3)^(0+128),f
  8282  109C  1283               	bcf	3,5	;RP0=0, select bank0
  8283  109D  0BCD               	decfsz	??___llmod,f
  8284  109E  2896               	goto	u4025
  8285  109F  3001               	movlw	1
  8286  10A0  00CD               	movwf	??___llmod
  8287  10A1  084D               	movf	??___llmod,w
  8288  10A2  07CE               	addwf	___llmod@counter,f
  8289  10A3  2890               	goto	l3014
  8290  10A4                     l3016:
  8291  10A4  1683               	bsf	3,5	;RP0=1, select bank1
  8292  10A5  085F               	movf	(___llmod@divisor+3)^(0+128),w
  8293  10A6  0263               	subwf	(___llmod@dividend+3)^(0+128),w
  8294  10A7  1D03               	skipz
  8295  10A8  28B3               	goto	u4045
  8296  10A9  085E               	movf	(___llmod@divisor+2)^(0+128),w
  8297  10AA  0262               	subwf	(___llmod@dividend+2)^(0+128),w
  8298  10AB  1D03               	skipz
  8299  10AC  28B3               	goto	u4045
  8300  10AD  085D               	movf	(___llmod@divisor+1)^(0+128),w
  8301  10AE  0261               	subwf	(___llmod@dividend+1)^(0+128),w
  8302  10AF  1D03               	skipz
  8303  10B0  28B3               	goto	u4045
  8304  10B1  085C               	movf	___llmod@divisor^(0+128),w
  8305  10B2  0260               	subwf	___llmod@dividend^(0+128),w
  8306  10B3                     u4045:
  8307  10B3  1C03               	skipc
  8308  10B4  28C3               	goto	l3020
  8309  10B5  085C               	movf	___llmod@divisor^(0+128),w
  8310  10B6  02E0               	subwf	___llmod@dividend^(0+128),f
  8311  10B7  085D               	movf	(___llmod@divisor+1)^(0+128),w
  8312  10B8  1C03               	skipc
  8313  10B9  0F5D               	incfsz	(___llmod@divisor+1)^(0+128),w
  8314  10BA  02E1               	subwf	(___llmod@dividend+1)^(0+128),f
  8315  10BB  085E               	movf	(___llmod@divisor+2)^(0+128),w
  8316  10BC  1C03               	skipc
  8317  10BD  0F5E               	incfsz	(___llmod@divisor+2)^(0+128),w
  8318  10BE  02E2               	subwf	(___llmod@dividend+2)^(0+128),f
  8319  10BF  085F               	movf	(___llmod@divisor+3)^(0+128),w
  8320  10C0  1C03               	skipc
  8321  10C1  0F5F               	incfsz	(___llmod@divisor+3)^(0+128),w
  8322  10C2  02E3               	subwf	(___llmod@dividend+3)^(0+128),f
  8323  10C3                     l3020:
  8324  10C3  3001               	movlw	1
  8325  10C4                     u4055:
  8326  10C4  1003               	clrc
  8327  10C5  0CDF               	rrf	(___llmod@divisor+3)^(0+128),f
  8328  10C6  0CDE               	rrf	(___llmod@divisor+2)^(0+128),f
  8329  10C7  0CDD               	rrf	(___llmod@divisor+1)^(0+128),f
  8330  10C8  0CDC               	rrf	___llmod@divisor^(0+128),f
  8331  10C9  3EFF               	addlw	-1
  8332  10CA  1D03               	skipz
  8333  10CB  28C4               	goto	u4055
  8334  10CC  3001               	movlw	1
  8335  10CD  1283               	bcf	3,5	;RP0=0, select bank0
  8336  10CE  02CE               	subwf	___llmod@counter,f
  8337  10CF  1D03               	btfss	3,2
  8338  10D0  28A4               	goto	l3016
  8339  10D1                     l3024:
  8340  10D1  1683               	bsf	3,5	;RP0=1, select bank1
  8341  10D2  0863               	movf	(___llmod@dividend+3)^(0+128),w
  8342  10D3  00DF               	movwf	(?___llmod+3)^(0+128)
  8343  10D4  0862               	movf	(___llmod@dividend+2)^(0+128),w
  8344  10D5  00DE               	movwf	(?___llmod+2)^(0+128)
  8345  10D6  0861               	movf	(___llmod@dividend+1)^(0+128),w
  8346  10D7  00DD               	movwf	(?___llmod+1)^(0+128)
  8347  10D8  0860               	movf	___llmod@dividend^(0+128),w
  8348  10D9  00DC               	movwf	?___llmod^(0+128)
  8349  10DA  0008               	return
  8350  10DB                     __end_of___llmod:
  8351                           
  8352                           	psect	text24
  8353  118F                     __ptext24:	
  8354 ;; *************** function ___lldiv *****************
  8355 ;; Defined at:
  8356 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/common/__lldiv.c"
  8357 ;; Parameters:    Size  Location     Type
  8358 ;;  divisor         4   31[BANK0 ] unsigned long 
  8359 ;;  dividend        4   35[BANK0 ] unsigned long 
  8360 ;; Auto vars:     Size  Location     Type
  8361 ;;  quotient        4   40[BANK0 ] unsigned long 
  8362 ;;  counter         1   44[BANK0 ] unsigned char 
  8363 ;; Return value:  Size  Location     Type
  8364 ;;                  4   31[BANK0 ] unsigned long 
  8365 ;; Registers used:
  8366 ;;		wreg, status,2, status,0
  8367 ;; Tracked objects:
  8368 ;;		On entry : 300/0
  8369 ;;		On exit  : 300/0
  8370 ;;		Unchanged: 0/0
  8371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8372 ;;      Params:         0       8       0       0       0
  8373 ;;      Locals:         0       5       0       0       0
  8374 ;;      Temps:          0       1       0       0       0
  8375 ;;      Totals:         0      14       0       0       0
  8376 ;;Total ram usage:       14 bytes
  8377 ;; Hardware stack levels used: 1
  8378 ;; Hardware stack levels required when called: 2
  8379 ;; This function calls:
  8380 ;;		Nothing
  8381 ;; This function is called by:
  8382 ;;		_main
  8383 ;;		_eepromRead
  8384 ;;		_viewMenu
  8385 ;;		_editValues
  8386 ;;		_display1
  8387 ;;		_display2
  8388 ;; This function uses a non-reentrant model
  8389 ;;
  8390                           
  8391                           
  8392                           ;psect for function ___lldiv
  8393  118F                     ___lldiv:
  8394                           
  8395                           ;incstack = 0
  8396                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8397  118F  3000               	movlw	0
  8398  1190  00CB               	movwf	___lldiv@quotient+3
  8399  1191  3000               	movlw	0
  8400  1192  00CA               	movwf	___lldiv@quotient+2
  8401  1193  3000               	movlw	0
  8402  1194  00C9               	movwf	___lldiv@quotient+1
  8403  1195  3000               	movlw	0
  8404  1196  00C8               	movwf	___lldiv@quotient
  8405  1197  0842               	movf	___lldiv@divisor+3,w
  8406  1198  0441               	iorwf	___lldiv@divisor+2,w
  8407  1199  0440               	iorwf	___lldiv@divisor+1,w
  8408  119A  043F               	iorwf	___lldiv@divisor,w
  8409  119B  1903               	skipnz
  8410  119C  29E4               	goto	l3116
  8411  119D  01CC               	clrf	___lldiv@counter
  8412  119E  0ACC               	incf	___lldiv@counter,f
  8413  119F                     l3102:
  8414  119F  1BC2               	btfsc	___lldiv@divisor+3,7
  8415  11A0  29AF               	goto	l3104
  8416  11A1  3001               	movlw	1
  8417  11A2  00C7               	movwf	??___lldiv
  8418  11A3                     u4275:
  8419  11A3  1003               	clrc
  8420  11A4  0DBF               	rlf	___lldiv@divisor,f
  8421  11A5  0DC0               	rlf	___lldiv@divisor+1,f
  8422  11A6  0DC1               	rlf	___lldiv@divisor+2,f
  8423  11A7  0DC2               	rlf	___lldiv@divisor+3,f
  8424  11A8  0BC7               	decfsz	??___lldiv,f
  8425  11A9  29A3               	goto	u4275
  8426  11AA  3001               	movlw	1
  8427  11AB  00C7               	movwf	??___lldiv
  8428  11AC  0847               	movf	??___lldiv,w
  8429  11AD  07CC               	addwf	___lldiv@counter,f
  8430  11AE  299F               	goto	l3102
  8431  11AF                     l3104:
  8432  11AF  3001               	movlw	1
  8433  11B0  00C7               	movwf	??___lldiv
  8434  11B1                     u4295:
  8435  11B1  1003               	clrc
  8436  11B2  0DC8               	rlf	___lldiv@quotient,f
  8437  11B3  0DC9               	rlf	___lldiv@quotient+1,f
  8438  11B4  0DCA               	rlf	___lldiv@quotient+2,f
  8439  11B5  0DCB               	rlf	___lldiv@quotient+3,f
  8440  11B6  0BC7               	decfsz	??___lldiv,f
  8441  11B7  29B1               	goto	u4295
  8442  11B8  0842               	movf	___lldiv@divisor+3,w
  8443  11B9  0246               	subwf	___lldiv@dividend+3,w
  8444  11BA  1D03               	skipz
  8445  11BB  29C6               	goto	u4305
  8446  11BC  0841               	movf	___lldiv@divisor+2,w
  8447  11BD  0245               	subwf	___lldiv@dividend+2,w
  8448  11BE  1D03               	skipz
  8449  11BF  29C6               	goto	u4305
  8450  11C0  0840               	movf	___lldiv@divisor+1,w
  8451  11C1  0244               	subwf	___lldiv@dividend+1,w
  8452  11C2  1D03               	skipz
  8453  11C3  29C6               	goto	u4305
  8454  11C4  083F               	movf	___lldiv@divisor,w
  8455  11C5  0243               	subwf	___lldiv@dividend,w
  8456  11C6                     u4305:
  8457  11C6  1C03               	skipc
  8458  11C7  29D7               	goto	l3112
  8459  11C8  083F               	movf	___lldiv@divisor,w
  8460  11C9  02C3               	subwf	___lldiv@dividend,f
  8461  11CA  0840               	movf	___lldiv@divisor+1,w
  8462  11CB  1C03               	skipc
  8463  11CC  0F40               	incfsz	___lldiv@divisor+1,w
  8464  11CD  02C4               	subwf	___lldiv@dividend+1,f
  8465  11CE  0841               	movf	___lldiv@divisor+2,w
  8466  11CF  1C03               	skipc
  8467  11D0  0F41               	incfsz	___lldiv@divisor+2,w
  8468  11D1  02C5               	subwf	___lldiv@dividend+2,f
  8469  11D2  0842               	movf	___lldiv@divisor+3,w
  8470  11D3  1C03               	skipc
  8471  11D4  0F42               	incfsz	___lldiv@divisor+3,w
  8472  11D5  02C6               	subwf	___lldiv@dividend+3,f
  8473  11D6  1448               	bsf	___lldiv@quotient,0
  8474  11D7                     l3112:
  8475  11D7  3001               	movlw	1
  8476  11D8                     u4315:
  8477  11D8  1003               	clrc
  8478  11D9  0CC2               	rrf	___lldiv@divisor+3,f
  8479  11DA  0CC1               	rrf	___lldiv@divisor+2,f
  8480  11DB  0CC0               	rrf	___lldiv@divisor+1,f
  8481  11DC  0CBF               	rrf	___lldiv@divisor,f
  8482  11DD  3EFF               	addlw	-1
  8483  11DE  1D03               	skipz
  8484  11DF  29D8               	goto	u4315
  8485  11E0  3001               	movlw	1
  8486  11E1  02CC               	subwf	___lldiv@counter,f
  8487  11E2  1D03               	btfss	3,2
  8488  11E3  29AF               	goto	l3104
  8489  11E4                     l3116:
  8490  11E4  084B               	movf	___lldiv@quotient+3,w
  8491  11E5  00C2               	movwf	?___lldiv+3
  8492  11E6  084A               	movf	___lldiv@quotient+2,w
  8493  11E7  00C1               	movwf	?___lldiv+2
  8494  11E8  0849               	movf	___lldiv@quotient+1,w
  8495  11E9  00C0               	movwf	?___lldiv+1
  8496  11EA  0848               	movf	___lldiv@quotient,w
  8497  11EB  00BF               	movwf	?___lldiv
  8498  11EC  0008               	return
  8499  11ED                     __end_of___lldiv:
  8500                           
  8501                           	psect	text25
  8502  0676                     __ptext25:	
  8503 ;; *************** function _highISR *****************
  8504 ;; Defined at:
  8505 ;;		line 198 in file "newmain.c"
  8506 ;; Parameters:    Size  Location     Type
  8507 ;;		None
  8508 ;; Auto vars:     Size  Location     Type
  8509 ;;		None
  8510 ;; Return value:  Size  Location     Type
  8511 ;;                  1    wreg      void 
  8512 ;; Registers used:
  8513 ;;		wreg, status,2, status,0, pclath, cstack
  8514 ;; Tracked objects:
  8515 ;;		On entry : 0/0
  8516 ;;		On exit  : 300/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8519 ;;      Params:         0       0       0       0       0
  8520 ;;      Locals:         0       0       0       0       0
  8521 ;;      Temps:          0       3       0       0       0
  8522 ;;      Totals:         0       3       0       0       0
  8523 ;;Total ram usage:        3 bytes
  8524 ;; Hardware stack levels used: 1
  8525 ;; Hardware stack levels required when called: 1
  8526 ;; This function calls:
  8527 ;;		i1___lldiv
  8528 ;;		i1___llmod
  8529 ;;		i1_eeprom_write
  8530 ;; This function is called by:
  8531 ;;		Interrupt level 1
  8532 ;; This function uses a non-reentrant model
  8533 ;;
  8534                           
  8535                           
  8536                           ;psect for function _highISR
  8537  0676                     _highISR:
  8538                           
  8539                           ;newmain.c: 201:     if(RBIF == 1){
  8540  0676  1C0B               	btfss	11,0	;volatile
  8541  0677  2E98               	goto	i1l242
  8542                           
  8543                           ;newmain.c: 202:         if(!RB7 && !RB6){
  8544  0678  1F86               	btfss	6,7	;volatile
  8545  0679  1B06               	btfsc	6,6	;volatile
  8546  067A  2E7C               	goto	i1l243
  8547                           
  8548                           ;newmain.c: 203:             encoderFlag = 1;
  8549  067B  1553               	bsf	_encoderFlag/(0+8),_encoderFlag& (0+7)	;volatile
  8550  067C                     i1l243:	
  8551                           ;newmain.c: 204:         }
  8552                           
  8553                           
  8554                           ;newmain.c: 205:         if(encoderFlag && !RB7 && RB6){count=1;changed = 1;}
  8555  067C  1953               	btfsc	_encoderFlag/(0+8),_encoderFlag& (0+7)	;volatile
  8556  067D  1B86               	btfsc	6,7	;volatile
  8557  067E  2E88               	goto	i1l2972
  8558  067F  1F06               	btfss	6,6	;volatile
  8559  0680  2E88               	goto	i1l2972
  8560  0681  3001               	movlw	1
  8561  0682  00AD               	movwf	??_highISR
  8562  0683  082D               	movf	??_highISR,w
  8563  0684  1683               	bsf	3,5	;RP0=1, select bank1
  8564  0685  00BA               	movwf	_count^(0+128)	;volatile
  8565  0686  1283               	bcf	3,5	;RP0=0, select bank0
  8566  0687  1453               	bsf	_changed/(0+8),_changed& (0+7)	;volatile
  8567  0688                     i1l2972:
  8568                           
  8569                           ;newmain.c: 206:         if(encoderFlag && RB7 && !RB6){count=2;changed = 1;}
  8570  0688  1953               	btfsc	_encoderFlag/(0+8),_encoderFlag& (0+7)	;volatile
  8571  0689  1F86               	btfss	6,7	;volatile
  8572  068A  2E94               	goto	i1l2982
  8573  068B  1B06               	btfsc	6,6	;volatile
  8574  068C  2E94               	goto	i1l2982
  8575  068D  3002               	movlw	2
  8576  068E  00AD               	movwf	??_highISR
  8577  068F  082D               	movf	??_highISR,w
  8578  0690  1683               	bsf	3,5	;RP0=1, select bank1
  8579  0691  00BA               	movwf	_count^(0+128)	;volatile
  8580  0692  1283               	bcf	3,5	;RP0=0, select bank0
  8581  0693  1453               	bsf	_changed/(0+8),_changed& (0+7)	;volatile
  8582  0694                     i1l2982:
  8583                           
  8584                           ;newmain.c: 207:         if(RB7 && RB6)encoderFlag = 0;
  8585  0694  1B86               	btfsc	6,7	;volatile
  8586  0695  1F06               	btfss	6,6	;volatile
  8587  0696  2E98               	goto	i1l242
  8588  0697  1153               	bcf	_encoderFlag/(0+8),_encoderFlag& (0+7)	;volatile
  8589  0698                     i1l242:	
  8590                           ;newmain.c: 208:     }
  8591                           
  8592                           
  8593                           ;newmain.c: 209:     if(TMR1IF==1){
  8594  0698  1C0C               	btfss	12,0	;volatile
  8595  0699  2EBC               	goto	i1l2998
  8596                           
  8597                           ;newmain.c: 210:         timerCount += 1;
  8598  069A  3001               	movlw	1
  8599  069B  00AD               	movwf	??_highISR
  8600  069C  082D               	movf	??_highISR,w
  8601  069D  1683               	bsf	3,5	;RP0=1, select bank1
  8602  069E  07B9               	addwf	_timerCount^(0+128),f	;volatile
  8603                           
  8604                           ;newmain.c: 211:         skipCount += 1;
  8605  069F  3001               	movlw	1
  8606  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  8607  06A1  00AD               	movwf	??_highISR
  8608  06A2  082D               	movf	??_highISR,w
  8609  06A3  1683               	bsf	3,5	;RP0=1, select bank1
  8610  06A4  07B8               	addwf	_skipCount^(0+128),f	;volatile
  8611                           
  8612                           ;newmain.c: 212:         TMR1H=0x0B;
  8613  06A5  300B               	movlw	11
  8614  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  8615  06A7  008F               	movwf	15	;volatile
  8616                           
  8617                           ;newmain.c: 213:         TMR1L=0xE5;
  8618  06A8  30E5               	movlw	229
  8619  06A9  008E               	movwf	14	;volatile
  8620                           
  8621                           ;newmain.c: 214:         TMR1IF=0;
  8622  06AA  100C               	bcf	12,0	;volatile
  8623                           
  8624                           ;newmain.c: 215:         if(encoderSkipCount){
  8625  06AB  1683               	bsf	3,5	;RP0=1, select bank1
  8626  06AC  0832               	movf	_encoderSkipCount^(0+128),w	;volatile
  8627  06AD  0433               	iorwf	(_encoderSkipCount+1)^(0+128),w	;volatile
  8628  06AE  1903               	btfsc	3,2
  8629  06AF  2EB6               	goto	i1l248
  8630                           
  8631                           ;newmain.c: 216:             hourMeterCounter += 1;
  8632  06B0  3001               	movlw	1
  8633  06B1  07B0               	addwf	_hourMeterCounter^(0+128),f	;volatile
  8634  06B2  1803               	skipnc
  8635  06B3  0AB1               	incf	(_hourMeterCounter+1)^(0+128),f	;volatile
  8636  06B4  3000               	movlw	0
  8637  06B5  07B1               	addwf	(_hourMeterCounter+1)^(0+128),f	;volatile
  8638  06B6                     i1l248:	
  8639                           ;newmain.c: 217:         }
  8640                           
  8641                           
  8642                           ;newmain.c: 218:         encoderSkipCount += 1;
  8643  06B6  3001               	movlw	1
  8644  06B7  07B2               	addwf	_encoderSkipCount^(0+128),f	;volatile
  8645  06B8  1803               	skipnc
  8646  06B9  0AB3               	incf	(_encoderSkipCount+1)^(0+128),f	;volatile
  8647  06BA  3000               	movlw	0
  8648  06BB  07B3               	addwf	(_encoderSkipCount+1)^(0+128),f	;volatile
  8649  06BC                     i1l2998:
  8650                           
  8651                           ;newmain.c: 220:     if (INTF == 1) {
  8652  06BC  1C8B               	btfss	11,1	;volatile
  8653  06BD  2FBC               	goto	L17
  8654                           
  8655                           ;newmain.c: 222:             eeprom_write(0x0C,currentClothLength/(10000UL));
  8656  06BE  3000               	movlw	0
  8657  06BF  00F3               	movwf	i1___lldiv@divisor+3
  8658  06C0  3000               	movlw	0
  8659  06C1  00F2               	movwf	i1___lldiv@divisor+2
  8660  06C2  3027               	movlw	39
  8661  06C3  00F1               	movwf	i1___lldiv@divisor+1
  8662  06C4  3010               	movlw	16
  8663  06C5  00F0               	movwf	i1___lldiv@divisor
  8664  06C6  1683               	bsf	3,5	;RP0=1, select bank1
  8665  06C7  0857               	movf	(_currentClothLength+3)^(0+128),w	;volatile
  8666  06C8  00F7               	movwf	i1___lldiv@dividend+3
  8667  06C9  0856               	movf	(_currentClothLength+2)^(0+128),w	;volatile
  8668  06CA  00F6               	movwf	i1___lldiv@dividend+2
  8669  06CB  0855               	movf	(_currentClothLength+1)^(0+128),w	;volatile
  8670  06CC  00F5               	movwf	i1___lldiv@dividend+1
  8671  06CD  0854               	movf	_currentClothLength^(0+128),w	;volatile
  8672  06CE  00F4               	movwf	i1___lldiv@dividend
  8673  06CF  160A  118A  2131  120A  118A  	fcall	i1___lldiv
  8674  06D4  0870               	movf	?i1___lldiv,w
  8675  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  8676  06D6  00AD               	movwf	??_highISR
  8677  06D7  082D               	movf	??_highISR,w
  8678  06D8  00AA               	movwf	i1eeprom_write@value
  8679  06D9  300C               	movlw	12
  8680  06DA  160A  158A  2705  120A  118A  	fcall	i1_eeprom_write
  8681                           
  8682                           ;newmain.c: 223:             eeprom_write(0x0D,(currentClothLength/100)%100);
  8683  06DF  3000               	movlw	0
  8684  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  8685  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  8686  06E2  00A3               	movwf	i1___llmod@divisor+3
  8687  06E3  3000               	movlw	0
  8688  06E4  00A2               	movwf	i1___llmod@divisor+2
  8689  06E5  3000               	movlw	0
  8690  06E6  00A1               	movwf	i1___llmod@divisor+1
  8691  06E7  3064               	movlw	100
  8692  06E8  00A0               	movwf	i1___llmod@divisor
  8693  06E9  3000               	movlw	0
  8694  06EA  00F3               	movwf	i1___lldiv@divisor+3
  8695  06EB  3000               	movlw	0
  8696  06EC  00F2               	movwf	i1___lldiv@divisor+2
  8697  06ED  3000               	movlw	0
  8698  06EE  00F1               	movwf	i1___lldiv@divisor+1
  8699  06EF  3064               	movlw	100
  8700  06F0  00F0               	movwf	i1___lldiv@divisor
  8701  06F1  1683               	bsf	3,5	;RP0=1, select bank1
  8702  06F2  0857               	movf	(_currentClothLength+3)^(0+128),w	;volatile
  8703  06F3  00F7               	movwf	i1___lldiv@dividend+3
  8704  06F4  0856               	movf	(_currentClothLength+2)^(0+128),w	;volatile
  8705  06F5  00F6               	movwf	i1___lldiv@dividend+2
  8706  06F6  0855               	movf	(_currentClothLength+1)^(0+128),w	;volatile
  8707  06F7  00F5               	movwf	i1___lldiv@dividend+1
  8708  06F8  0854               	movf	_currentClothLength^(0+128),w	;volatile
  8709  06F9  00F4               	movwf	i1___lldiv@dividend
  8710  06FA  160A  118A  2131  120A  118A  	fcall	i1___lldiv
  8711  06FF  0873               	movf	?i1___lldiv+3,w
  8712  0700  1283               	bcf	3,5	;RP0=0, select bank0
  8713  0701  00A7               	movwf	i1___llmod@dividend+3
  8714  0702  0872               	movf	?i1___lldiv+2,w
  8715  0703  00A6               	movwf	i1___llmod@dividend+2
  8716  0704  0871               	movf	?i1___lldiv+1,w
  8717  0705  00A5               	movwf	i1___llmod@dividend+1
  8718  0706  0870               	movf	?i1___lldiv,w
  8719  0707  00A4               	movwf	i1___llmod@dividend
  8720  0708  160A  158A  27B4  120A  118A  	fcall	i1___llmod
  8721  070D  0820               	movf	?i1___llmod,w
  8722  070E  00AD               	movwf	??_highISR
  8723  070F  082D               	movf	??_highISR,w
  8724  0710  00AA               	movwf	i1eeprom_write@value
  8725  0711  300D               	movlw	13
  8726  0712  160A  158A  2705  120A  118A  	fcall	i1_eeprom_write
  8727                           
  8728                           ;newmain.c: 224:             eeprom_write(0x0E,currentClothLength%100);
  8729  0717  3000               	movlw	0
  8730  0718  1283               	bcf	3,5	;RP0=0, select bank0
  8731  0719  1303               	bcf	3,6	;RP1=0, select bank0
  8732  071A  00A3               	movwf	i1___llmod@divisor+3
  8733  071B  3000               	movlw	0
  8734  071C  00A2               	movwf	i1___llmod@divisor+2
  8735  071D  3000               	movlw	0
  8736  071E  00A1               	movwf	i1___llmod@divisor+1
  8737  071F  3064               	movlw	100
  8738  0720  00A0               	movwf	i1___llmod@divisor
  8739  0721  1683               	bsf	3,5	;RP0=1, select bank1
  8740  0722  0857               	movf	(_currentClothLength+3)^(0+128),w	;volatile
  8741  0723  1283               	bcf	3,5	;RP0=0, select bank0
  8742  0724  00A7               	movwf	i1___llmod@dividend+3
  8743  0725  1683               	bsf	3,5	;RP0=1, select bank1
  8744  0726  0856               	movf	(_currentClothLength+2)^(0+128),w	;volatile
  8745  0727  1283               	bcf	3,5	;RP0=0, select bank0
  8746  0728  00A6               	movwf	i1___llmod@dividend+2
  8747  0729  1683               	bsf	3,5	;RP0=1, select bank1
  8748  072A  0855               	movf	(_currentClothLength+1)^(0+128),w	;volatile
  8749  072B  1283               	bcf	3,5	;RP0=0, select bank0
  8750  072C  00A5               	movwf	i1___llmod@dividend+1
  8751  072D  1683               	bsf	3,5	;RP0=1, select bank1
  8752  072E  0854               	movf	_currentClothLength^(0+128),w	;volatile
  8753  072F  1283               	bcf	3,5	;RP0=0, select bank0
  8754  0730  00A4               	movwf	i1___llmod@dividend
  8755  0731  160A  158A  27B4  120A  118A  	fcall	i1___llmod
  8756  0736  0820               	movf	?i1___llmod,w
  8757  0737  00AD               	movwf	??_highISR
  8758  0738  082D               	movf	??_highISR,w
  8759  0739  00AA               	movwf	i1eeprom_write@value
  8760  073A  300E               	movlw	14
  8761  073B  160A  158A  2705  120A  118A  	fcall	i1_eeprom_write
  8762                           
  8763                           ;newmain.c: 225:             eeprom_write(0x17,hourMeter/(10000UL));
  8764  0740  3000               	movlw	0
  8765  0741  00F3               	movwf	i1___lldiv@divisor+3
  8766  0742  3000               	movlw	0
  8767  0743  00F2               	movwf	i1___lldiv@divisor+2
  8768  0744  3027               	movlw	39
  8769  0745  00F1               	movwf	i1___lldiv@divisor+1
  8770  0746  3010               	movlw	16
  8771  0747  00F0               	movwf	i1___lldiv@divisor
  8772  0748  1283               	bcf	3,5	;RP0=0, select bank0
  8773  0749  1303               	bcf	3,6	;RP1=0, select bank0
  8774  074A  085F               	movf	_hourMeter+3,w	;volatile
  8775  074B  00F7               	movwf	i1___lldiv@dividend+3
  8776  074C  085E               	movf	_hourMeter+2,w	;volatile
  8777  074D  00F6               	movwf	i1___lldiv@dividend+2
  8778  074E  085D               	movf	_hourMeter+1,w	;volatile
  8779  074F  00F5               	movwf	i1___lldiv@dividend+1
  8780  0750  085C               	movf	_hourMeter,w	;volatile
  8781  0751  00F4               	movwf	i1___lldiv@dividend
  8782  0752  160A  118A  2131  120A  118A  	fcall	i1___lldiv
  8783  0757  0870               	movf	?i1___lldiv,w
  8784  0758  1283               	bcf	3,5	;RP0=0, select bank0
  8785  0759  00AD               	movwf	??_highISR
  8786  075A  082D               	movf	??_highISR,w
  8787  075B  00AA               	movwf	i1eeprom_write@value
  8788  075C  3017               	movlw	23
  8789  075D  160A  158A  2705  120A  118A  	fcall	i1_eeprom_write
  8790                           
  8791                           ;newmain.c: 226:             eeprom_write(0x18,(hourMeter/100)%100);
  8792  0762  3000               	movlw	0
  8793  0763  1283               	bcf	3,5	;RP0=0, select bank0
  8794  0764  1303               	bcf	3,6	;RP1=0, select bank0
  8795  0765  00A3               	movwf	i1___llmod@divisor+3
  8796  0766  3000               	movlw	0
  8797  0767  00A2               	movwf	i1___llmod@divisor+2
  8798  0768  3000               	movlw	0
  8799  0769  00A1               	movwf	i1___llmod@divisor+1
  8800  076A  3064               	movlw	100
  8801  076B  00A0               	movwf	i1___llmod@divisor
  8802  076C  3000               	movlw	0
  8803  076D  00F3               	movwf	i1___lldiv@divisor+3
  8804  076E  3000               	movlw	0
  8805  076F  00F2               	movwf	i1___lldiv@divisor+2
  8806  0770  3000               	movlw	0
  8807  0771  00F1               	movwf	i1___lldiv@divisor+1
  8808  0772  3064               	movlw	100
  8809  0773  00F0               	movwf	i1___lldiv@divisor
  8810  0774  085F               	movf	_hourMeter+3,w	;volatile
  8811  0775  00F7               	movwf	i1___lldiv@dividend+3
  8812  0776  085E               	movf	_hourMeter+2,w	;volatile
  8813  0777  00F6               	movwf	i1___lldiv@dividend+2
  8814  0778  085D               	movf	_hourMeter+1,w	;volatile
  8815  0779  00F5               	movwf	i1___lldiv@dividend+1
  8816  077A  085C               	movf	_hourMeter,w	;volatile
  8817  077B  00F4               	movwf	i1___lldiv@dividend
  8818  077C  160A  118A  2131  120A  118A  	fcall	i1___lldiv
  8819  0781  0873               	movf	?i1___lldiv+3,w
  8820  0782  1283               	bcf	3,5	;RP0=0, select bank0
  8821  0783  00A7               	movwf	i1___llmod@dividend+3
  8822  0784  0872               	movf	?i1___lldiv+2,w
  8823  0785  00A6               	movwf	i1___llmod@dividend+2
  8824  0786  0871               	movf	?i1___lldiv+1,w
  8825  0787  00A5               	movwf	i1___llmod@dividend+1
  8826  0788  0870               	movf	?i1___lldiv,w
  8827  0789  00A4               	movwf	i1___llmod@dividend
  8828  078A  160A  158A  27B4  120A  118A  	fcall	i1___llmod
  8829  078F  0820               	movf	?i1___llmod,w
  8830  0790  00AD               	movwf	??_highISR
  8831  0791  082D               	movf	??_highISR,w
  8832  0792  00AA               	movwf	i1eeprom_write@value
  8833  0793  3018               	movlw	24
  8834  0794  160A  158A  2705  120A  118A  	fcall	i1_eeprom_write
  8835                           
  8836                           ;newmain.c: 227:             eeprom_write(0x19,hourMeter%100);
  8837  0799  3000               	movlw	0
  8838  079A  1283               	bcf	3,5	;RP0=0, select bank0
  8839  079B  1303               	bcf	3,6	;RP1=0, select bank0
  8840  079C  00A3               	movwf	i1___llmod@divisor+3
  8841  079D  3000               	movlw	0
  8842  079E  00A2               	movwf	i1___llmod@divisor+2
  8843  079F  3000               	movlw	0
  8844  07A0  00A1               	movwf	i1___llmod@divisor+1
  8845  07A1  3064               	movlw	100
  8846  07A2  00A0               	movwf	i1___llmod@divisor
  8847  07A3  085F               	movf	_hourMeter+3,w	;volatile
  8848  07A4  00A7               	movwf	i1___llmod@dividend+3
  8849  07A5  085E               	movf	_hourMeter+2,w	;volatile
  8850  07A6  00A6               	movwf	i1___llmod@dividend+2
  8851  07A7  085D               	movf	_hourMeter+1,w	;volatile
  8852  07A8  00A5               	movwf	i1___llmod@dividend+1
  8853  07A9  085C               	movf	_hourMeter,w	;volatile
  8854  07AA  00A4               	movwf	i1___llmod@dividend
  8855  07AB  160A  158A  27B4  120A  118A  	fcall	i1___llmod
  8856  07B0  0820               	movf	?i1___llmod,w
  8857  07B1  00AD               	movwf	??_highISR
  8858  07B2  082D               	movf	??_highISR,w
  8859  07B3  00AA               	movwf	i1eeprom_write@value
  8860  07B4  3019               	movlw	25
  8861  07B5  160A  158A  2705  120A  118A  	fcall	i1_eeprom_write
  8862                           
  8863                           ;newmain.c: 228:             GIE = 0;
  8864  07BA  138B               	bcf	11,7	;volatile
  8865                           
  8866                           ;newmain.c: 232:     INTF = 0;
  8867  07BB  108B               	bcf	11,1	;volatile
  8868  07BC                     L17:
  8869                           
  8870                           ;newmain.c: 233:     RBIF = 0;
  8871  07BC  100B               	bcf	11,0	;volatile
  8872  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  8873  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  8874  07BF  082F               	movf	??_highISR+2,w
  8875  07C0  008A               	movwf	10
  8876  07C1  0E2E               	swapf	??_highISR+1,w
  8877  07C2  0083               	movwf	3
  8878  07C3  0EFE               	swapf	126,f
  8879  07C4  0E7E               	swapf	126,w
  8880  07C5  0009               	retfie
  8881  07C6                     __end_of_highISR:
  8882                           
  8883                           	psect	intentry
  8884  0004                     __pintentry:	
  8885                           ;incstack = 0
  8886                           ; Regs used in _highISR: [wreg+status,2+status,0+pclath+cstack]
  8887                           
  8888  0004                     interrupt_function:
  8889  007E                     saved_w	set	btemp
  8890  0004  00FE               	movwf	btemp
  8891  0005  0E03               	swapf	3,w
  8892  0006  1283               	bcf	3,5	;RP0=0, select bank0
  8893  0007  1303               	bcf	3,6	;RP1=0, select bank0
  8894  0008  00AE               	movwf	??_highISR+1
  8895  0009  080A               	movf	10,w
  8896  000A  00AF               	movwf	??_highISR+2
  8897  000B  120A  118A  2E76   	ljmp	_highISR
  8898                           
  8899                           	psect	text26
  8900  1F05                     __ptext26:	
  8901 ;; *************** function i1_eeprom_write *****************
  8902 ;; Defined at:
  8903 ;;		line 6 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/pic/__eewrite.c"
  8904 ;; Parameters:    Size  Location     Type
  8905 ;;  addr            1    wreg     unsigned char 
  8906 ;;  value           1   10[BANK0 ] unsigned char 
  8907 ;; Auto vars:     Size  Location     Type
  8908 ;;  addr            1   12[BANK0 ] unsigned char 
  8909 ;; Return value:  Size  Location     Type
  8910 ;;                  1    wreg      void 
  8911 ;; Registers used:
  8912 ;;		wreg, status,2, status,0
  8913 ;; Tracked objects:
  8914 ;;		On entry : 300/0
  8915 ;;		On exit  : 300/300
  8916 ;;		Unchanged: 0/0
  8917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8918 ;;      Params:         0       1       0       0       0
  8919 ;;      Locals:         0       1       0       0       0
  8920 ;;      Temps:          0       1       0       0       0
  8921 ;;      Totals:         0       3       0       0       0
  8922 ;;Total ram usage:        3 bytes
  8923 ;; Hardware stack levels used: 1
  8924 ;; This function calls:
  8925 ;;		Nothing
  8926 ;; This function is called by:
  8927 ;;		_highISR
  8928 ;; This function uses a non-reentrant model
  8929 ;;
  8930                           
  8931                           
  8932                           ;psect for function i1_eeprom_write
  8933  1F05                     i1_eeprom_write:
  8934                           
  8935                           ;incstack = 0
  8936                           ; Regs used in i1_eeprom_write: [wreg+status,2+status,0]
  8937                           ;i1eeprom_write@addr stored from wreg
  8938  1F05  00AC               	movwf	i1eeprom_write@addr
  8939  1F06                     i1l524:	
  8940                           ;/Applications/microchip/xc8/v2.32/pic/sources/c90/pic/__eewrite.c: 6: eeprom_write(unsi
      +                          gned char addr, unsigned char value);/Applications/microchip/xc8/v2.32/pic/sources/c90/p
      +                          ic/__eewrite.c: 7: {;/Applications/microchip/xc8/v2.32/pic/sources/c90/pic/__eewrite.c: 
      +                          8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); EECON1 &= 
      +                          0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCONbits.GIE
      +                           = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EECON1bits.W
      +                          REN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  8941                           
  8942  1F06  1683               	bsf	3,5	;RP0=1, select bank3
  8943  1F07  1703               	bsf	3,6	;RP1=1, select bank3
  8944  1F08  188C               	btfsc	12,1	;volsfr
  8945  1F09  2F06               	goto	i1l524
  8946  1F0A  1283               	bcf	3,5	;RP0=0, select bank0
  8947  1F0B  1303               	bcf	3,6	;RP1=0, select bank0
  8948  1F0C  082C               	movf	i1eeprom_write@addr,w
  8949  1F0D  1703               	bsf	3,6	;RP1=1, select bank2
  8950  1F0E  008D               	movwf	13	;volatile
  8951  1F0F  1303               	bcf	3,6	;RP1=0, select bank0
  8952  1F10  082A               	movf	i1eeprom_write@value,w
  8953  1F11  1703               	bsf	3,6	;RP1=1, select bank2
  8954  1F12  008C               	movwf	12	;volatile
  8955  1F13  303F               	movlw	63
  8956  1F14  1303               	bcf	3,6	;RP1=0, select bank0
  8957  1F15  00AB               	movwf	??i1_eeprom_write
  8958  1F16  082B               	movf	??i1_eeprom_write,w
  8959  1F17  1683               	bsf	3,5	;RP0=1, select bank3
  8960  1F18  1703               	bsf	3,6	;RP1=1, select bank3
  8961  1F19  058C               	andwf	12,f	;volsfr
  8962  1F1A  1003               	bcf	3,0	;volatile
  8963  1F1B  1B8B               	btfsc	11,7	;volatile
  8964  1F1C  1403               	bsf	3,0	;volatile
  8965  1F1D  138B               	bcf	11,7	;volatile
  8966  1F1E  150C               	bsf	12,2	;volsfr
  8967  1F1F  3055               	movlw	85
  8968  1F20  008D               	movwf	13	;volsfr
  8969  1F21  30AA               	movlw	170
  8970  1F22  008D               	movwf	13	;volsfr
  8971  1F23  148C               	bsf	12,1	;volsfr
  8972  1F24  110C               	bcf	12,2	;volsfr
  8973  1F25  1C03               	btfss	3,0	;volatile
  8974  1F26  0008               	return
  8975  1F27  178B               	bsf	11,7	;volatile
  8976  1F28  0008               	return
  8977  1F29                     __end_ofi1_eeprom_write:
  8978                           
  8979                           	psect	text27
  8980  1FB4                     __ptext27:	
  8981 ;; *************** function i1___llmod *****************
  8982 ;; Defined at:
  8983 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/common/llmod.c"
  8984 ;; Parameters:    Size  Location     Type
  8985 ;;  divisor         4    0[BANK0 ] unsigned long 
  8986 ;;  dividend        4    4[BANK0 ] unsigned long 
  8987 ;; Auto vars:     Size  Location     Type
  8988 ;;  counter         1    9[BANK0 ] unsigned char 
  8989 ;; Return value:  Size  Location     Type
  8990 ;;                  4    0[BANK0 ] unsigned long 
  8991 ;; Registers used:
  8992 ;;		wreg, status,2, status,0
  8993 ;; Tracked objects:
  8994 ;;		On entry : 300/0
  8995 ;;		On exit  : 300/0
  8996 ;;		Unchanged: 0/0
  8997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8998 ;;      Params:         0       8       0       0       0
  8999 ;;      Locals:         0       1       0       0       0
  9000 ;;      Temps:          0       1       0       0       0
  9001 ;;      Totals:         0      10       0       0       0
  9002 ;;Total ram usage:       10 bytes
  9003 ;; Hardware stack levels used: 1
  9004 ;; This function calls:
  9005 ;;		Nothing
  9006 ;; This function is called by:
  9007 ;;		_highISR
  9008 ;; This function uses a non-reentrant model
  9009 ;;
  9010                           
  9011                           
  9012                           ;psect for function i1___llmod
  9013  1FB4                     i1___llmod:
  9014                           
  9015                           ;incstack = 0
  9016                           ; Regs used in i1___llmod: [wreg+status,2+status,0]
  9017  1FB4  0823               	movf	i1___llmod@divisor+3,w
  9018  1FB5  0422               	iorwf	i1___llmod@divisor+2,w
  9019  1FB6  0421               	iorwf	i1___llmod@divisor+1,w
  9020  1FB7  0420               	iorwf	i1___llmod@divisor,w
  9021  1FB8  1903               	skipnz
  9022  1FB9  2FF7               	goto	i1l2864
  9023  1FBA  01A9               	clrf	i1___llmod@counter
  9024  1FBB  0AA9               	incf	i1___llmod@counter,f
  9025  1FBC                     i1l2854:
  9026  1FBC  1BA3               	btfsc	i1___llmod@divisor+3,7
  9027  1FBD  2FCC               	goto	i1l2856
  9028  1FBE  3001               	movlw	1
  9029  1FBF  00A8               	movwf	??i1___llmod
  9030  1FC0                     u366_25:
  9031  1FC0  1003               	clrc
  9032  1FC1  0DA0               	rlf	i1___llmod@divisor,f
  9033  1FC2  0DA1               	rlf	i1___llmod@divisor+1,f
  9034  1FC3  0DA2               	rlf	i1___llmod@divisor+2,f
  9035  1FC4  0DA3               	rlf	i1___llmod@divisor+3,f
  9036  1FC5  0BA8               	decfsz	??i1___llmod,f
  9037  1FC6  2FC0               	goto	u366_25
  9038  1FC7  3001               	movlw	1
  9039  1FC8  00A8               	movwf	??i1___llmod
  9040  1FC9  0828               	movf	??i1___llmod,w
  9041  1FCA  07A9               	addwf	i1___llmod@counter,f
  9042  1FCB  2FBC               	goto	i1l2854
  9043  1FCC                     i1l2856:
  9044  1FCC  0823               	movf	i1___llmod@divisor+3,w
  9045  1FCD  0227               	subwf	i1___llmod@dividend+3,w
  9046  1FCE  1D03               	skipz
  9047  1FCF  2FDA               	goto	u368_25
  9048  1FD0  0822               	movf	i1___llmod@divisor+2,w
  9049  1FD1  0226               	subwf	i1___llmod@dividend+2,w
  9050  1FD2  1D03               	skipz
  9051  1FD3  2FDA               	goto	u368_25
  9052  1FD4  0821               	movf	i1___llmod@divisor+1,w
  9053  1FD5  0225               	subwf	i1___llmod@dividend+1,w
  9054  1FD6  1D03               	skipz
  9055  1FD7  2FDA               	goto	u368_25
  9056  1FD8  0820               	movf	i1___llmod@divisor,w
  9057  1FD9  0224               	subwf	i1___llmod@dividend,w
  9058  1FDA                     u368_25:
  9059  1FDA  1C03               	skipc
  9060  1FDB  2FEA               	goto	i1l2860
  9061  1FDC  0820               	movf	i1___llmod@divisor,w
  9062  1FDD  02A4               	subwf	i1___llmod@dividend,f
  9063  1FDE  0821               	movf	i1___llmod@divisor+1,w
  9064  1FDF  1C03               	skipc
  9065  1FE0  0F21               	incfsz	i1___llmod@divisor+1,w
  9066  1FE1  02A5               	subwf	i1___llmod@dividend+1,f
  9067  1FE2  0822               	movf	i1___llmod@divisor+2,w
  9068  1FE3  1C03               	skipc
  9069  1FE4  0F22               	incfsz	i1___llmod@divisor+2,w
  9070  1FE5  02A6               	subwf	i1___llmod@dividend+2,f
  9071  1FE6  0823               	movf	i1___llmod@divisor+3,w
  9072  1FE7  1C03               	skipc
  9073  1FE8  0F23               	incfsz	i1___llmod@divisor+3,w
  9074  1FE9  02A7               	subwf	i1___llmod@dividend+3,f
  9075  1FEA                     i1l2860:
  9076  1FEA  3001               	movlw	1
  9077  1FEB                     u369_25:
  9078  1FEB  1003               	clrc
  9079  1FEC  0CA3               	rrf	i1___llmod@divisor+3,f
  9080  1FED  0CA2               	rrf	i1___llmod@divisor+2,f
  9081  1FEE  0CA1               	rrf	i1___llmod@divisor+1,f
  9082  1FEF  0CA0               	rrf	i1___llmod@divisor,f
  9083  1FF0  3EFF               	addlw	-1
  9084  1FF1  1D03               	skipz
  9085  1FF2  2FEB               	goto	u369_25
  9086  1FF3  3001               	movlw	1
  9087  1FF4  02A9               	subwf	i1___llmod@counter,f
  9088  1FF5  1D03               	btfss	3,2
  9089  1FF6  2FCC               	goto	i1l2856
  9090  1FF7                     i1l2864:
  9091  1FF7  0827               	movf	i1___llmod@dividend+3,w
  9092  1FF8  00A3               	movwf	?i1___llmod+3
  9093  1FF9  0826               	movf	i1___llmod@dividend+2,w
  9094  1FFA  00A2               	movwf	?i1___llmod+2
  9095  1FFB  0825               	movf	i1___llmod@dividend+1,w
  9096  1FFC  00A1               	movwf	?i1___llmod+1
  9097  1FFD  0824               	movf	i1___llmod@dividend,w
  9098  1FFE  00A0               	movwf	?i1___llmod
  9099  1FFF  0008               	return
  9100  2000                     __end_ofi1___llmod:
  9101                           
  9102                           	psect	text28
  9103  1131                     __ptext28:	
  9104 ;; *************** function i1___lldiv *****************
  9105 ;; Defined at:
  9106 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c90/common/__lldiv.c"
  9107 ;; Parameters:    Size  Location     Type
  9108 ;;  divisor         4    0[COMMON] unsigned long 
  9109 ;;  dividend        4    4[COMMON] unsigned long 
  9110 ;; Auto vars:     Size  Location     Type
  9111 ;;  quotient        4    9[COMMON] unsigned long 
  9112 ;;  counter         1   13[COMMON] unsigned char 
  9113 ;; Return value:  Size  Location     Type
  9114 ;;                  4    0[COMMON] unsigned long 
  9115 ;; Registers used:
  9116 ;;		wreg, status,2, status,0
  9117 ;; Tracked objects:
  9118 ;;		On entry : 200/100
  9119 ;;		On exit  : 200/0
  9120 ;;		Unchanged: 200/0
  9121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9122 ;;      Params:         8       0       0       0       0
  9123 ;;      Locals:         5       0       0       0       0
  9124 ;;      Temps:          1       0       0       0       0
  9125 ;;      Totals:        14       0       0       0       0
  9126 ;;Total ram usage:       14 bytes
  9127 ;; Hardware stack levels used: 1
  9128 ;; This function calls:
  9129 ;;		Nothing
  9130 ;; This function is called by:
  9131 ;;		_highISR
  9132 ;; This function uses a non-reentrant model
  9133 ;;
  9134                           
  9135                           
  9136                           ;psect for function i1___lldiv
  9137  1131                     i1___lldiv:
  9138                           
  9139                           ;incstack = 0
  9140                           ; Regs used in i1___lldiv: [wreg+status,2+status,0]
  9141  1131  3000               	movlw	0
  9142  1132  00FC               	movwf	i1___lldiv@quotient+3
  9143  1133  3000               	movlw	0
  9144  1134  00FB               	movwf	i1___lldiv@quotient+2
  9145  1135  3000               	movlw	0
  9146  1136  00FA               	movwf	i1___lldiv@quotient+1
  9147  1137  3000               	movlw	0
  9148  1138  00F9               	movwf	i1___lldiv@quotient
  9149  1139  0873               	movf	i1___lldiv@divisor+3,w
  9150  113A  0472               	iorwf	i1___lldiv@divisor+2,w
  9151  113B  0471               	iorwf	i1___lldiv@divisor+1,w
  9152  113C  0470               	iorwf	i1___lldiv@divisor,w
  9153  113D  1903               	skipnz
  9154  113E  2986               	goto	i1l2844
  9155  113F  01FD               	clrf	i1___lldiv@counter
  9156  1140  0AFD               	incf	i1___lldiv@counter,f
  9157  1141                     i1l2830:
  9158  1141  1BF3               	btfsc	i1___lldiv@divisor+3,7
  9159  1142  2951               	goto	i1l2832
  9160  1143  3001               	movlw	1
  9161  1144  00F8               	movwf	??i1___lldiv
  9162  1145                     u359_25:
  9163  1145  1003               	clrc
  9164  1146  0DF0               	rlf	i1___lldiv@divisor,f
  9165  1147  0DF1               	rlf	i1___lldiv@divisor+1,f
  9166  1148  0DF2               	rlf	i1___lldiv@divisor+2,f
  9167  1149  0DF3               	rlf	i1___lldiv@divisor+3,f
  9168  114A  0BF8               	decfsz	??i1___lldiv,f
  9169  114B  2945               	goto	u359_25
  9170  114C  3001               	movlw	1
  9171  114D  00F8               	movwf	??i1___lldiv
  9172  114E  0878               	movf	??i1___lldiv,w
  9173  114F  07FD               	addwf	i1___lldiv@counter,f
  9174  1150  2941               	goto	i1l2830
  9175  1151                     i1l2832:
  9176  1151  3001               	movlw	1
  9177  1152  00F8               	movwf	??i1___lldiv
  9178  1153                     u361_25:
  9179  1153  1003               	clrc
  9180  1154  0DF9               	rlf	i1___lldiv@quotient,f
  9181  1155  0DFA               	rlf	i1___lldiv@quotient+1,f
  9182  1156  0DFB               	rlf	i1___lldiv@quotient+2,f
  9183  1157  0DFC               	rlf	i1___lldiv@quotient+3,f
  9184  1158  0BF8               	decfsz	??i1___lldiv,f
  9185  1159  2953               	goto	u361_25
  9186  115A  0873               	movf	i1___lldiv@divisor+3,w
  9187  115B  0277               	subwf	i1___lldiv@dividend+3,w
  9188  115C  1D03               	skipz
  9189  115D  2968               	goto	u362_25
  9190  115E  0872               	movf	i1___lldiv@divisor+2,w
  9191  115F  0276               	subwf	i1___lldiv@dividend+2,w
  9192  1160  1D03               	skipz
  9193  1161  2968               	goto	u362_25
  9194  1162  0871               	movf	i1___lldiv@divisor+1,w
  9195  1163  0275               	subwf	i1___lldiv@dividend+1,w
  9196  1164  1D03               	skipz
  9197  1165  2968               	goto	u362_25
  9198  1166  0870               	movf	i1___lldiv@divisor,w
  9199  1167  0274               	subwf	i1___lldiv@dividend,w
  9200  1168                     u362_25:
  9201  1168  1C03               	skipc
  9202  1169  2979               	goto	i1l2840
  9203  116A  0870               	movf	i1___lldiv@divisor,w
  9204  116B  02F4               	subwf	i1___lldiv@dividend,f
  9205  116C  0871               	movf	i1___lldiv@divisor+1,w
  9206  116D  1C03               	skipc
  9207  116E  0F71               	incfsz	i1___lldiv@divisor+1,w
  9208  116F  02F5               	subwf	i1___lldiv@dividend+1,f
  9209  1170  0872               	movf	i1___lldiv@divisor+2,w
  9210  1171  1C03               	skipc
  9211  1172  0F72               	incfsz	i1___lldiv@divisor+2,w
  9212  1173  02F6               	subwf	i1___lldiv@dividend+2,f
  9213  1174  0873               	movf	i1___lldiv@divisor+3,w
  9214  1175  1C03               	skipc
  9215  1176  0F73               	incfsz	i1___lldiv@divisor+3,w
  9216  1177  02F7               	subwf	i1___lldiv@dividend+3,f
  9217  1178  1479               	bsf	i1___lldiv@quotient,0
  9218  1179                     i1l2840:
  9219  1179  3001               	movlw	1
  9220  117A                     u363_25:
  9221  117A  1003               	clrc
  9222  117B  0CF3               	rrf	i1___lldiv@divisor+3,f
  9223  117C  0CF2               	rrf	i1___lldiv@divisor+2,f
  9224  117D  0CF1               	rrf	i1___lldiv@divisor+1,f
  9225  117E  0CF0               	rrf	i1___lldiv@divisor,f
  9226  117F  3EFF               	addlw	-1
  9227  1180  1D03               	skipz
  9228  1181  297A               	goto	u363_25
  9229  1182  3001               	movlw	1
  9230  1183  02FD               	subwf	i1___lldiv@counter,f
  9231  1184  1D03               	btfss	3,2
  9232  1185  2951               	goto	i1l2832
  9233  1186                     i1l2844:
  9234  1186  087C               	movf	i1___lldiv@quotient+3,w
  9235  1187  00F3               	movwf	?i1___lldiv+3
  9236  1188  087B               	movf	i1___lldiv@quotient+2,w
  9237  1189  00F2               	movwf	?i1___lldiv+2
  9238  118A  087A               	movf	i1___lldiv@quotient+1,w
  9239  118B  00F1               	movwf	?i1___lldiv+1
  9240  118C  0879               	movf	i1___lldiv@quotient,w
  9241  118D  00F0               	movwf	?i1___lldiv
  9242  118E  0008               	return
  9243  118F                     __end_ofi1___lldiv:
  9244  007E                     btemp	set	126	;btemp
  9245  007E                     wtemp0	set	126
  9246                           
  9247                           	psect	config
  9248                           
  9249                           ;Config register CONFIG1 @ 0x2007
  9250                           ;	Oscillator Selection bits
  9251                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  9252                           ;	Watchdog Timer Enable bit
  9253                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9254                           ;	Power-up Timer Enable bit
  9255                           ;	PWRTE = OFF, PWRT disabled
  9256                           ;	RE3/MCLR pin function select bit
  9257                           ;	MCLRE = 0x1, unprogrammed default
  9258                           ;	Code Protection bit
  9259                           ;	CP = OFF, Program memory code protection is disabled
  9260                           ;	Data Code Protection bit
  9261                           ;	CPD = OFF, Data memory code protection is disabled
  9262                           ;	Brown Out Reset Selection bits
  9263                           ;	BOREN = ON, BOR enabled
  9264                           ;	Internal External Switchover bit
  9265                           ;	IESO = 0x1, unprogrammed default
  9266                           ;	Fail-Safe Clock Monitor Enabled bit
  9267                           ;	FCMEN = 0x1, unprogrammed default
  9268                           ;	Low Voltage Programming Enable bit
  9269                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9270                           ;	In-Circuit Debugger Mode bit
  9271                           ;	DEBUG = 0x1, unprogrammed default
  9272  2007                     	org	8199
  9273  2007  2FF2               	dw	12274
  9274                           
  9275                           ;Config register CONFIG2 @ 0x2008
  9276                           ;	Brown-out Reset Selection bit
  9277                           ;	BOR4V = 0x1, unprogrammed default
  9278                           ;	Flash Program Memory Self Write Enable bits
  9279                           ;	WRT = OFF, Write protection off
  9280  2008                     	org	8200
  9281  2008  3FFF               	dw	16383

Data Sizes:
    Strings     30
    Constant    95
    Data        34
    BSS         38
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     51      64
    BANK1            80     12      80
    BANK3            96     18      22
    BANK2            96      0       0

Pointer List with Targets:

    displayString@string	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[6]), 
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _highISR in COMMON

    _highISR->i1___lldiv
    i1_eeprom_write->i1___lldiv
    i1___llmod->i1___lldiv

Critical Paths under _main in BANK0

    _main->_editValues
    _viewMenu->_display1
    _viewMenu->_display2
    _led->_dataPass
    _display2->___llmod
    _eepromRead->___lldiv
    ___wmul->_eeprom_read
    ___lmul->_eeprom_read
    _editValues->_eeprom_write
    _eeprom_write->___llmod
    _editMenu->_display1
    _displayString->_dataPass
    _displayChange->_increment
    _increment->___llmod
    _display1->___llmod
    ___llmod->___lldiv
    ___lldiv->___lmul

Critical Paths under _highISR in BANK0

    _highISR->i1_eeprom_write
    i1_eeprom_write->i1___llmod

Critical Paths under _main in BANK1

    _viewMenu->_display1
    _display2->___llmod
    _editValues->___llmod
    _eeprom_write->___llmod
    _editMenu->_display1
    _displayChange->_increment
    _increment->___llmod
    _display1->___llmod

Critical Paths under _highISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_eepromRead
    _editMenu->_displayChange

Critical Paths under _highISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _highISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   75290
                                             14 BANK3      4     4      0
                            ___lldiv
                            ___llmod
                             ___lmul
                           _editMenu
                         _editValues
                         _eepromRead
                       _eeprom_write
                            _encoder
                        _initializer
                        _resetSwitch
                           _viewMenu
 ---------------------------------------------------------------------------------
 (1) _viewMenu                                             5     5      0   26024
                                              0 BANK3      5     5      0
                            ___lldiv
                           _display1
                           _display2
                                _led
                           _upSwitch
 ---------------------------------------------------------------------------------
 (2) _led                                                  3     3      0     173
                                             19 BANK0      3     3      0
                           _dataPass
 ---------------------------------------------------------------------------------
 (2) _display2                                             6     2      4    9946
                                             47 BANK0      4     0      4
                                              8 BANK1      2     2      0
                            ___lldiv
                            ___llmod
                           _dataPass
 ---------------------------------------------------------------------------------
 (1) _resetSwitch                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initializer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _encoder                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eepromRead                                          14    14      0    8095
                                              0 BANK3     14    14      0
                            ___lldiv
                             ___lmul
                             ___wmul
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _eeprom_read                                          2     2      0      22
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1308
                                             18 BANK0      6     2      4
                        _eeprom_read (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8    1764
                                             18 BANK0     13     5      8
                        _eeprom_read (ARG)
 ---------------------------------------------------------------------------------
 (1) _editValues                                           1     1      0   11345
                                             50 BANK0      1     1      0
                            ___lldiv
                            ___llmod
                       _eeprom_write
                        _enterSwitch
 ---------------------------------------------------------------------------------
 (2) _enterSwitch                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eeprom_write                                         3     2      1    1712
                                             47 BANK0      3     2      1
                            ___lldiv (ARG)
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _editMenu                                             1     1      0   16717
                                              5 BANK3      1     1      0
                           _display1
                      _displayChange
                      _displayString
                         _menuSwitch
 ---------------------------------------------------------------------------------
 (2) _menuSwitch                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _displayString                                        3     3      0     465
                                             19 BANK0      3     3      0
                           _dataPass
 ---------------------------------------------------------------------------------
 (2) _displayChange                                        5     1      4    5416
                                              0 BANK3      5     1      4
                          _increment
                       _selectSwitch
                           _upSwitch
 ---------------------------------------------------------------------------------
 (2) _upSwitch                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _selectSwitch                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _increment                                            8     4      4    4901
                                             47 BANK0      4     0      4
                                              8 BANK1      4     4      0
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) _display1                                             8     4      4   10836
                                             47 BANK0      4     0      4
                                              8 BANK1      4     4      0
                            ___lldiv
                            ___llmod
                           _dataPass
 ---------------------------------------------------------------------------------
 (3) _dataPass                                             3     3      0     130
                                             16 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8    4632
                                             45 BANK0      2     2      0
                                              0 BANK1      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8    5001
                                             31 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _highISR                                              3     3      0     937
                                             13 BANK0      3     3      0
                          i1___lldiv
                          i1___llmod
                     i1_eeprom_write
 ---------------------------------------------------------------------------------
 (6) i1_eeprom_write                                       3     2      1     200
                                             10 BANK0      3     2      1
                          i1___lldiv (ARG)
                          i1___llmod (ARG)
 ---------------------------------------------------------------------------------
 (6) i1___llmod                                           10     2      8     367
                                              0 BANK0     10     2      8
                          i1___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) i1___lldiv                                           14     6      8     370
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
     ___lmul (ARG)
       _eeprom_read (ARG)
   ___llmod
     ___lldiv (ARG)
   ___lmul
   _editMenu
     _display1
       ___lldiv
       ___llmod
       _dataPass
     _displayChange
       _increment
         ___llmod
       _selectSwitch
       _upSwitch
     _displayString
       _dataPass
     _menuSwitch
   _editValues
     ___lldiv
     ___llmod
     _eeprom_write
       ___lldiv (ARG)
       ___llmod (ARG)
     _enterSwitch
   _eepromRead
     ___lldiv
     ___lmul
     ___wmul
       _eeprom_read (ARG)
     _eeprom_read
   _eeprom_write
   _encoder
   _initializer
   _resetSwitch
   _viewMenu
     ___lldiv
     _display1
     _display2
       ___lldiv
       ___llmod
       _dataPass
     _led
       _dataPass
     _upSwitch

 _highISR (ROOT)
   i1___lldiv
   i1___llmod
     i1___lldiv (ARG)
   i1_eeprom_write
     i1___lldiv (ARG)
     i1___llmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     12      16       9       22.9%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      C      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     33      40       5       80.0%
BITBANK0            50      0       1       4        1.2%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      B4      12        0.0%
ABS                  0      0      B4       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Oct  1 21:57:40 2021

                             _n 0056                               pc 0002               _actualClothLength 00D0  
                            fsr 0004             ___wmul@multiplicand 0034                             l211 0ED6  
                           l214 0F01                             l215 0F8B                             l209 0E9D  
                           l504 1E8F                             l256 1438                             l257 1466  
                           l362 1E62                             l372 1E71                             l524 1F2A  
                           l357 1E45                             l294 0A18                             l534 1ECC  
                           l367 1E37                             l295 0A26                             l296 0A34  
                           l377 1E53                             _GIE 005F                             _RA0 0028  
                           _RA1 0029                             _RA2 002A                             _RB1 0031  
                           _RA3 002B                             _RB2 0032                             _RA4 002C  
                           _RB3 0033                             _RB4 0034                             _RB5 0035  
                           _RB6 0036                             _RD2 0042                             _RE1 0049  
                           _RB7 0037                             _RD3 0043                             _RE2 004A  
                           _led 080B                             _rpm 01A2                             fsr0 0004  
                           indf 0000                  ?_displayChange 0190                _hourMeterCounter 00B0  
                   display1@dot 00E7                  ?_displayString 0070                            l3020 10C3  
                          l3102 119F                            l3014 1090                            l3112 11D7  
                          l3104 11AF                            l3016 10A4                            l3024 10D1  
                          l3210 16F8                            l3202 16ED                            l2090 1E67  
                          l3042 1E3C                            l3116 11E4                            l3052 1EE6  
                          l3140 1632                            l3054 1EF8                            l3150 1640  
                          l3134 1629                            l2502 1EC4                            l3240 1760  
                          l3232 1753                            l3128 1621                            l3080 093A  
                          l3072 08D1                            l3064 0867                            l2520 1F93  
                          l3242 1764                            l3162 164E                            l3146 163B  
                          l3090 09CB                            l3082 0962                            l3074 08F9  
                          l3066 088F                            l3410 0569                            l3322 081A  
                          l3260 17BC                            l3084 0972                            l3076 0909  
                          l3068 089F                            l3500 15DA                            l2516 1F7D  
                          l3420 05AC                            l3412 0573                            l3166 165B  
                          l3502 15E2                            l3430 05F8                            l3422 05BE  
                          l3414 0586                            l3326 0820                            l3318 0814  
                          l3184 1695                            l3168 167A                            l3088 09A3  
                          l3344 10F7                            l3440 063A                            l3432 0602  
                          l3424 05C8                            l3416 0590                            l2800 07E2  
                          l3530 0A08                            l3434 0614                            l3426 05DB  
                          l3418 05A2                            l2802 07F5                            l3508 15EE  
                          l3452 14B0                            l3540 0A42                            l3436 061E  
                          l3428 05E5                            l3700 0FFA                            l2478 1E76  
                          l3462 14F5                            l3454 14B2                            l3438 0630  
                          ?_led 0070                            l3472 153A                            l3464 14F7  
                          l2496 1E4A                            l3616 0CD5                            l3482 157F  
                          l3474 153C                            l2754 1E58                            l3634 0D90  
                          l3492 15C4                            l3484 1581                            l3572 0CBC  
                          l3660 0ED8                            l3644 0E4C                            l3652 0E66  
                          l3494 15CA                            l3592 1406                            l3584 13B0  
                          l3664 0EE4                            l3656 0E9F                            l3648 0E59  
                          l3682 0FA6                            l3692 0FD6                            l3676 0F81  
                          l2798 07D8                            l3598 1422                            l3698 0FF8  
                          STR_1 1071                            STR_2 1077                            STR_3 1065  
                          STR_4 107D                            STR_5 106B                            _IOCB 0096  
                          u4110 1EF5                            u4104 1EEC                            u4025 1096  
                          u4105 1EEA                            u4220 095F                            u4045 10B3  
                          u4213 0938                            u4055 10C4                            u2391 1E8D  
                          u4160 088C                            u4305 11C6                            u4225 094D  
                          u4153 0865                            u4250 09C8                            u4226 094F  
                          u4315 11D8                            u4243 09A1                            u4227 0955  
                          u4228 0957                            u4229 095D                            u4165 087A  
                          u3533 07D6                            u4190 08F6                            u4166 087C  
                          u4255 09B6                            u4183 08CF                            u4167 0882  
                          u3543 07F3                            u4256 09B8                            u4168 0884  
                          u4257 09BE                            u4169 088A                            u2825 1ECD  
                          u4258 09C0                            u4275 11A3                            u4259 09C6  
                          u4195 08E4                            u2835 1ED4                            _PEIE 005E  
                          u4196 08E6                            u4700 014E                            u4197 08EC  
                          u4701 0151                            _INTE 005C                            u4198 08EE  
                          u4710 016A                            u4702 0158                            _INTF 0059  
                          u4295 11B1                            u4199 08F4                            u4711 016B  
                          u4703 015B                            u5335 0E98                            _RBIE 005B  
                          u4800 0478                            u4720 01F0                            u4712 0170  
                          _RBIF 0058                            u4801 047B                            u4721 01F3  
                          u4713 0171                            u5345 0ED1                            u4810 0494  
                          u4802 0482                            u4730 020C                            u4722 01FA  
                          u5507 130B                            u2875 1F95                            u4811 0495  
                          u4803 0485                            u4731 020D                            u4723 01FD  
                          u4820 051A                            u4812 049A                            u4740 0292  
                          u4732 0212                            u5517 1330                            u2885 1F9D  
                          u4821 051D                            u4813 049B                            u4741 0295  
                          u4733 0213                            u5365 0EED                            u4830 0536  
                          u4822 0524                            u4750 02AE                            u4742 029C  
                          u5527 1355                            u4903 0612                            u4831 0537  
                          u4823 0527                            u4751 02AF                            u4743 029F  
                          u5447 0830                            u5383 0F7F                            u5375 0F11  
                          u4832 053C                            u4760 0334                            u4752 02B4  
                          u4680 00AC                            u5537 1685                            u4913 062E  
                          u4833 053D                            u4761 0337                            u4753 02B5  
                          u4681 00AF                            u5457 1216                            u4770 0350  
                          u4762 033E                            u4690 00C8                            u4682 00B6  
                          u5547 16DC                            u4843 0567                            u4771 0351  
                          u4763 0341                            u4691 00C9                            u4683 00B9  
                          u5467 1264                            u4780 03D6                            u4772 0356  
                          u4692 00CE                            u5557 1742                            u4853 0584  
                          u4781 03D9                            u4773 0357                            u4693 00CF  
                          u5477 129C                            u4790 03F2                            u4782 03E0  
                          u5567 17AB                            u5487 12C1                            u4863 05A0  
                          u4791 03F3                            u4783 03E3                            u4792 03F8  
                          u5577 17EE                            u5497 12E6                            u4873 05BC  
                          u4793 03F9                            u4883 05D9                            u4893 05F6  
                          _WPUB 0095                  ??_eeprom_write 0050                    ?_enterSwitch 0070  
             i1___lldiv@divisor 0070                            _main 0CCB                            _last 005A  
                          btemp 007E               i1___lldiv@counter 007D                            start 000E  
                         ??_led 0033                    display1@dot1 00E6                           ?_main 0070  
                         _EEADR 010D                           _ANSEL 0188                 __end_of___lldiv 11ED  
                         _T1CON 0010                 __end_of___llmod 10DB                           i1l242 0698  
                         i1l243 067C                           i1l248 06B6                           i1l524 1F06  
                         _TMR1H 000F                           _TMR1L 000E                           _TRISA 0085  
                         _TRISB 0086                           _TRISC 0087                           _TRISD 0088  
                         _TRISE 0089             ___lmul@multiplicand 0036                 __end_of_highISR 07C6  
                  ?_initializer 0070                           _nRBPU 040F                 __end_of_encoder 0800  
            i1___lldiv@dividend 0074                           _count 00BA                           _pulse 00CC  
                         pclath 000A                           status 0003                           wtemp0 007E  
            __size_ofi1___lldiv 005E              __size_ofi1___llmod 004C                 __initialization 0011  
                  __end_of_main 1000              i1___lldiv@quotient 0079                          ??_main 019E  
               ??_displayChange 0194                   display1@value 004F                   display2@value 004F  
               ??_displayString 0033                   _countingPulse 00A0                ___llmod@dividend 00E0  
                        _EEDATA 010C                          _EECON1 018C                          _EECON2 018D  
                        _ANSELH 0189               i1___llmod@divisor 0020                          i1l2830 1141  
                        i1l2840 1179                          i1l2832 1151                          i1l2844 1186  
                        i1l2860 1FEA                          i1l2854 1FBC                          i1l2856 1FCC  
                        i1l2864 1FF7                          i1l2972 0688                          i1l2982 0694  
                        i1l2998 06BC                          _INTEDG 040E                          u361_25 1153  
             i1___llmod@counter 0029                          u362_25 1168                          u363_25 117A  
                        u366_25 1FC0                          u359_25 1145                          u368_25 1FDA  
                        u369_25 1FEB                          _TMR1IE 0460                          _TMR1IF 0060  
                        _TMR1ON 0080                __end_of_dataPass 1F05                __end_of_editMenu 15FD  
                  ?_resetSwitch 0070            __size_of_eeprom_read 001B                _encoderSkipCount 00B2  
              __end_of_display1 1800                __end_of_display2 12A2                          ___lmul 1F75  
                        ___wmul 1EC2                       ??___lldiv 0047                       ??___llmod 004D  
                        _upFlag 029D            __end_of_eeprom_write 1F4D                       ??_highISR 002D  
                     ??_encoder 0030               __end_ofi1___lldiv 118F               __end_ofi1___llmod 2000  
                        saved_w 007E                 _currentStateCLK 0059                __end_of_upSwitch 1E3E  
              __end_of_viewMenu 146D         __end_of__initialization 003C                 eeprom_read@addr 0031  
          __size_of_enterSwitch 000E            __end_of_FONT_DEFAULT 1065                  __pcstackCOMMON 0070  
                  __pidataBANK1 1EA4                    __pidataBANK3 1083              _warningClothLength 00C8  
             eeprom_write@value 004F            __size_of_initializer 0028                      __pbssBANK0 0054  
                    __pbssBANK1 00A0              __size_of_increment 01A6         __size_ofi1_eeprom_write 0024  
                    _editValues 09DC                      __pmaintext 0CCB                         ?___lmul 0032  
                       ?___wmul 0032                      _blinkValue 0057                      __pintentry 0004  
                 ?_selectSwitch 0070                  ___lmul@product 003B              i1___llmod@dividend 0024  
    _previousCurrentClothLength 00EC                      _eepromRead 0040                       ?_dataPass 0070  
                     ?_editMenu 0070                       ?_display1 004F                       ?_display2 004F  
                    __stringtab 1000            __size_of_resetSwitch 000E           __size_of_eeprom_write 0024  
                increment@value 004F                       ?_upSwitch 0070                       ?_viewMenu 0070  
               __size_of___lmul 003F                  ??_selectSwitch 0030                         ___lldiv 118F  
               __size_of___wmul 0021                         ___llmod 1087                         _changed 0298  
                       _highISR 0676                      _menuSwitch 1E69                         __ptext1 135B  
                       __ptext2 080B                         __ptext3 11ED                         __ptext4 1E4C  
                       __ptext5 1F4D                         __ptext6 07C6                         __ptext7 0040  
                       __ptext8 1E89                         __ptext9 1EC2              displayChange@value 0190  
                       _encoder 07C6               __end_of_increment 09DC                         _segCode 00BE  
                  __size_of_led 002B                      ??_dataPass 0030                      ??_editMenu 0195  
                       clrloop0 0804                      ??_display1 00E4                      ??_display2 00E4  
          end_of_initialization 003C                    _encoderFlag1 0299  _currentClothLengthBalanceMinus 00B4  
                    _selectFlag 029C                    _eeprom_write 1F29                 ___lldiv@divisor 003F  
               ___lldiv@counter 004C                     ?_editValues 0070                 _editMenuPointer 00BC  
                    _rpmCounter 0054                      ??_upSwitch 0030                      ??_viewMenu 0190  
                    _timerCount 00B9                     ?_eepromRead 0070           __end_of_displayChange 1131  
                  _FONT_DEFAULT 1006                       i1___lldiv 1131                       i1___llmod 1FB4  
         __end_of_displayString 135B                   ??_eeprom_read 0030                  i1_eeprom_write 1F05  
                __end_of___lmul 1FB4                  __end_of___wmul 1EE3                     ?_menuSwitch 0070  
                 __pbitbssBANK0 0298             start_initialization 0011             __size_of_editValues 02EF  
                   __end_of_led 0836                      ?i1___lldiv 0070                      ?i1___llmod 0020  
               _viewMenuPointer 00BD            __end_of_selectSwitch 1E69                   ??_enterSwitch 0030  
        __end_ofi1_eeprom_write 1F29              _currentClothLength 00D4                 ___llmod@divisor 00DC  
               ___llmod@counter 004E             __size_of_eepromRead 0636                  _currentDisplay 005B  
                      ??___lmul 003A                        ??___wmul 0036             __end_of_eeprom_read 1EA4  
                    init_fetch0 1E78                    dataPass@data 0031                     __pdataBANK1 00BE  
                   __pdataBANK3 01A2             displayString@string 0035                       ___latbits 0002  
                 ??_initializer 0030                   __pcstackBANK0 0020                   __pcstackBANK1 00DC  
                 __pcstackBANK3 0190               __size_of_dataPass 0022               __size_of_editMenu 0190  
              eeprom_write@addr 0051               __size_of_display1 0203               __size_of_display2 00B5  
               ?i1_eeprom_write 002A             __size_of_menuSwitch 000F                       __pnvBANK0 005C  
                     __pnvBANK1 00E8                       _editValue 00BB             i1eeprom_write@value 002A  
           __end_of_enterSwitch 1E4C                        ?___lldiv 003F                        ?___llmod 00DC  
             __size_of_upSwitch 000E               __size_of_viewMenu 0112                       __pstrings 1000  
                      ?_highISR 0070                        ?_encoder 0070                       _enterFlag 029F  
                     _lastPortB 0058                       _increment 0836                       dataPass@i 0032  
                   ??i1___lldiv 0078                     ??i1___llmod 0028                       _hourMeter 005C  
           __end_of_initializer 1F75               interrupt_function 0004                  ___wmul@product 0036  
                   _encoderFlag 029A   _currentClothLengthBalancePlus 00B6                       clear_ram0 0803  
                   _eeprom_read 1E89                   ??_resetSwitch 0030                       _resetFlag 029B  
                  ??_editValues 0052                       _skipCount 00B8                     __stringbase 1005  
             ___wmul@multiplier 0032                    ??_eepromRead 0190           __size_of_selectSwitch 000F  
                    ?_increment 004F              __end_of_editValues 0CCB               ___lmul@multiplier 0032  
                   _enterSwitch 1E3E                      _EECON1bits 018C              __end_of_eepromRead 0676  
           __end_of_resetSwitch 1E5A                    _selectSwitch 1E5A                __size_of___lldiv 005E  
              __size_of___llmod 0054                    ??_menuSwitch 0030              __end_of__stringtab 1006  
              __size_of_highISR 0150                __size_of_encoder 003A                        _dataPass 1EE3  
            i1eeprom_write@addr 002C                        _editMenu 146D                     _initializer 1F4D  
                 _circumference 00D8                        __ptext10 1F75                        __ptext11 09DC  
                      __ptext20 0836                        __ptext12 1E3E                        __ptext21 15FD  
                      __ptext13 1F29                        __ptext22 1EE3                        __ptext14 146D  
                      __ptext23 1087                        __ptext15 1E69                        __ptext24 118F  
                      __ptext16 12A2                        __ptext25 0676                        __ptext17 10DB  
                      __ptext26 1F05                        __ptext18 1E30                        __ptext27 1FB4  
                      __ptext19 1E5A                        __ptext28 1131                    _resetCounter 00E8  
                      _display1 15FD                        _display2 11ED                     _metrePerMin 00A8  
                      _menuFlag 029E                   __size_of_main 0335              __end_of_menuSwitch 1E78  
                      _password 00AC          __size_of_displayChange 0056                        led@value 0035  
                      _upSwitch 1E30                        _viewMenu 135B          __size_of_displayString 00B9  
                    _INTCONbits 000B                     ??_increment 00E4                        init_ram0 1E7C  
              ??i1_eeprom_write 002B                        intlevel1 0000                ___lldiv@dividend 0043  
                   _resetSwitch 1E4C                       stringcode 1000                    _viewMenu$920 0191  
            _metrePerMinCounter 00A4                ___lldiv@quotient 0048                        stringdir 1000  
                      stringtab 1000                   _displayChange 10DB                   _displayString 12A2  
                 ?_eeprom_write 004F                      _STATUSbits 0003                    ?_eeprom_read 0070  
